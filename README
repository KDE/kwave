This is the "Kwave" source distribution, a sound editor for KDE3.

 ----------------------------------------------------------------------------
| It is hosted on SourceForge, so you are welcome to visit                   |
| the Kwave homepage at: "http://kwave.sourceforge.net".                     |
 ----------------------------------------------------------------------------

If you are interested what has been done and what has to be done, then
look at the files "CHANGES" and "TODO" included in this package.

The project is developed and published under the GNU GENERAL PUBLIC LICENSE
(Version 2, from June 1991), take a look at the file "GNU-LICENSE" included
in the source package.

0. PREFACE:
==========

Please note that required packages for compiling Kwave vary between
different distributions and versions. It is practically impossible
to give a complete list of packages and versions, so if you can't
get along, please feel free to ask on the Kwave mailing list!

If you run in problems when compiling, maybe your Qt/KDE paths are not
properly set up. So try the following before the first make and watch
carefully what the output of the compile/make system says:

(for SuSE + Qt3/KDE3)
export QTDIR=/usr/lib/qt3
export KDEDIRS=/opt/kde3

Note: You might have to change the Qt and KDE paths above according
      to your distribution

Hint: If you have a multiprocessor system, you can speed up the build
      by processing multiple targets at once by setting:

      export MAKE_FLAGS="-j4"

      where "4" is some number higher than the number of CPUs you have
      (factor 2 seemed to be reasonable on my dual-processor board)


1. COMPILING MANUALLY:
=====================

>>> NOTE: You don't have to do this on an rpm based system, you can
          easily build a rpm package of Kwave. Please skip this and
	  advance to section 2.

It's quite simple. First get the source archive, unpack it under your
favorite source-code directory (or under /tmp), change to this directory
and then type:

make -f Makefile.dist
make
make install

2. RPM-SUPPORT:
==============

You can build nice binary and/or source rpm packages of kwave in one
of the following ways. Note: Either you do everything as root or you
must have write permissions in the following directories:

* /tmp
* /usr/src/packages/BUILD
* /usr/src/packages/RPMS
* /usr/src/packages/SOURCES
* /usr/src/packages/SPECS
* /usr/src/packages/SRPMS

Installing the rpm package normally requires root permissions.

2.1 Building a binary rpm from archive file:
-------------------------------------------

Simply get the source archive (for example kwave-0.7.7.tar.gz) and
then type:

rpmbuild -ta kwave-0.7.7.tar.gz

If you want to build for a different architecture than your current, you
might want to add the parameter "--target ...", for example:

rpmbuild -ta --target i586 kwave-0.7.7.tar.gz

compiles for pentium architecture.


2.2 Building a source and binary rpm from the source tree (CVS):
---------------------------------------------------------------

Assuming that you already have unpacked the source archive in some
directory you can simply type

make -f Makefile.dist

make src.rpm          (and you get only a source rpm)
***OR***
make rpm              (and you get both, a binary and a source rpm)

Instructions on how to get the sources via CVS can be found in the
Kwave handbook and on the Kwave project homepage at SourceForge
(see "http://sourceforge.net/cvs/?group_id=6478").

Please note that the online documentation in not included in CVS, so you
have to go to the "doc" subdirectory, remove the file "changes.docbook"
and type "make" there. This requires a working docbook/sgml environment
that is sometimes problematic (see below).


3. RELOCATING THE BINARY RPM:
============================

The binary rpm package of kwave is "relocatable". This means that you can
build the package on a system with the KDE base directory set to some
location (like for example /usr/local) and install it on an other system
and/or into a different directory.

For example: you got the binary rpm from a friend who has a SuSE system
(where the KDE base dir is /opt/kde3) and want to install it
on RedHat (where the KDE base dir is /usr). Then just give a different
prefix when installing the rpm:

rpm -Uvh --prefix=/usr kwave-0.7.7-1.i586.rpm

This modifies the path where the program is installed and it is strongly
recommended that this is a directory that is contained in the KDEDIRS
environment variable, otherwise Kwave would be unable to find it's menu
configuration, plugins, preset files and so on...

4. PENTIUM OPTIMIZATION:
=======================

Yes, you can compile the RPM packages for pentium and pentium pro by using
some defines in your rpmrc file. There are also some instructions on how to
build optimized for AMDs Athlon in the online documentation (The Kwave
Handbook).

You can modify your ~/.rpmmacros file, there you can specify option
lines like these:

optflags: i386 -O2 -m486 -DNDEBUG
optflags: i586 -O2 -march=pentium -DNDEBUG -fomit-frame-pointer
optflags: i686 -O2 -march=pentiumpro -DNDEBUG -fomit-frame-pointer

(found that at "http://www.keywarrior.net/duesti/rpmopt.en.html")

This means that on an i586 architecture the rpm package will be compiled
using -march=pentium and so on, you might extend or adapt these to your
own needs.

The options specified here are set into the environment variable
RPM_OPT_FLAGS during compilation, so if you don't have an rpm based
environment and have to compile like in (1) you can set this variable
manually and get the same effect. For example:

export RPM_OPT_FLAGS="-O2 -march=pentium -fomit-frame-pointer"

Then go to chapter 1 and do ./configure / make / make install...


5. REQUIREMENTS FOR BUILDING THE ONLINE HELP:
============================================

(NOTE: you don't have to do this if you have the sources from a
tar.gz archive or source RPM - but it is the only way to get the
online help if you checked out via CVS)

Since version 0.6.3 you do no longer need the docbook utils :)
Instead you will need

- po2xml and xml2pot (included in the "kdesdk" package)
- msgmerge (included in the "gettext" package)
- kbabel (also included in kdesdk)
- checkXML (included in kdelibs)


6. REQUIREMENTS:
===============

>>> Please read the preface (section 0) before this <<<

The revision codes (numbers after the '-') should not be so important.
As a rule of thumb one can say that the nearer your version number is
the better it will work.

For compilation you need a working autoconf/automake environment, a good
C/C++ compiler, the qt and the kde libraries.

I am currently developing under a Gentoo Linux distribution
(i586 architecture) using at least the following packages:

* autoconf >= 2.50                   (always good for making trouble :-( )
* automake >= 1.8                    (or at least version 1.7 ! )
* libtool >= 1.5                     (needed for configure)
* gcc >= 3.0                         (the C / C++ compiler)

* make >= 3.80
* libstdc++-v3 >= 3.3.4              (C++ library, including STL)
* glibc >= 2.3                       (the GNU C library)
* kernel-headers                     (needed by glibc-devel)
* gettext >= 0.12                    (for internationalization)
* rpm >= 4.0                         (optional, for rpm support)
* ImageMagick >= 6.1                 (needed to create scaled Kwave icons)
* recode >= 3.6                      (for online help)

* arts >= 1.3                        (aRts sound server support)
* libmad + libmad-devel >= 0.15      (for MP3 import)
* id3lib >= 3.8.2                    (for MP3 tag import, see www.id3lib.org)
* libogg >= 1.1.2                    (for Ogg/Vorbis import/export)
* libvorbis >= 1.1.0                 (for Ogg/Vorbis import/export)
* flac >= 1.1.0                      (for FLAC import/export)
* gsl >= 1.4                         (for Sonagram plugin / FFT)

Some tools that are normally installed in every distribution:
* sed, awk, bash, msgmerge, msgfmt, xgettext, expand, cat,
  sort, uniq, find

Nearly everything from ftp.kde.org, especially the following
packets should be sufficient for building:

[WARNING: this list might be a bit outdated]

* qt3 + qt3-devel + qt3-devel-tools  (the Qt library)
* kdelibs3(-devel)                   (the KDE base libraries)
* kdemultimedia3-sound               (multimedia/aRts support)
  kdemultimedia3-devel
* kdesdk3                            (some additional tools)
* kdesdk3-translate                  (for xml2pot and others)

known distributions / architectures:
------------------------------------

see the Kwave homepage: http://kwave.sf.net/distributions.html

Compilation might also work on many other distributions and different
versions of compilers and libraries, or even on different architectures.

So if you have success in compiling and using kwave under a different system,
please let me know !

If the program does NOT compile, please let me know too - and/or consider
an update of your system if your packages are older than those mentioned
above.

currently tested distributions:
-------------------------------------------

I have currently installed some distributions for testing purposes and
for getting an impression how Kwave builds/behaves on them. Here what I
made running and what I had to install additionally:

* Ubuntu
	automake1.8 libtool g++ kdesdk recode
	libgsl0-dev libid3-dev libflac++-dev kdemultimedia-dev
	update-alternatives --set automake /usr/bin/automake-1.8

* OpenSuSE-10.0
	libjack-devel

* Debian / Sid (supported by Aurelien Jarno):
	 make imagemagick gettext gcc g++ recode libtool automake1.8
	 xlibs-dev kdelibs4-dev kdemultimedia-dev poxml
	 khelpcenter libflac-dev libflac++-dev
	 libgsl0 libgsl0-dev
	 (had to do: 'apt-get install -t testing libid3-3.8.3-dev')

* Slackware 9.0:
	(too many packages to mention here, I have given it up...)


7. KNOWN PROBLEMS / SOME HINTS:
==============================

* autoconf/automake problems:
  --------------------------
  those are always good for making trouble. Don't blame us, it's the fault
  of the autoconf/automake programmers who invent new features and
  incompatibilites without even thinking about keeping compatibility.
  -> solution: on trouble, try to downgrade autoconf/automake

* missing files:
  -------------
  Depending on your distribution, one ore more components might require
  additional packages. For example if there is a package like
  kdelibs-artsd-devel, install it too!

  Hint for SuSE users:
  => on CD1 (or on the DVD1) there is a file named "ARCHIVES.gz".
     If you want to find out which package does contain a missing program or
     file, you can do the following:

     gzip -dc ARCHIVES.gz | grep name_of_the_missing_file

* errors during "make -f Makefile.dist":
  -------------------------------------
  If you see errors about invalid or missing macros when processing
  Makefile.dist: please try updating your automake, autoconf and
  libtool packages and try again.

* warnings about invalid character set when creating online documentation:
  -----------------------------------------------------------------------
  This is quite "normal", because some tools are not aware of the
  UTF-8 encoding that is used in the .docbook and the .po files.

* hint: compiling in parallel with distcc:
  ---------------------------------------
  I successfully compiled Kwave on many systems with the following
  method:

  make -f Makefile.dist CC=distcc CXX="distcc g++"
  make -j <JOBS>

  (replace <JOBS> with a number of parallel jobs, for example the
   number of CPUs on all hosts + number of distcc hosts)

8. SOME HISTORY:
===============

This project has been started by Martin Wilz in summer 1998 and has been
developed and improved by him an some other people. In November 1999 I started
to fix some little bugs here and there and stepped into the source code of
the program deeper and deeper. Up to today I have extended, rewritten or
revised nearly every component of the program and spend much time on it.
Since summer 1999 I have taken over the project leadership and I am still
working on it.

So good luck, and feel free to keep me informed about bugs and wishes...

   Thomas Eschenbacher <Thomas.Eschenbacher@gmx.de>

