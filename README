0. PREFACE:
==========

This is the "kwave" source distribution, a sound editor for KDE2.

 ----------------------------------------------------------------------------
| It is now hosted on SourceForge, so you are welcome to visit               |
| the Kwave homepage at: "http://kwave.sourceforge.net". Normally the        |
| informations you can get there are more up to date than the stuff          |
| you get in this file. This file is only intended for users who do          |
| not have the possibility or do not like to read online.                    |
|                                                                            |
| Please also take a look at the Kwave handbook. It is available in html     |
| and is also included in the source packages under "doc/en/index.html"      |
 ----------------------------------------------------------------------------

If you are interested what has been done and what has to be done, then
look at the files "CHANGES" and "TODO" included in this package.

The project is developed and published under the GNU GENERAL PUBLIC LICENSE
(Version 2, from June 1991), take a look at the file "GNU-LICENSE" included
in the source package.

1. COMPILING MANUALLY:
=====================

>>> NOTE: You don't have to do this on an rpm based system, you can
          easily build a rpm package of Kwave. Please skip this and
	  advance to section 2.

It's quite simple. First get the source archive, unpack it under your
favorite source-code directory (or under /tmp), change to this directory
and then type:

export QTDIR=/usr/lib/qt2   (normally not necessary)
make -f Makefile.dist
make
make install

(you might have to change the qt and kde paths above according
to your distribution)

2. RPM-SUPPORT:
==============

You can build nice binary and/or source rpm packages of kwave in one
of the following ways. Note: Either you do everything as root or you
must have write permissions in the following directories:

* /tmp
* /usr/src/packages/BUILD
* /usr/src/packages/RPMS
* /usr/src/packages/SOURCES
* /usr/src/packages/SPECS
* /usr/src/packages/SRPMS

Installing the rpm package normally requires root permissions.

2.1 Building a binary rpm from archive file:
-------------------------------------------

Simply get the source archive (for example kwave-0.6.2.tar.gz) and
then type:

export QTDIR=/usr/lib/qt2   (normally not necessary)
rpm -ta kwave-0.6.2.tar.gz

If you want to build for a different architecture than your current, you
might want to add the parameter "--target=...", for example:

rpm -ta --target=i586 kwave-0.6.2.tar.gz

compiles for pentium architecture.

2.2 Building a source and binary rpm from the source tree (CVS):
---------------------------------------------------------

Assuming that you already have unpacked the source archive in some
directory you can simply type

export QTDIR=/usr/lib/qt2   (normally not necessary)
make -f Makefile.dist
make src.rpm          (and you get only a source rpm)
***OR***
make rpm              (and you get both, a binary and a source rpm)

Instructions on how to get the sources via CVS can be found in the
Kwave handbook and on the Kwave project homepage at SourceForge
(see "http://sourceforge.net/cvs/?group_id=6478").

Please note that the online documentation in not included in CVS, so you
have to go to the "doc" subdirectory, remove the file "changes.docbook"
and type "make" there. This requires a working docbook/sgml environment
that is sometimes problematic (see below).


3. RELOCATING THE BINARY RPM:
============================

The binary rpm package of kwave is "relocatable". This means that you can
build the package on a system with the KDE2 base directory set to some
location (like for example /usr/local) and install it on an other system
and/or into a different directory.

For example: you got the binary rpm from a friend who has a SuSE system
(where the KDE2 base dir is /opt/kde2) and want to install it on RedHat (where
the KDE2 base dir is /usr). Then just give a different prefix when installing
the rpm:

rpm -ivh --prefix=/usr kwave-0.6.2.i386.rpm

This modifies the path where the program is installed and it is strongly
recommended that this is a directory that is contained in the KDEDIRS
environment variable, otherwise Kwave would be unable to find it's menu
configuration, plugins, preset files and so on...

4. PENTIUM OPTIMIZATION:
=======================

Yes, you can compile the RPM packages for pentium and pentium pro by using
some defines in your rpmrc file. There are also some instructions on how to
build optimized for AMDs Athlon in the online documentation (The Kwave
Handbook).

You can either modify your system's /etc/rpmrc file or the .rpmrc file in
your home directory. There you can specify option lines like these:

optflags: i386 -O2 -m486 -DNDEBUG
optflags: i586 -O2 -march=pentium -DNDEBUG -fomit-frame-pointer
optflags: i686 -O2 -march=pentiumpro -DNDEBUG -fomit-frame-pointer

(found that at "http://www.keywarrior.net/duesti/rpmopt.en.html")

This means that on an i586 architecture the rpm package will be compiled
using -march=pentium and so on, you might extend or adapt these to your
own needs.

The options specified here are set into the environment variable
RPM_OPT_FLAGS during compilation, so if you don't have an rpm based
environment and have to compile like in (1) you can set this variable
manually and get the same effect. For example:

export RPM_OPT_FLAGS="-O2 -march=pentium -fomit-frame-pointer"

Then go to chapter 1 and do ./configure / make / make install...

5. REQUIREMENTS FOR BUILDING THE ONLINE HELP:
============================================

(NOTE: you don't have to do this if you have the sources from a
tar.gz archive or source RPM - but it is the only way to get the
online help if you checked out via CVS)

Since version 0.6.2 you do no longer need those docbook utils :)
Instead you will need

- po2xml and xml2pot (included in the "kdesdk-2.2.x" package)
- msgmerge (included in the "gettext" package)
- kbabel (also included in kdesdk-2.2.x)

6. REQUIREMENTS:
===============

For compilation you need a working autoconf/automake environment, a good
C/C++ compiler, the qt2 and the kde2 libraries. I am currently developing
under a SuSE-7.2 distribution (i386 architecture) using at least the
following packages:

* autoconf-2.13-283
* automake-1.4-278
* make-3.79.1-80
* gcc-2.95.3-73/gpp-2.95.3-73        (the C / C++ compiler)
* libgpp-2.95.3-73                   (C++ library, including STL)
* glibc-2.2-9                        (the GNU C library)
* gettext-0.10.35-132                (for internationalization)
* rpm-3.0.4-72                       (for rpm support)
* sed-3.02, awk-3.0.4, bash-2.03     (used by some scripts)

Nearly everything from ftp.kde.org, especially the following
packets should be sufficient for building:

* qt-2.3.0-13 + qt-devel-2.4.0-13    (the Qt-2 library)
* qt-designer-2.3.0-10               (for designing new-style dialogue windows)
* kdelibs-(devel-)2.2.x              (the KDE2 base libraries)
* kdemultimedia-(devel-)2.2.x        (multimedia/aRts support)
* kdesdk-2.2.x                       (some additional tools)

known distributions / architectures:
------------------------------------

* SuSE-7.2 / i386, i686 (also with KDE-2.2 from ftp.kde.org)
  [where I currently develop]

* SuSE-7.1 / i386, i586
  [no longer explictely supported, but should work the same as SuSE-7.1]

* SuSE-7.0 / i386, i586
  [nearly the same as SuSE-6.4]

* SuSE-6.4 / i386, i586
  [still tested, but needs an update of rpm]

* SuSE-6.2 / i386, i586
  [where I started to develop it, now untested]

* RedHat-6.1 (Halloween IV) / i386
  [tested v0.5.x with it, but now no longer tested]

Compilation might also work on many other distributions and different
versions of compilers and libraries, or even on different architectures.

So if you have success in compiling and using kwave under a different system,
please let me know !

If the program does NOT compile, please let me know too - and/or consider
an update of your system if your packages are older than those mentioned
above.

You need at least glibc > 2.07 for pthreads support - earlier versions of
libpthread (included in glibc) seem to crash...


7. SOME HISTORY:
===============

This project has been started by Martin Wilz in summer 1998 and has been
developed and improved by him an some other people. In November 1999 I started
to fix some little bugs here and there and stepped into the source code of
the program deeper and deeper. Up to today I have extended, rewritten or 
revised nearly every component of the program and spend much time on it.
Since summer 1999 I have taken over the project leadership and I am still
working on it.

So good luck, and feel free to keep me informed about bugs and wishes...

   Thomas Eschenbacher <Thomas.Eschenbacher@gmx.de>

