

o hourglass and process indicators for longer processes

o ruler that shows the current cursor position as time

o storage/handling of extra info (labels, cue list, author etc...)

o plugins for import/export of different file formats (e.g. MP3)
  -> through aRts/libaudiofile ?

o currently load/save uses the file extension to identify the mime type
  should be changed to an extra parameter with a KMimeType's name

o audible/silent mode of tracks (speakers)
  speaker controls for "audible" mode

o virtual memory: multiple swap directories

o gui access to file saving parameters (author, copyright, etc...)

o install a new_handler() for cases in which we run out of memory

o implementation of locking, see SampleLock

o menu entries for playback control

o open file dialog: add a preview widget that shows info about the file
  and maybe has "playback/pause/stop" buttons

o context menu for the SignalWidget with Copy/Paste etc.

o fast playback mode, playback with facor 1.5x, 3x, 5x, 7x...
  -> look how noatun does that...

o support for compressed wav files, like those found on www.montypython.net
  -> MPEG 3 is still not supported by libaudiofile

o TrackPixmap: implement usage of "extra_samples" for interpolated mode

o get Xt toolkit options working again (like -geometry)

o recording support

o Filter: class needs to be tested

o Signal::resample should use lowpass interpolation instead of spline

o check of all MessageBoxes in SignalManager

o MainWidget: re-enable accelerator keys for 0..9

o use a MenuManager in the plugins (e.g. sonagram)

o resample signal before inserting into a signal with a different sample
  rate (when doing copy/paste)

o channel mixing dialog

o amplifymax does not work
  -> aRts ?

o amplifyclip does not work
  -> aRts ?

o feature "pulse train" is not yet implemented
  -> aRts ?

o move label handling to class LabelManager

o SignalProxy1 and SignalProxy should be merged

o SignalProxy1 implementation is very inefficient for simple data types
  like bool, char, int etc. Uses to much new/delete.

o check at program startup: does the help directory exist? If not, show
  a message and make a symbolic link

o SignalWidget::appendLabel()

o SonagramWindow::toSignal()

o rework of the FFTWidget

o bugfix: crash on "additive synthesis"
  -> aRts ?

o some commands do not work: fft, averagefft, distort
  -> aRts ?

o bugfix: channel mixer dialog causes segmentation fault -> disabled
  -> aRts ?

o use standard KDE accelerators (see KStdAccel)

o playback with 24 and 32 bit (or 18, 20 bits) -> maybe needs ALSA support

o import of multi-channel ASCII files

o label handling doesn't work (currently disabled), work on LabelManager
  has not been started

o naming of the struct elements in FileFormat.h is confusing

o vertical zoom, maybe with right mouse button or zoom tool

o use namespace "Kwave" for all Kwave components

o splitting of i18n for kwave and each plugin

o more complete i18n

o use the KDE's clipboard

o support for KDE's session management

o find the reason for that short noise at the end of playback
  (does not occur when the selected range ends with some silence !)

o fix bug in Fx->Periodic Silence (segmentation fault)

o pluginize/ put into library  the following files in src/ :
  mdialog_sweep.cpp mdialog_frequency.cpp mdialog_fixedfreq.cpp addsynth.h

o context menu for right mouse button in SignalWidget

o macro recorder

o more complete documentation of the whole api

o navigation buttons on the overview widget

o TrackPixmap: different color sets if selected/deselected

o somewhere in far future: compile on architectures with a different
  size of int (not 32-bit), handle data in original data width

o test for afOpenVirtualFile() in configure script and check if
  the local system's libaudiofile can be used
  -> wait until a newer version is released and commonly integrated
     in the distributions

o figure out how to work with exceptions:
  - works if ALL libraries use rtti and we compile with -frtti
  - does never work with --no-rtti
  - the program doesn't link under RedHat with -frtti
  => no rtti and no exceptions :-(

