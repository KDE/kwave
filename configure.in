dnl without this order in this file, autoconf will not work!
dnl the argument is a source file out of your sources. But
dnl acinclude.m4 makes the job for all programs ;-)
AC_INIT(acinclude.m4)

AC_CANONICAL_SYSTEM  
AC_ARG_PROGRAM

dnl You have to change this
AM_INIT_AUTOMAKE(kwave,`cat ./VERSION`)

dnl make $KDEDIR the default for the installation
AC_PREFIX_DEFAULT(${KDEDIR:-/usr/local/kde})

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl checks, if the debug code is wanted
dnl ### AC_CHECK_FLAGS

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_LN_S

dnl find out some variables 
AC_AIX
AC_MINIX

dnl for NLS support. Call them in this order!
AC_LANG_CPLUSPLUS dnl switch to C++
AM_KDE_WITH_NLS dnl check if nls is wanted

dnl Checks for header files.
AC_LANG_CPLUSPLUS dnl switch to C++
AC_HEADER_DIRENT dnl check for dirent.h
AC_HEADER_STDC dnl check for other stdc headers. More traditional ;)
dnl check for some more header files. You can remove some of
dnl them, if you want to. But it doesn't hurt
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h sys/cdefs.h)
AC_CHECK_HEADERS(fnmatch.h sysent.h strings.h sys/stat.h)

dnl now create our libtool, the earlier the better...
AM_PROG_LIBTOOL

dnl Checks for libraries.
AC_CHECK_LIB(socket, socket, [LIBSOCKET="-lsocket -lnsl"]) dnl for Solaris' X11
AC_SUBST(LIBSOCKET)
AC_PATH_KDE dnl check X, Qt and KDE
AC_PATH_KWAVELIB dnl check for libkwave
AC_CHECK_LIB(compat, main, [LIBCOMPAT="-lcompat"]) dnl for FreeBSD
AC_SUBST(LIBCOMPAT)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME

dnl check if the compiler has bool
AC_CHECK_BOOL
dnl check if the system needs some #defines
AC_CHECK_GNU_EXTENSIONS

dnl Checks for library functions. 
AC_CHECK_FUNCS(socket vsnprintf)
AC_CHECK_SETENV
AC_LANG_CPLUSPLUS
AC_CHECK_FUNCS(getdomainname)
AC_CHECK_KSIZE_T

dnl Perform program name transformation
AC_ARG_PROGRAM

dnl output files
topdir=`pwd`
AC_SUBST(topdir)

dnl get the fields of the spec file from the lsm file

define(getlsm, $1=`bin/get_lsm_entry.sh kwave.lsm $2`)

getlsm(RPM_DESCRIPTION, Description)
getlsm(RPM_SUMMARY, Keywords)
getlsm(RPM_NAME, Title)
getlsm(RPM_COPYRIGHT, Copying-policy)
getlsm(RPM_URL, Homepage)
getlsm(RPM_VENDOR, Author)

changequote(<<, >>)
RPM_VERSION=`cat ./VERSION | awk '{ split($0, a, "-") } END { print a[1] }'`
RPM_RELEASE=`cat ./VERSION | awk '{ split($0, a, "-") } END { print a[2]+0 }'`
RPM_SOURCE0=<<kwave-%{version}.tgz>>
RPM_GROUP=<<X11/Applications/Sound>>
RPM_BUILDROOT=<</tmp/kwave-%{version}.root>>
changequote([, ])

dnl enter the variables for the spec file
AC_SUBST(RPM_DESCRIPTION)
AC_SUBST(RPM_SUMMARY)
AC_SUBST(RPM_NAME)
AC_SUBST(RPM_VERSION)
AC_SUBST(RPM_RELEASE)
AC_SUBST(RPM_SOURCE0)
AC_SUBST(RPM_GROUP)
AC_SUBST(RPM_COPYRIGHT)
AC_SUBST(RPM_URL)
AC_SUBST(RPM_VENDOR)
AC_SUBST(RPM_BUILDROOT)

dnl add here all your Makefiles
AC_OUTPUT(Makefile \
	libgui/Makefile \
	src/Makefile \
	plugins/Makefile \
	plugins/dialogs/Makefile \
	plugins/dialogs/template/Makefile \
	po/Makefile \
	kwave.spec )

