dnl without this order in this file, autoconf will not work!
dnl the argument is a source file out of your sources. But
dnl acinclude.m4 makes the job for all programs ;-)
AC_INIT(acinclude.m4)

AC_CANONICAL_SYSTEM  
AC_ARG_PROGRAM

dnl You have to change this
AM_INIT_AUTOMAKE(kwave,`cat ./VERSION`)

AM_DISABLE_STATIC
AM_ENABLE_SHARED

dnl make $KDEDIR the default for the installation
AC_PREFIX_DEFAULT(${KDEDIR:-/usr})

dnl generate the config header
AM_CONFIG_HEADER(config.h) dnl at the distribution this done

dnl Checks for programs.
AC_PROG_LN_S

AC_CHECK_COMPILERS
dnl AC_PROG_CC
dnl AC_PROG_CPP
dnl AC_PROG_CXX

dnl checks, if the debug code is wanted
AC_CHECK_FLAGS

CFLAGS="${CFLAGS} --no-rtti ${RPM_OPT_FLAGS}"
CXXFLAGS="${CXXFLAGS} --no-rtti ${RPM_OPT_FLAGS}"

#AC_MSG_CHECKING(pentium optimization)
#case "$target_cpu" in
#	i586 | i686 )
#		AC_MSG_RESULT("yes")
#		optimize="-march=pentium"
#	;;
#	*)
#		AC_MSG_RESULT("no");
#		optimize=""
#	;;
#esac
#CFLAGS="${CFLAGS} ${optimize}"
#CXXFLAGS="${CXXFLAGS} ${optimize}"

dnl now create our libtool, the earlier the better...
AM_PROG_LIBTOOL

dnl find out some variables 
AC_AIX
AC_MINIX

dnl for NLS support. Call them in this order!
AC_LANG_CPLUSPLUS dnl switch to C++

AC_TYPE_SIZE_T
AC_CHECK_SIZEOF(char,1)
AC_CHECK_SIZEOF(short,2)
AC_CHECK_SIZEOF(int,4)
if test $ac_cv_sizeof_char != 1 ; then
	AC_MSG_WARN([******************************************************************])
	AC_MSG_WARN([*** sizeof (char) != 1                                            ])
	AC_MSG_WARN([******************************************************************])
	fi
if test $ac_cv_sizeof_short != 2 ; then
	AC_MSG_WARN([******************************************************************])
	AC_MSG_WARN([*** sizeof (short) != 2.                                          ])
	AC_MSG_WARN([******************************************************************])
	fi
if test $ac_cv_sizeof_int != 4 ; then
	AC_MSG_WARN([******************************************************************])
	AC_MSG_WARN([*** sizeof (int) != 4.                                            ])
	AC_MSG_WARN([******************************************************************])
	fi

AM_KDE_WITH_NLS dnl check if nls is wanted

dnl Checks for header files.
AC_LANG_CPLUSPLUS dnl switch to C++
AC_HEADER_DIRENT dnl check for dirent.h
AC_HEADER_STDC dnl check for other stdc headers. More traditional ;)
dnl check for some more header files. You can remove some of
dnl them, if you want to. But it doesn't hurt
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h sys/cdefs.h)
AC_CHECK_HEADERS(fnmatch.h sysent.h strings.h sys/stat.h)
dnl AC_CHECK_HEADERS(linux/soundcard.h)

dnl Checks for libraries.
AC_CHECK_LIB(socket, socket, [LIBSOCKET="-lsocket -lnsl"]) dnl for Solaris' X11
AC_SUBST(LIBSOCKET)
AC_PATH_KDE dnl check X, Qt and KDE
AC_PATH_KWAVELIB dnl check for libkwave
AC_CHECK_LIB(compat, main, [LIBCOMPAT="-lcompat"]) dnl for FreeBSD
AC_SUBST(LIBCOMPAT)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_TIME

dnl check if the compiler has bool
AC_CHECK_BOOL
dnl check if the system needs some #defines
AC_CHECK_GNU_EXTENSIONS

dnl Checks for library functions. 
AC_CHECK_FUNCS(socket vsnprintf)
AC_CHECK_SETENV
AC_CHECK_FUNCS(getdomainname)
AC_CHECK_KSIZE_T

dnl output files
topdir=`pwd`
AC_SUBST(topdir)

dnl get the fields of the spec file from the lsm file

define(getlsm, $1=`bin/get_lsm_entry.sh kwave.lsm $2`)

getlsm(RPM_DESCRIPTION, Description)
getlsm(RPM_SUMMARY, Keywords)
getlsm(RPM_NAME, Title)
getlsm(RPM_COPYRIGHT, Copying-policy)
getlsm(RPM_URL, Homepage)
getlsm(RPM_VENDOR, Author)

changequote(<<, >>)
RPM_VERSION=`cat ./VERSION | awk '{ split($0, a, "-") } END { print a[1] }'`
RPM_RELEASE=`cat ./VERSION | awk '{ split($0, a, "-") } END { print a[2]+0 }'`
RPM_SOURCE0=<<kwave-`cat ./VERSION`.tar.gz>>
RPM_GROUP=<<X11/Applications/Sound>>
RPM_BUILDROOT=<</tmp/kwave-%{version}.root>>
LD_VERSION_INFO=<<`cat ./VERSION | awk '{split($0, a, ".")} \
	{relpos=index(a[3],"-")} \
	{rel=relpos==0 ? a[3] : substr(a[3], 1, relpos-1)} \
END	{printf("%d:%d:%d", a[1]+a[2], rel, a[2]) }'`>>
changequote([, ])

dnl enter the variables for the spec file
AC_SUBST(RPM_DESCRIPTION)
AC_SUBST(RPM_SUMMARY)
AC_SUBST(RPM_NAME)
AC_SUBST(RPM_VERSION)
AC_SUBST(RPM_RELEASE)
AC_SUBST(RPM_SOURCE0)
AC_SUBST(RPM_GROUP)
AC_SUBST(RPM_COPYRIGHT)
AC_SUBST(RPM_URL)
AC_SUBST(RPM_VENDOR)
AC_SUBST(RPM_BUILDROOT)
AC_SUBST(LD_VERSION_INFO)

dnl add here all your Makefiles
AC_OUTPUT(Makefile \
	libgui/Makefile \
	src/Makefile \
	plugins/Makefile \
	plugins/dialogs/Makefile \
	plugins/dialogs/template/Makefile \
	po/Makefile \
	kwave.spec )

