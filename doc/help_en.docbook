<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.2-Based Variant V1.1//EN" "dtd/kdex.dtd" [
  <!ENTITY kwave "<application>Kwave</application>">
  <!ENTITY kappname "&kwave;">
  <!ENTITY % English "INCLUDE"> <!-- change language only here -->
  <!ENTITY % addindex "IGNORE">
  <!ENTITY version "0.8.99-2">
  <!ENTITY version_tag "0_8_99-2">
  <!ENTITY version_year "2015">
  <!ENTITY % ents PUBLIC "-//KDE//ENTITIES Application-Variable Entities V2.0//EN" "entities/kde-prologue.entities">
  <!ENTITY url_authors "http://sourceforge.net/p/kwave/code/ci/HEAD/tree/AUTHORS">
  <!ENTITY url_changelog "http://sourceforge.net/p/kwave/code/ci/HEAD/tree/CHANGES">
  <!ENTITY url_cmake "http://www.cmake.org">
  <!ENTITY url_debian "http://www.debian.org">
  <!ENTITY url_download "http://kwave.sourceforge.net/download.html">
  <!ENTITY url_doxygen "http://www.stack.nl/~dimitri/doxygen">
  <!ENTITY url_flac "http://flac.sourceforge.net/">
  <!ENTITY url_homepage "http://kwave.sourceforge.net/">
  <!ENTITY url_id3lib "http://id3lib.sourceforge.net/">
  <!ENTITY url_iso639 "http://www.loc.gov/standards/iso639-2/php/code_list.php">
  <!ENTITY url_kde_l10n "http://l10n.kde.org/">
  <!ENTITY url_kde_localize "http://userbase.kde.org/Lokalize/">
  <!ENTITY url_kde_screenshots "http://l10n.kde.org/docs/screenshots.php">
  <!ENTITY url_lame "http://lame.sourceforge.net/">
  <!ENTITY url_levelmeter "http://www.rikkus.info/esound-level-meter/">
  <!ENTITY url_libaudiofile "http://www.68k.org/~michael/audiofile/">
  <!ENTITY url_libmad "http://www.underbit.com/products/mad/">
  <!ENTITY url_libsndfile "http://www.mega-nerd.com/libsndfile/">
  <!ENTITY url_licenses "http://sourceforge.net/p/kwave/code/ci/HEAD/tree/LICENSES">
  <!ENTITY url_mailinglist "https://lists.sourceforge.net/lists/listinfo/kwave-devel">
  <!ENTITY url_ogg_vorbis "http://www.xiph.org">
  <!ENTITY url_readme "http://sourceforge.net/p/kwave/code/ci/HEAD/tree/README">
  <!ENTITY url_rfc2361 "http://www.ietf.org/rfc/rfc2361.txt">
  <!ENTITY url_rfc3066 "http://www.ietf.org/rfc/rfc3066.txt">
  <!ENTITY url_sourceforge "http://sourceforge.net">
  <!ENTITY url_sox "http://sox.sourceforge.net/">
  <!ENTITY url_git_instructions "http://sourceforge.net/p/kwave/code/">
  <!ENTITY url_git_web "http://sourceforge.net/p/kwave/code/commit_browser">
  <!ENTITY url_git_list_tags "http://sourceforge.net/p/kwave/code/ref/master~/tags/">
  <!ENTITY url_git_master "git://git.code.sf.net/p/kwave/code">
  <!ENTITY i18n-cmd_syntax "Syntax: ">
  <!ENTITY no-i18n-tag "">
  <!-- @COMMAND_ENTITIES_START@ -->
  <!ENTITY no-i18n-cmd_about_kde "about_kde">
  <!ENTITY no-i18n-cmd_add_label "add_label">
  <!ENTITY no-i18n-cmd_add_track "add_track">
  <!ENTITY no-i18n-cmd_clipboard_flush "clipboard_flush">
  <!ENTITY no-i18n-cmd_close "close">
  <!ENTITY no-i18n-cmd_continue "continue">
  <!ENTITY no-i18n-cmd_copy "copy">
  <!ENTITY no-i18n-cmd_crop "crop">
  <!ENTITY no-i18n-cmd_cut "cut">
  <!ENTITY no-i18n-cmd_delete "delete">
  <!ENTITY no-i18n-cmd_delete_label "delete_label">
  <!ENTITY no-i18n-cmd_delete_track "delete_track">
  <!ENTITY no-i18n-cmd_dump_metadata "dump_metadata">
  <!ENTITY no-i18n-cmd_edit_label "edit_label">
  <!ENTITY no-i18n-cmd_expandtolabel "expandtolabel">
  <!ENTITY no-i18n-cmd_fileinfo "fileinfo">
  <!ENTITY no-i18n-cmd_forward "forward">
  <!ENTITY no-i18n-cmd_goto "goto">
  <!ENTITY no-i18n-cmd_insert_at "insert_at">
  <!ENTITY no-i18n-cmd_insert_track "insert_track">
  <!ENTITY no-i18n-cmd_loadbatch "loadbatch">
  <!ENTITY no-i18n-cmd_loop "loop">
  <!ENTITY no-i18n-cmd_menu "menu">
  <!ENTITY no-i18n-cmd_msgbox "msgbox">
  <!ENTITY no-i18n-cmd_newsignal "newsignal">
  <!ENTITY no-i18n-cmd_next "next">
  <!ENTITY no-i18n-cmd_open "open">
  <!ENTITY no-i18n-cmd_openrecent "openrecent">
  <!ENTITY no-i18n-cmd_paste "paste">
  <!ENTITY no-i18n-cmd_pause "pause">
  <!ENTITY no-i18n-cmd_playback_start "playback_start">
  <!ENTITY no-i18n-cmd_plugin "plugin">
  <!ENTITY no-i18n-cmd_plugin_execute "plugin:execute">
  <!ENTITY no-i18n-cmd_plugin_setup "plugin:setup">
  <!ENTITY no-i18n-cmd_prev "prev">
  <!ENTITY no-i18n-cmd_quit "quit">
  <!ENTITY no-i18n-cmd_redo "redo">
  <!ENTITY no-i18n-cmd_redo_all "redo_all">
  <!ENTITY no-i18n-cmd_reenable_dna "reenable_dna">
  <!ENTITY no-i18n-cmd_reset_toolbars "reset_toolbars">
  <!ENTITY no-i18n-cmd_revert "revert">
  <!ENTITY no-i18n-cmd_rewind "rewind">
  <!ENTITY no-i18n-cmd_save "save">
  <!ENTITY no-i18n-cmd_saveas "saveas">
  <!ENTITY no-i18n-cmd_saveselect "saveselect">
  <!ENTITY no-i18n-cmd_select_gui_type "select_gui_type">
  <!ENTITY no-i18n-cmd_select_track_all "select_track:all">
  <!ENTITY no-i18n-cmd_select_track_invert "select_track:invert">
  <!ENTITY no-i18n-cmd_select_track_none "select_track:none">
  <!ENTITY no-i18n-cmd_select_track_off "select_track:off">
  <!ENTITY no-i18n-cmd_select_track_on "select_track:on">
  <!ENTITY no-i18n-cmd_select_track_toggle "select_track:toggle">
  <!ENTITY no-i18n-cmd_selectall "selectall">
  <!ENTITY no-i18n-cmd_selectnext "selectnext">
  <!ENTITY no-i18n-cmd_selectnextlabels "selectnextlabels">
  <!ENTITY no-i18n-cmd_selectnone "selectnone">
  <!ENTITY no-i18n-cmd_selectprev "selectprev">
  <!ENTITY no-i18n-cmd_selectprevlabels "selectprevlabels">
  <!ENTITY no-i18n-cmd_selecttoleft "selecttoleft">
  <!ENTITY no-i18n-cmd_selecttoright "selecttoright">
  <!ENTITY no-i18n-cmd_selectvisible "selectvisible">
  <!ENTITY no-i18n-cmd_start "start">
  <!ENTITY no-i18n-cmd_stop "stop">
  <!ENTITY no-i18n-cmd_undo "undo">
  <!ENTITY no-i18n-cmd_undo_all "undo_all">
  <!ENTITY no-i18n-cmd_view_scroll_end "view:scroll_end">
  <!ENTITY no-i18n-cmd_view_scroll_left "view:scroll_left">
  <!ENTITY no-i18n-cmd_view_scroll_next "view:scroll_next">
  <!ENTITY no-i18n-cmd_view_scroll_next_label "view:scroll_next_label">
  <!ENTITY no-i18n-cmd_view_scroll_prev "view:scroll_prev">
  <!ENTITY no-i18n-cmd_view_scroll_prev_label "view:scroll_prev_label">
  <!ENTITY no-i18n-cmd_view_scroll_right "view:scroll_right">
  <!ENTITY no-i18n-cmd_view_scroll_start "view:scroll_start">
  <!ENTITY no-i18n-cmd_view_zoom_all "view:zoom_all">
  <!ENTITY no-i18n-cmd_view_zoom_in "view:zoom_in">
  <!ENTITY no-i18n-cmd_view_zoom_normal "view:zoom_normal">
  <!ENTITY no-i18n-cmd_view_zoom_out "view:zoom_out">
  <!ENTITY no-i18n-cmd_view_zoom_selection "view:zoom_selection">
  <!ENTITY no-i18n-cmd_window_activate "window:activate">
  <!ENTITY no-i18n-cmd_window_cascade "window:cascade">
  <!ENTITY no-i18n-cmd_window_next_sub "window:next_sub">
  <!ENTITY no-i18n-cmd_window_prev_sub "window:prev_sub">
  <!ENTITY no-i18n-cmd_window_tile "window:tile">
  <!ENTITY no-i18n-cmd_window_tile_vertical "window:tile_vertical">
  <!-- @COMMAND_ENTITIES_END@ -->
]>

<book lang="&language;">

<bookinfo>
    <title>The &kwave; Handbook</title>

    <authorgroup>
	<author>
	    <firstname>Thomas</firstname>
	    <surname>Eschenbacher</surname>
	    <affiliation>
	    <address><email>thomas.eschenbacher@gmx.de</email></address>
	    </affiliation>
	</author>

	<!-- TRANS:ROLES_OF_TRANSLATORS -->

    </authorgroup>

    <copyright><year>1998-2000</year><holder>Martin Wilz</holder></copyright>
    <copyright><year>&version_year;</year><holder>Thomas Eschenbacher</holder></copyright>

    <legalnotice>&FDLNotice;</legalnotice>

    <date>2015-01-02</date>
    <releaseinfo>&version;</releaseinfo>

    <abstract><para>&kwave; is a simple sound editor for KDE.</para></abstract>

    <keywordset>
	<keyword>&no-i18n-tag;KDE</keyword>
	<keyword>&no-i18n-tag;multimedia</keyword>
	<keyword>&no-i18n-tag;sound</keyword>
	<keyword>&no-i18n-tag;audio</keyword>
	<keyword>&no-i18n-tag;Kwave</keyword>
	<keyword>&no-i18n-tag;wav</keyword>
	<keyword>&no-i18n-tag;editor</keyword>
	<keyword>&no-i18n-tag;record</keyword>
	<keyword>&no-i18n-tag;playback</keyword>
	<keyword>&no-i18n-tag;sonagram</keyword>
	<keyword>&no-i18n-tag;FFT</keyword>
	<keyword>&no-i18n-tag;Linux</keyword>
    </keywordset>
</bookinfo>

<!-- ###################################################################### -->
<!-- ### Chapter: Introduction                                          ### -->
<!-- ###################################################################### -->

<chapter id="introduction"><title>Introduction</title>

    <para>
    	This is "&kwave;", a simple sound editor for KDE-4.
	Its features include:
	<itemizedlist>
    	<listitem><para>
	    a user interface that can be switched to SDI, MDI or Tab mode
	</para></listitem>
    	<listitem><para>
	    simple cut, copy and paste functions
	</para></listitem>
    	<listitem><para>
	    multi-level undo/redo
	</para></listitem>
<!-- @TODO@   	<listitem><para>
	    simple filter design tools
	</para></listitem> -->
<!-- @TODO@    	<listitem><para>
	    a small editor for additive synthesis
	</para></listitem> -->
	<listitem><para>
	    labeling of signals
	</para></listitem>
    	<listitem><para>
	    Recording functionality, including pre-recording
	</para></listitem>
    	<listitem><para>
	    Playback via ALSA and OSS
	</para></listitem>
    	<listitem><para>
	    Recording via ALSA and OSS
	</para></listitem>
    	<listitem><para>
	    MP3 import/export
	</para></listitem>
    	<listitem><para>
	    Ogg/Vorbis import/export
	</para></listitem>
    	<listitem><para>
	    FLAC import/export
	</para></listitem>
    	<listitem><para>
	    some analysis functions such as Sonagram <!-- or Fourier Transformation -->
	</para></listitem>
    	<listitem><para>
	    internally uses 24 bit fixed precision for sample data
    	</para></listitem>
    	<listitem><para>
	    free selectable sample rates
	</para></listitem>
    	<listitem><para>
	    support for editing of multi channel files
	</para></listitem>
    	<listitem><para>
	    playback of multi channel audio files (audio output will be
	    mixed down to mono or stereo)
	</para></listitem>
	<listitem><para>
	    extendible through an easy-to-use plugin interface
	</para></listitem>
	<listitem><para>
	    import/export of other audio formats through
	    <ulink url="&url_libaudiofile;">audiofile</ulink>
	</para></listitem>
	</itemizedlist>
    </para>

    <para>
	If you are interested what has been done and what has still to be
        done, then look at the files <filename>CHANGES</filename> and
	<filename>TODO</filename> included in the
        source package. Help and constructive critics are always welcome.
    </para>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Kwave Resources                                       +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="resources">
    <title>&kwave; Resources</title>

    <para>
	So if you want to get in contact with the developers, need some
	further help on using &kwave;, submit patches, bug reports or other
	stuf, the following resources might be of interest for you:
    </para>

    <itemizedlist>
        <listitem><para>
        Project Homepage<anchor id="project-homepage"/></para><para>
            For information about new up-to-date releases or some other
	    information about this project, take a look at
	    the <ulink url="&url_homepage;">&kwave; homepage</ulink>
        </para></listitem>
        <listitem><para>
        Mailing List<anchor id="mailing-list"/></para><para>
	If you need some help on using &kwave; or want to get involved
	    in the development, join the Kwave developer mailing list
	    by visiting
	    <ulink url="&url_mailinglist;"> "&url_mailinglist;"</ulink>.
	</para></listitem>
	<listitem><para>
	    GIT Repository<anchor id="git-repository"/>
	</para>
	<para>
	    There also is a GIT repository, hosted by
	    <ulink url="&url_sourceforge;">SourceForge</ulink> where
	    you can get the sources of the latest development version.
	    For instructions on how to get access to the repository, read
	    in the chapter about
	    <link linkend="building_rpm_from_git">building from GIT</link>,
	    or look at
	    <ulink url="&url_git_instructions;">"&url_git_instructions;"</ulink>.
	    There also is a nice <ulink url="&url_git_web;">web interface</ulink>
	    you can use to browse through the sources.
        </para></listitem>
    </itemizedlist>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Revision History                                      +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="changes">
    <title>&kwave; Revision History</title>

    <para>
	This project has been started by Martin Wilz in summer 1998
	and has been developed and improved by him an some other
	people. In November 1999 Thomas Eschenbacher has started
	to fix some little bugs here and there and stepped into
	the source code of the program deeper and deeper. Up to
	today he has extended, rewritten or revised nearly every
	component of the program and spent much time on improving it.
    </para>

    <para>
	Since &kwave; v0.8.0 the changelog is no longer included in this
	manual. So if you are interested in a complete list of changes,
	you can find the full history here:
	<ulink url="&url_changelog;"> &url_changelog;</ulink> or browse
	through the sources on your own through the
	<ulink url="&url_git_web;">GIT web interface</ulink>.
    </para>

    <!-- changelog cut out, this gives a smaller online help
         and *much* less work for the translators... -->

    </sect1>
</chapter>

<!-- ###################################################################### -->
<!-- ### Chapter: Installation                                          ### -->
<!-- ###################################################################### -->

<chapter id="installation"><title>Installation</title>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Getting Kwave                                         +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="getting"><title>How to obtain &kwave;</title>

    <para>
    	&kwave; has an own homepage under
    	<ulink url="&url_homepage;">&url_homepage;</ulink>. Here you can
	find further information about the project, as well as
	information about current stable and up-to-date development
	versions.
    </para>

    <para>
	If you want to get a &kwave; release, you have the choice to visit
	<ulink url="&url_download;">&url_download;</ulink> and
	<itemizedlist>
	<listitem><para>
	    download a binary package of the latest stable version, if
	    there is one for your distribution,
	</para></listitem>
	<listitem><para>
	    download a source RPM package of the latest stable version,
	</para></listitem>
	<listitem><para>
	    compile on your own, from a .tar.bz2 archive with the source code
	    of the latest stable version,
	</para></listitem>
	<listitem><para>
	    compile on your own, from the latest GIT source.
	</para></listitem>
	</itemizedlist>
    </para>

    <para>
	Don't be afraid, compiling Kwave should be quite simple even if
	you are not a programmer. It just needs some developer packages
	to be installed.
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Requirements                                          +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="requirements"><title>Requirements</title>

    <para>
    	In order to successfully use &kwave;, you need:
	<itemizedlist>
	    <listitem><para>
		a computer running Linux (&kwave; might also run under
		some other operating system, but we have never tested
		this, please let us know if you get it working under
		some other platform / operating system)
	    </para></listitem>
	    <listitem><para>
		working sound playback (not really required for using but
		what would you do with a sound editor if you can't
		<emphasis>hear</emphasis> the result of your work?)
	    </para></listitem>
	    <listitem><para>
		KDE-4.5 or higher (at least the libraries, if you are
		a gnome fan, you can also run &kwave; if the proper
		libs are installed).
	    </para></listitem>
	    <listitem><para>
		Qt-4.7 or higher (normally comes with KDE4)
	    </para></listitem>
	    <listitem><para>
		ALSA 1.0.14 or higher (for record/playback)
	    </para></listitem>
	    <listitem><para>
		PulseAudio 4.0 or higher (for record/playback)
	    </para></listitem>
	    <listitem><para>
		id3lib-3.8.1 or higher (for ID3 tags)
	    </para></listitem>
	    <listitem><para>
		mad-0.15 or higher (optionally for MP3 import/export)
	    </para></listitem>
	    <listitem><para>
		flac-1.2.0 or higher (for FLAC import/export)
	    </para></listitem>
            <listitem><para>
                libsamplerate-0.1.3 or higher (sample rate conversion)
            </para></listitem>
	</itemizedlist>
    </para>

    <para>
	For a more complete and up-to-date list, please consult the
	<ulink url="&url_readme;">'README'</ulink> file that is included
	in the source distribution.
	This file also contains some special hints for getting &kwave; running and/or
	building &kwave; under some distributions.
    </para>

    <para>
    	If you intend to compile &kwave; from the sources, you will need at least:
	<itemizedlist>
	    <listitem><para>
		<ulink url="&url_cmake;">cmake</ulink>-2.4.6 or newer
	    </para></listitem>
	    <listitem><para>
		A recent C/C++ compiler. GCC-4.x works fine, some older and any
		newer version (like gcc-4.8 and newer) may work too.
	    </para></listitem>
	    <listitem><para>
		The glibc2 (libc-6) development environment. On SuSE systems
		the package is called "libc", on other systems it might be
		called "libc-devel".
	    </para></listitem>
	    <listitem><para>
		The KDE4 development environment: "kdelibs4-devel",
		"kdemultimedia4-devel", "kdesdk4".
	    </para></listitem>
	    <listitem><para>
		The Qt4 development environment,
		the package is normally called "qt4-devel" or similar.
	    </para></listitem>
	    <listitem><para>
		pulseaudio-4.0 or newer
	    </para></listitem>
	    <listitem><para>
		id3lib-devel-3.8.1 or newer
	    </para></listitem>
	    <listitem><para>
		fftw-3.0 or newer
	    </para></listitem>
	    <listitem><para>
		mad-devel-0.15 or newer
		(if you have the permission to use MP3 code)
	    </para></listitem>
	    <listitem><para>
		flac-devel-1.2.0 newer
	    </para></listitem>
	    <listitem><para>
		If you intend to get the &kwave; sources via GIT, you will also
		need a current git package.
	    </para></listitem>
	    <listitem><para>
		...many other packages, please take a look at the
		<ulink url="&url_readme;">'README'</ulink> file included in
		the source package.
	    </para></listitem>
	</itemizedlist>
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Manual Compilation                                    +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="manual_compilation"><title>Manual Compilation and installation</title>

    <para>
	Since version 0.7.10 &kwave; uses
	<ulink url="&url_cmake;">cmake</ulink>, a make system
	that is also used by KDE itself. So if you know how to build other KDE
	applications, you should not have any difficulties in building &kwave;.
	If you run into problems please report them to
	the &kwave; <link linkend="mailing-list">mailing list</link>.
    </para>

    <para>
	In order to compile and install &kwave; on your system, it is best
	practice to do a <emphasis>out-of-tree</emphasis> build. This means
	that you hold the sources of &kwave; in one directory and build the
	package in another (temporary) directory.
    </para>

    <para>
	For example, assuming that your sources are already
	unpacked in <filename><replaceable>$HOME/src/kwave-&version;</replaceable></filename>, you
	can do the following:
<screen width="50" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>mkdir /tmp/kwave-build</command>
&no-i18n-tag;<prompt>% </prompt><command>cd /tmp/kwave-build</command>
&no-i18n-tag;<prompt>% </prompt><command>cmake <replaceable>$HOME/src/kwave-&version;</replaceable> <replaceable>[build options]</replaceable></command>
&no-i18n-tag;<prompt>% </prompt><command>make</command>
&no-i18n-tag;<prompt>% </prompt><command>su root -c "make install"</command>
</screen>
	(Specifying build options is a way to enable or disable specific features.
	See the following section for descriptions)
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Build options                                         +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="build_options"><title>Build options</title>

	<para>
	    By specifying build options, you can enable or disable some features
	    of &kwave;, like excluding some components or plugins from the
	    generated package. Here is a list of the available options:

	    <itemizedlist>
		<listitem><para>
		    <literal>WITH_ALSA</literal>
		    enable playback/recording via ALSA
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_DEBUG</literal>
		    build a debug version
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>off</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_DOC</literal>
		    build online documentation
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_FLAC</literal>
		    enable support for FLAC files
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_MP3</literal>
		    enable support for mp3 files
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>off</literal>]
		    Please note that you need the permission to use code
		    covered by the MP3 software patents!
		</para></listitem>
		<listitem><para>
		    <literal>WITH_OGG_OPUS</literal>
		    enable support for Ogg/Opus files
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_OGG_VORBIS</literal>
		    enable support for Ogg/Vorbis files
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_OPTIMIZED_MEMCPY</literal>
		    use an optimized version of memcpy, available for
		    X86, X86_64 and PPC platforms
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_OSS</literal>
		    enable playback/recording via OSS
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_PHONON</literal>
		    enable playback via Phonon (for testing only)
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>off</literal>]
		</para></listitem>
		<listitem><para>
		    <literal>WITH_PULSEAUDIO</literal>
		    enable playback/recording via PulseAudio
		    [<literal>on</literal>/<literal>off</literal>,
		    default=<literal>on</literal>]
		</para></listitem>
	    </itemizedlist>
	</para>

	<para>
	    These options can be passed to <literal><command>cmake</command></literal>
	    with <command><literal>-D</literal><replaceable>option</replaceable><literal>=</literal><replaceable>value</replaceable></command>.
	    For example, if you want to enable MP3 support,
	    you can pass the corresponding option as follows:
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>cmake <replaceable>[source directory]</replaceable> -DWITH_MP3=ON <replaceable>[other options...]</replaceable></command>
</screen>
	</para>
    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Building RPM packages from tar.bz2 archives           +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="building_rpm_from_tarbz2">
    <title>Building RPM packages from tar.bz2 archives</title>

    <sect2 id="building_with_rpm_ta">
    <title>With working rpmbuild -ta</title>

    <para>
	If you are runnig a system with RPM support, the preferred way to
	install &kwave; on your system will be the creation of a nice RPM
	package. First you should get the current source of &kwave;, either
	as a tar.bz2 archive from the &kwave; download page or
	check out an up-to-date copy via
	<link linkend="git-repository">GIT</link> (like described in
	the <link linkend="git_checkout">chapter about GIT</link>) and read the
	<link linkend="building_rpm_from_git">next</link> chapter.
    </para>

    <para>
	If you have downloaded a tar.bz2 archives of &kwave;,
	create and install the RPMs just by doing the following steps
	(where <replaceable>[arch]</replaceable> stands for the platform you
	have built the package and might be something like
	<literal>i586</literal>, <literal>i686</literal>,
	<literal>sparc</literal> or whatever,
	<replaceable>XXX</replaceable> stands for the version number
	you have downloaded).
    </para>

    <para>
    To build the &kwave; package and install it do:
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>rpmbuild -ta <replaceable>kwave-XXX.tar.bz2</replaceable></command>
&no-i18n-tag;<prompt>% </prompt><command>rpm -i <replaceable>/usr/src/redhat/RPMS/[arch]/kwave-XXX.[arch].rpm</replaceable></command>
</screen>
    </para>

    <note><para>
	<emphasis>Note for SuSE users: </emphasis>
	you have to specify the directory
	<filename>/usr/src/packages</filename> instead
	of <filename>/usr/src/redhat</filename> !
    </para></note>

    <para>
	If you haven't seen any errors, then that's it and you can skip the
	rest of this chapter. If rpm was unable to build the packages
	and says something like "spec file not found", then go on and
	read the rest of this section.
    </para>

    </sect2>

    <sect2 id="rpm_build_with_broken_rpm">
    <title>With broken rpmbuild -ta support</title>

    <para><anchor id="manual_rpm_creation"/>
	If you can't get <command>rpmbuild -ta</command> working, here are
	the steps for making that manually (the hard way):
    </para>

    <orderedlist>
	<listitem><para>
	    Go to your RPM "topdir". This normally
	    is <filename>/usr/src/redhat</filename>
	    for the redhat distribution
	    or <filename>/usr/src/packages</filename> if you
	    have the SuSE distribution.
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>cd /usr/src/<replaceable>redhat</replaceable></command>
</screen>
	</para></listitem>

	<listitem><para>
	    Put the tar.bz2 archive into the SOURCES subdirectory (you
	    have to replace "somewhere" with the real directory where
	    the files are, of course).
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>cp <replaceable>/somewhere/kwave-XXX.tar.bz2</replaceable> SOURCES</command>
</screen>
	</para></listitem>

	<listitem><para>
	    Extract the spec file from the archives and put it into
	    the SPEC subdirectory.
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>tar -xOjf SOURCES/<replaceable>kwave-XXX.tar.bz2</replaceable> \*.spec > SPECS/kwave.spec</command>
</screen>
	</para></listitem>

	<listitem><para>
	    Let rpm do the compile job and generate the rpm of &kwave;.
	    If you only want to make a binary package, you
	    can specify <literal>-bb</literal> instead of
	    <literal>-ba</literal>, or just <literal>-bs</literal> to build
	    only a source package.
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>rpmbuild -ba SPECS/kwave.spec</command>
</screen>
	</para></listitem>

	<listitem><para>
	    If everything was ok, you can install the binary rpm of
	    &kwave;, it will be in the BUILD directory.
	    If you already have a version of &kwave; installed,
	    please remove it first or use the parameter
	    <literal>-U</literal> instead
	    of <literal>-i</literal> for upgrading instead of installing.
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>rpm -ivh BUILD/<replaceable>[arch]/kwave-XXX.[arch].rpm</replaceable></command>
</screen>
	</para></listitem>

    </orderedlist>

    </sect2>
    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Building RPM packages from GIT                        +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="building_rpm_from_git">
    <title>Building RPM packages from GIT</title>

    <sect2 id="git_checkout"><title>Checking out the sources</title>

    <para>
	For initially checking out the sources you will need some disk space
	(about 25 megabytes) in a directory of your choice, the git package
	of your favorite distribution and full access to the internet. If you
	get error messages about rejected connections you either have typed
	something wrong or your provider doesn't give you full access.
	A good place for the source files will be <filename>"$HOME/src"</filename>.
    </para>

    <orderedlist>
    <listitem><para>
	First create the directory that will receive the subdirectoy with
	&kwave; sources and change into it:
<screen width="40" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>mkdir -p <replaceable>$HOME/src</replaceable></command>
&no-i18n-tag;<prompt>% </prompt><command>cd <replaceable>$HOME/src</replaceable></command>
</screen>
    </para></listitem>
    <listitem>
	<para>
	    Then check out the latest sources from the GIT server:
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>git clone &url_git_master; kwave</command>
</screen>
	</para>
	<para>
	or you can check out a specific release with the following commands:
<screen width="70" format="linespecific">
    &no-i18n-tag;<prompt>% </prompt><command>git clone &url_git_master; kwave</command>
    &no-i18n-tag;<prompt>% </prompt><command>cd kwave</command>
    &no-i18n-tag;<prompt>% </prompt><command>git checkout tags/<replaceable>[release-tag]</replaceable> </command>
</screen>
	You can look up the names of the release tags in the git web page at
	<ulink url="&url_git_list_tags;"> &url_git_list_tags;</ulink>.
	The release tags are always built out of the word <literal>Release-</literal> and
	the version number of the release, with underscores instead of dots.
	For example "<literal>Release-&version_tag;</literal>" for v&version;.
	</para>
    </listitem>
    </orderedlist>

    <warning><para>
	There <emphasis>must not</emphasis> be a directory named
	<filename>kwave</filename> under
	the directory you want to check out. Otherwise the git program will
	complain about already existing files and the checkout will
	not work.
    </para></warning>

    </sect2>

    <sect2 id="git_update"><title>Updating fresh sources from GIT</title>
    <para>
	The procedure described in the previous section is only necessary
	once. For further updates it is much easier. Just change into the
	directory where you have the checked out sources and do the following
	to update to the latest version:
<screen width="40" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>git pull</command>
</screen>
	Then go on to the next section and compile as usual.
    </para>
    <note><para>
	If you think that you have messed up your local source tree or if there
	are conflicts during updating and you want to start through from a clean
	state, you can do the following to discard all local changes and switch
	back to the latest version from the master branch:
<screen width="40" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>git clean --force -d</command>
&no-i18n-tag;<prompt>% </prompt><command>git reset --hard</command>
&no-i18n-tag;<prompt>% </prompt><command>git checkout <replaceable>master</replaceable></command>
</screen>
    </para></note>
    </sect2>

    <sect2 id="git_compiling"><title>Compiling</title>
    <para>
	Building rpm package from a GIT snapshot is quite simple. The procedure
	is nearly the same as described in the last section, so it unhappily also
	has the same problem with the <command>rpmbuild -ta</command> command
	our method internally uses.
	Like in the previous chapter, <replaceable>[arch]</replaceable> stands
	for the platform you have Built the package and might be something
	like <literal>i386</literal>, <literal>i586</literal>,
	<literal>sparc</literal> or whatever,
	<replaceable>XXX</replaceable> stands
	for the version number you have checked out.
    </para>

    <note><para>
	<emphasis>Note for SuSE users: </emphasis>
	here you have to specify the directory
	<filename>/usr/src/packages</filename> instead
	of <filename>/usr/src/redhat</filename> too!
    </para></note>

    <para>
	Assuming that
	you are in the root of where you checked out from GIT, do the
	following to create a Makefile, the &kwave; package and
	install it. If you already have a version of &kwave; installed,
	please remove it first or use <command>rpm -U</command> instead
	of <command>rpm -i</command> for updating instead of installing.
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>mkdir /tmp/kwave-build</command>
&no-i18n-tag;<prompt>% </prompt><command>cd /tmp/kwave-build</command>
&no-i18n-tag;<prompt>% </prompt><command>cmake <replaceable>$HOME/src/kwave</replaceable></command>
&no-i18n-tag;<prompt>% </prompt><command>make rpm</command>
&no-i18n-tag;<prompt>% </prompt><command>rpm -ivh /usr/src/redhat/BUILD/<replaceable>[arch]/kwave-XXX.[arch].rpm</replaceable></command>
</screen>
    </para>

    <note><para>
	If you still have problems with <command>make rpm</command>,
	you will find the tar.bz2
	archive that was produced in <filename>/tmp</filename>.
	Please follow the instructions in the
	<link linkend="manual_rpm_creation">previous</link> chapter.
    </para></note>

    </sect2>
    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Building DEB package from Source                      +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="building_deb_from_src">
    <title>Building a DEB package for testing and personal use</title>

    <para>
	If you want to create a deb package of &kwave;, e.g. for testing a
	version that is not yet available via official package repositories,
	then you can create your own package quite easily. First of all, you
	need to install some required tools:
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>sudo apt-get install build-essential checkinstall</command>
</screen>
    </para>

    <para>
	Then you can install the required build dependencies by pretending to
	install the dependencies of the official &kwave; version:
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>sudo apt-get build-dep kwave</command>
</screen>
    </para>

    <para>
	After installing the required packages, you can build &kwave; as
	described in the chapters before. After building you can type this
	to get a .deb file in your current build directory:
<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>make deb</command>
</screen>
    </para>

    <note><para>
	The .deb file you get from this step will not have the quality that
	a package from your official distribution has - it is just good enough
	for installing and safely uninstalling &kwave; for testing purposes
	and for personal use.
    </para></note>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: optimizations                                         +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="compiler_optimizations">
    <title>Building CPU optimized packages</title>

    <para>
	If you are owner of a Pentium, an AMD K6, Athlon or Athlon-XP CPU,
	you might want to use compiler optimizations to compile your version of
	&kwave; that is running some percents faster. The gain in speed will
	be up to 30% on some systems, whereas the functions dealing with
	signal manipulation and all functions that do complex time-frequency
	operations (like FFT and Sonagram) will profit most from it.
    </para>
    <para>
	You do not need to understand much about programming for using an
	optimized compiler to compile &kwave;, but maybe you will need some
	time to get the compiler itself working and installed.
    </para>

    <sect2 id="rpm_optimizations">
    <title>RPM optimizations</title>

    <para>
	You can easily compile the RPM package optimized for Athlon,
	Athlon-XP, Pentium and Pentium Pro
	(and some other CPUs) by using some defines in your <filename>rpmrc</filename> file.
	You can either modify your system's <filename>rpmrc</filename>
	file in <filename>/usr/lib/rpm</filename> or the
	<filename>.rpmrc</filename> file in your home directory.
	There you can specify option lines like these:

<screen width="70" format="linespecific">
<userinput moreinfo="none">optflags: i586 -O2 -march=pentium -DNDEBUG -fomit-frame-pointer</userinput>
<userinput moreinfo="none">optflags: i686 -O2 -march=pentiumpro -DNDEBUG -fomit-frame-pointer</userinput>
<userinput moreinfo="none">optflags: athlon -O2 -march=athlon -DNDEBUG -fomit-frame-pointer</userinput>
<userinput moreinfo="none">optflags: k6 -O3 -march=k6 -DNDEBUG -fomit-frame-pointer</userinput>
<userinput moreinfo="none">optflags: k7 -O3 -march=athlon-xp -DNDEBUG -fomit-frame-pointer</userinput>
</screen>

	(I found those nice tricks at
	<ulink url="http://www.keywarrior.net/duesti/rpmopt.en.html">
	http://www.keywarrior.net/duesti/rpmopt.en.html</ulink>.
	Thanks to Matthias Düsterhöft!).
    </para>
    <!-- german version:
	http://www.keywarrior.net/duesti/rpmopt.de.html
    -->

    <para>
	This means that on an <literal>k7</literal> architecture the
	rpm package will be compiled using
	<literal>-O3 -march=athlon-xp -DNDEBUG
	-fomit-frame-pointer</literal>
	as compiler option and so
	on, you might extend or adapt these to your own needs.
	The settings apply to all of the sections before in all
	places where <command>rpmbuild -ta</command> is used or where a binary
	RPM is to be created out of a source rpm using
	<command>rpmbuild --rebuild</command>.
    </para>

    <note><para>
	If <command>rpm</command> refuses to install
	your package because it seems not to fit to your computer's
	architecture, you can normally just install an optimized package
	by specifying the additional parameter <command>--ignorearch</command>
	and don't care.
    </para></note>

    </sect2>

    <sect2 id="optimize_invocation">
    <title>How to pass optimizer options to the compiler manually</title>
    <para>
	The invocation of the compiler is quite simple. It normally
	is sufficient to set the environment variables
	<literal><symbol>CFLAGS</symbol></literal> and <literal><symbol>CXXFLAGS</symbol></literal>
	in the correct way and then compile as usual. For the best settings
	please consult the documentation or homepage of the corresponding
	compiler.
    </para>
    <para>
	If you build &kwave; from a source tree (unpacked tar.bz2 or from GIT)
	the flags need to be specified before the call. For example:

	<screen width="70" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>CFLAGS="-O4 -march=athlon-xp -mcpu=athlon-xp -pipe" \
  CXXFLAGS="-O4 -march=athlon-xp -mcpu=athlon-xp -pipe" \
  cmake <replaceable>[source directory]</replaceable></command>
</screen>
    </para>


    <para>
	If you re-build &kwave; from a source rpm package, please follow
	the instruction in the
	<link linkend="rpm_optimizations">previous section</link>.
    </para>
    </sect2>

    </sect1>

</chapter>


<!-- ###################################################################### -->
<!-- ### Chapter: Basics about digital audio                            ### -->
<!-- ###################################################################### -->

<chapter id="digital-audio-basics"><title>Basics about digital audio</title>

    <para>
	This chapter should give a short introduction about the basics of
	digital audio processing, without going too much into details.
	Of course this might be a bit incomplete, but if you have questions,
	you can ask at the &kwave; mailing list or consult some further
	literature.
    </para>

<sect1 id="the-analogue-world"><title>The analogue world</title>

    <para>
	First of all, one must know that the
	world is <emphasis>analogue</emphasis> - but computers work
	<emphasis>digitally</emphasis>. So there are
	several ways to convert analogue audio to digital audio and back
	again. As the way from digital to analogue normally is the
	reversion of the way from analogue to digital, we only describe
	the way from analogue to digital.
    </para>
    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="audio-1.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>Conversion from sound to bits</phrase> </textobject>
	</inlinemediaobject>
    </para>
    <para>Conversion from sound to bits</para>

    <para>
	Before continuing, analogue audio has to be transformed
	into electronic signals in order to find it's way into a computer.
	One common way to do this is by using a microphone and an
	amplifier. This combination gets sound (changes of air pressure) at
	it's input and a voltage at it's output. Higher
	amplitude of the pressure changes will be represented by higher voltages
	at the amplifier's output. This output is also called a
	<emphasis>'signal'</emphasis>. Instead of a microphone you can of course
	also imagine other sources of audio. And the "amplifier" can be the one
	that is integrated into your sound card, where you normally can't see it.
    </para>
    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="audio2signal.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>Conversion to electronic signal</phrase> </textobject>
	</inlinemediaobject>
    </para>
    <para>Conversion to electronic signal</para>

    <para>
	At this stage, the electrical signal has three limitations that one should
	keep in mind:
	<orderedlist>
	    <listitem><para>
		The <emphasis>amplitude</emphasis> (volume) is limited to
		some maximum level.
		This is a consequence of the electronic (amplifiers) that are
		only able to handle voltages within some specific range.
		That's no problem as long as sounds are not too loud. In that
		case the signal would be <emphasis>clipped</emphasis>, which
		means that the electrical signal will run against it's margins
		and the result will be disturbed.
	    </para></listitem>
	    <listitem><para>
		The <emphasis>frequency range</emphasis> is also limited.
		Due to the mechanical
		constrains of microphones and the limited frequency range of
		amplifiers, a signal's frequency range is limited. There
		are no hard borders besides which the sound abruptely disappears,
		but below some low and above some higher frequency the amplitude
		of the signal starts to decrease more and more. The existance of
		a maximum frequency can be easily understood as a limited speed
		of the electrical signal to rise and fall. By using high quality
		amplifiers and microphones, the limits can be spread into ranges
		where the human ear is no longer able to hear their results and
		thus get out of interest. The human ear normally is not able to
		hear sound above 20 kHz.
	    </para></listitem>
	    <listitem><para>
	        The signal contains <emphasis>noise</emphasis>.
		Noise is the most ugly enemy of everyone who has to handle audio
		signals in any way. Noise is a typical analogue effect, that makes
		the audio signal "unsharp" and disturbed, it is always present
		and cannot be avoided. One can only try to use high quality
		components that produce as low noise as possible, so that one
		can't hear it.
		Normally noise has a certain volume, so that the interesting sound
		should be much louder in comparism to the noise. This is called the
		<emphasis>signal to noise ratio (SNR)</emphasis>, the higher it is
		the better the sound's quality will be. Sounds that have
		lower volume than the noise cannot be heart.
	    </para></listitem>
	</orderedlist>
    </para>

</sect1>

<sect1 id="digitalization"><title>Digitalization</title>

    <para>
	When we want to store and play audio in a computer, we must convert
	the analogue sound into digital data first. This process is called
	<emphasis>digitalization</emphasis>. It converts an electronic
	signal into a sequence of digital values.
    </para>
    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="signal2digital.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>Digitalization of the electronic signal</phrase> </textobject>
	</inlinemediaobject>
    </para>
    <para>Digitalization of the electronic signal</para>

    <para>
	The conversion can be understood as a repetitive measurement of the
	electonic signal's value at certain time, thus taking a
	<emphasis>sample</emphasis> of the signal. The result is then encoded
	as a digital value.
    </para>
    <para>
	The sampling could be done in arbitrary distances or in constant
	intervals. The later method is much easier to handle, and thus it
	is normally used, with a constant rate - the so-called
	<emphasis>sample rate</emphasis>. Usual sample rates are 8000,
	11025, 22050, and 44100 samples per second. In practice sample
	rates are also given as frequencies, in Hz or kHz.
    </para>
    <para>
	The sample rate limts the
	highest frequency a digitized signal can represent. Due to
	Shannon's theoreme the highest usable frequency is half of the sample
	rate, so with 44.1 kHz sample rate you cannot sample signals with
	more than 22 kHz. To avoid a violation of that half-sample rate
	rule, your soundcard already has built-in filters that filter away
	frequencies that are higher than half of the used sample rate.
    </para>
    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="sinus2samples.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>Sampled signal</phrase> </textobject>
	</inlinemediaobject>
    </para>
    <para>Sampled signal</para>

</sect1>

<sect1 id="sample-encoding"><title>Sample Encoding</title>

    <para>
	The result of the digital sampling process is a sequence of single
	<emphasis>samples</emphasis>. One sample is a digital representation
	of a signal's value at a certain time.
    </para>
    <para>
	The value of a sample can be interpreted and encoded in several ways.
	The simplest one is <emphasis>linear</emphasis> encoding. This means
	that each sample's value directly represents the analogue signal's
	value multiplied with a constant factor.
	This is easy to handle, but has the disadvantage that
	noise will be audibles especially on low amplitudes, where it disturbes
	most, and less audible on high amplitudes, where it is less audible.
    </para>
    <para>
	One way to reduce the influence of noise is <emphasis>non-linear</emphasis>
	encoding. This means that lower amplitudes are amplified before processing.
	As lower amplitudes are amplified,
	their distance from noise increases and the quality improves. The most
	common methods for this are <emphasis>A-Law</emphasis> and
	<emphasis>U-Law</emphasis> encoding - some standardized logarithmic
	amplification curves, used in digital telephony (ITU G.711 standard).
    </para>
    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="nonlinear.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>Nonlinear Encoding</phrase> </textobject>
	</inlinemediaobject>
    </para>
    <para>Nonlinear Encoding</para>
</sect1>

<sect1 id="sample-formats"><title>Sample Formats</title>

    <para>
	Samples can be stored in different formats and precisions. The most common
	ones are integer (fixed-point) formats, that store values with
	<emphasis>fixed	quantisations</emphasis>.
	Depending on where the zero line is defined, it
	has to be destinguished between <emphasis>unsigned</emphasis> (only positive
	values, "zero line" is at half of the numeric range)
	and <emphasis>signed</emphasis> (positive and negative values)
	integer formats.
    </para>
    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="signed.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>Signed Format</phrase> </textobject>
	</inlinemediaobject>
    </para>
    <para>Signed Format</para>
    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="unsigned.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>Unsigned Format</phrase> </textobject>
	</inlinemediaobject>
    </para>
    <para>Unsigned Format</para>
    <para>
	As the
	quantisation loses some accuracy, it produces noise, the so-called
	<emphasis>quantisation noise</emphasis>. That kind of noise has more effect
	on low amplitudes, so this method of storing samples is not optimal, but
	quite easy and very fast to handle (computers are fast in calculating with
	fixed point numbers).
    </para>
    <para>
	The second way of encoding samples is with <emphasis>floating point</emphasis>
	numbers. With floating point numbers, noise is spread nearly equal over
	all ranges of amplitudes and has advantages especially on low ampliudes.
	However, this format is much slower when used for processing (computers are
	much slower on calculating with floating point values in comparison to
	fixed point numbers).
    </para>
    <note><para>
	&kwave; internally uses <emphasis>signed integer</emphasis> format with
	24 bit precision, stored in 32 bit integers. This has the disadvantage
	of higher memory consumption when processing files with lower precision
	(e.g. 8 bits), but processing 32 bit numbers is very fast and also
	leaves some reserves for internal calculations, as only 24 bits are
	normally used.
    </para></note>
</sect1>

<!-- TODO: some chapter about audio compression codecs and so on -->

</chapter>

<!-- ###################################################################### -->
<!-- ### Chapter: Using Kwave                                           ### -->
<!-- ###################################################################### -->

<chapter id="using-kwave"><title>Using &kwave;</title>
    <para>
	Here is a little screenshot of the &kwave; main window, so that you
	get an impression what &kwave; looks like...
    </para>
    <para>
	<screenshot>
    	    <screeninfo>
		Here's a screenshot of &kwave;
	    </screeninfo>
    	    <mediaobject>
		<imageobject>
	    	    <imagedata fileref="kwave-main.png" format="PNG"/>
		</imageobject>
		<textobject>
	    	    <phrase>Screenshot of the Main Window</phrase>
		</textobject>
	    </mediaobject>
	</screenshot>
    </para>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: User Interface Selection                              +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="gui_mode"><title>User Interface Mode</title>

    <para>
	Depending on your personal preferences or use cases you can configure
	how &kwave; handles multiple open files. You can switch this setting
	on the fly through the menu
       <menuchoice>
       <guimenu>Settings</guimenu><guimenuitem>Show Files in...</guimenuitem>
       </menuchoice>.
    </para>

    <para>
	The three possible settings are:
	<itemizedlist>
	    <listitem>
		<anchor id="gui_sdi"/>
		<para><guimenuitem>Separate Windows (SDI)</guimenuitem>:
		    When using the <emphasis>Single Document Interface</emphasis>
		    (SDI), each file will be shown in a separate main window.
		    <screenshot>
			<screeninfo>
			    screenshot of &kwave; in SDI mode
			</screeninfo>
			<mediaobject>
			    <imageobject>
				<imagedata fileref="kwave-gui-sdi.png" format="PNG"/>
			    </imageobject>
			    <textobject>
				<phrase>Screenshot of SDI mode</phrase>
			    </textobject>
			</mediaobject>
		    </screenshot>
	        </para>
	    </listitem>
	    <listitem>
		<anchor id="gui_mdi"/>
		<para><guimenuitem>Same Window (MDI)</guimenuitem>:
		    When using the <emphasis>Multi Document Interface</emphasis>
		    (MDI), there is only one &kwave; main window, but within this
		    window you have an area which shows sub windows, which
		    can be resized, moved, tiled, cascaded or minimized.
		</para>
		<para>
		    You can select a window from the <guimenu>Windows</guimenu>
		    menu or cycle through the sub windows with
		    <keycombo><keysym>Ctrl</keysym><keysym>Tab</keysym></keycombo>.
		    <screenshot>
			<screeninfo>
			    screenshot of &kwave; in MDI mode
			</screeninfo>
			<mediaobject>
			    <imageobject>
				<imagedata fileref="kwave-gui-mdi.png" format="PNG"/>
			    </imageobject>
			    <textobject>
				<phrase>Screenshot of MDI mode</phrase>
			    </textobject>
			</mediaobject>
		    </screenshot>
	        </para>
	    </listitem>
	    <listitem>
		<anchor id="gui_tab"/>
		<para><guimenuitem>Tabs</guimenuitem>:
		    This is a variant of the MDI interface, where files are
		    shown within separate tabs. You may know this mode from
		    some popular internet browsers.
		</para>
		<para>
		    You can activate a tab via the <guimenu>Windows</guimenu>
		    menu or cycle through the tabs with
		    <keycombo><keysym>Ctrl</keysym><keysym>Tab</keysym></keycombo>.
		    <screenshot>
			<screeninfo>
			    screenshot of &kwave; in TAB mode
			</screeninfo>
			<mediaobject>
			    <imageobject>
				<imagedata fileref="kwave-gui-tab.png" format="PNG"/>
			    </imageobject>
			    <textobject>
				<phrase>Screenshot of TAB mode</phrase>
			    </textobject>
			</mediaobject>
		    </screenshot>
	        </para>
	    </listitem>
	</itemizedlist>
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Memory Setup                                          +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="memory-setup"><title>Memory Setup</title>

    <para>
       When using &kwave; for the first time, you should go to the memory
       setup dialog an modify the settings to be suitable for yor needs
       and the installed memory of your computer. You can reach it under
       <menuchoice>
       <guimenu>Settings</guimenu><guimenuitem>Memory...</guimenuitem>
       </menuchoice>.
    </para>
    <para>
	<screenshot>
    	    <screeninfo>
		Here's a screenshot of &kwave;'s memory setup dialog
	    </screeninfo>
    	    <mediaobject>
		<imageobject>
	    	    <imagedata fileref="kwave-memory-setup.png" format="PNG"/>
		</imageobject>
		<textobject>
	    	    <phrase>Screenshot of the Memory Setup Dialog</phrase>
		</textobject>
	    </mediaobject>
	</screenshot>
    </para>
    <para>
	&kwave; is able to use two types of memory: <emphasis>physical</emphasis>
	and <emphasis>virtual</emphasis> memory.
    </para>
    <para>
	<emphasis>Physical memory</emphasis> is the memory (RAM) that is
	installed in your computer.
	You should limit the usage of physical memory to some reasonable
	size, as a rule of thumb, half of the installed memory should be ok.
	If you set the limit too high, Linux will take memory from other
	applications, which means that it swaps out memory of other programs
	to the harddisk (swap), which is rather slow. If you set the limit
	too low, you might lose some performance when working with big files,
	because you use less of the fast physical memory than you could.
    </para>
    <para>
	If you enable <emphasis>virtual memory</emphasis>, &kwave; is able to
	load and process files
	that are bigger than the amount of real installed physical memory.
	&kwave; does this by using temporary files in a configurable directory,
	which is much faster and more cooperative to other applications than
	using the operating system's swapping. The directory that you
	configure should be on your local hard disk.
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Command Line                                          +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="command_line"><title>Command Line</title>

	<sect2><title>List of Files or Commands</title>
	    <para>
	    If you start &kwave; from the command line, you can specify a list
	    of files that should be opened. The first specified file will be opened
	    first, then the other files. Each file will be opened in an own new
	    window or sub window of the same &kwave; instance. If you specify
	    wildcards, you can open a large number of files at once.
	    </para>
	    <para>
	    For example, the following command starts a &kwave; and opens all sounds
	    of the KDE window manager, each in a new window or sub window:
	    <screen>&no-i18n-tag;<prompt>% </prompt><command>kwave <filename>/usr/share/sounds/KDE_Window*.wav</filename></command></screen>
	    </para>
	    <para>
		It is also possible to pass &kwave; text commands, encoded as a
		special <abbrev>URI</abbrev><footnote><para>universal resource identifier</para></footnote>,
		this will be described in a <link linkend="kwave_uri">later section</link>.
	    </para>
	</sect2>

	<sect2><title>GUI Type</title>
	    <para>
	    The parameter <literal>--gui-type=<replaceable>SDI</replaceable>|<replaceable>MDI</replaceable>|<replaceable>TAB</replaceable></literal>
	    lets &kwave; start in one of the three possible
	    <abbrev>GUI</abbrev> modes:
	    <link linkend="gui_sdi"><abbrev>SDI</abbrev></link>,
	    <link linkend="gui_mdi"><abbrev>MDI</abbrev></link> or
	    <link linkend="gui_tab"><abbrev>TAB</abbrev></link>.
	    </para>
	</sect2>

	<sect2><title>Xt Toolkit options</title>
	    <para>
	    In addition to a list of files, you can specify a list of
	    <emphasis>Xt toolkit</emphasis> options like <literal>-geometry</literal>
	    for specifying the size and/or position of the first opened &kwave;
	    window and or <literal>-display</literal> for starting the &kwave; on a
	    different display.
	    </para>
	    <para>
	    For example, the following command starts a &kwave; window with an initial
	    width of 600 pixels and a height of 400 pixels, with the right border
	    positioned 30 pixels away from the right and 0 pixels away from the top
	    of the screen.
	    <screen>&no-i18n-tag;<prompt>% </prompt><command>kwave <parameter>-geometry 600x400-30+0</parameter></command></screen>
	    </para>
	</sect2>

	<sect2><title>Startup Options</title>
	    <para>
	    With the option <literal>--disable-splashscreen</literal> you can disable
	    the splash screen that comes up when starting &kwave;. This might be useful
	    when you start &kwave; from a script.
	    </para>

	    <para>
	    The command line option <literal>--iconic</literal> lets &kwave;
	    start up minimized (iconified). This might be useful when you want to
	    start &kwave; without GUI interaction, e.g. when running from a script.
	    This option also implicitly disables the splash screen!
	    </para>

	    <para>
	    By using the command line option <literal>--logfile=<replaceable>kwave.log</replaceable></literal>
	    you can log the sequence of actions of a &kwave; session into a file.
	    This is useful for debugging, you might be asked for such a logfile when
	    reporting an error.
	    </para>
	</sect2>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Opening and Saving files                              +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="open_and_save"><title>Opening and Saving files</title>

    <para>
    Opening files with &kwave; works like in most other applications, you
    can
    <itemizedlist>
    <listitem><para>specify a list of files on the
    <link linkend="command_line">command line</link> when starting &kwave;,</para></listitem>
    <listitem><para>open an empty &kwave; window (for example with
	<menuchoice>
	<shortcut><keycombo><keycap>Ctrl</keycap><keycap>W</keycap></keycombo></shortcut>
	<guimenu>File</guimenu><guimenuitem>New...</guimenuitem>
	</menuchoice>
    ) and put a file into it via
    <link linkend="drag_and_drop">drag and drop</link>,
      or you can </para></listitem>
    <listitem><para>open a file through the menu with
	<menuchoice>
	<shortcut><keycombo><keycap>Ctrl</keycap><keycap>O</keycap></keycombo></shortcut>
	<guimenu>File</guimenu><guimenuitem>Open</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	or one of the last recently opened files under
	<menuchoice>
	<guimenu>File</guimenu><guimenuitem>Open Recent</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	save the current file with
	<menuchoice>
	<shortcut><keycombo><keycap>Ctrl</keycap><keycap>S</keycap></keycombo></shortcut>
	<guimenu>File</guimenu><guimenuitem>Save</guimenuitem>
	</menuchoice>,
    </para></listitem>
    <listitem><para>
	save under a different name with
	<menuchoice>
	<shortcut><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>S</keycap></keycombo></shortcut>
	<guimenu>File</guimenu><guimenuitem>Save</guimenuitem><guimenuitem>As...</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	save all areas that are separated by markers, each one to an own
	file, with
	<menuchoice>
	<guimenu>File</guimenu><guimenuitem>Save</guimenuitem><guimenuitem>Blocks...</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	or only the current selection with
	<menuchoice>
	<guimenu>File</guimenu><guimenuitem>Save</guimenuitem><guimenuitem>Selection...</guimenuitem>
	</menuchoice>
    </para></listitem>
    </itemizedlist>
    </para>

    <sect2 id="file_formats"><title>Supported File formats</title>

        <para>
	    &kwave; supports the following file formats:
	</para>

    <para>
    <itemizedlist>
	<listitem><para>
            The favourite file format of &kwave; is (like you can guess from the
            name) <filename>.wav</filename>. This format is very common to other
	    "operating systems" and also is commonly used within the KDE environment.
	</para></listitem>
	<listitem><para>
            The second format that &kwave; supports is "ASCII". You can export to
            and also import from ASCII. Please be aware that storing in this format
            might produce very large files! The file format will be described
	    <link linkend="ascii_format">below</link>.
	</para></listitem>
	<listitem><para>
	    <filename>.mp3</filename> and <filename>.mp2</filename> import
	    is available through
	    <ulink url="&url_libmad;">libmad</ulink>
	    for the MP3 decoding in combination with
	    <ulink url="&url_id3lib;">id3lib</ulink> for decoding
	    ID3 tags and
	    <ulink url="&url_lame;">lame</ulink> for encoding.
	</para></listitem>
	<listitem><para>
	    Ogg/Vorbis (<filename>*.ogg</filename>) import and export.
	    See <ulink url="&url_ogg_vorbis;">&url_ogg_vorbis;</ulink> for details.
	</para></listitem>
	<listitem><para>
	    FLAC (<filename>*.flac</filename>) import and export.
	    See <ulink url="&url_flac;">&url_flac;</ulink> for details.
	</para></listitem>

	<listitem><para>
	    Additionally &kwave; supports many other common formats through the
	    <ulink url="&url_libaudiofile;">audiofile</ulink>
	    plugin. You can import files like <filename>*.au</filename> and
	    <filename>*.snd</filename> (NeXT,Sun Audio),
	    <filename>*.aiff</filename> (Audio Interchange Format) and
	    <filename>*.sf</filename> (Berkeley,IRCAM,Carl Sound Format).
	</para></listitem>

    </itemizedlist>
    </para>


    </sect2>

    <sect2 id="converting_to_and_from_wav">
    <title>Converting to and from .wav</title>

	<para>
	    The best way to work with formats other than those supported by
	    &kwave; is to use an external converter program.
	    A good set of tools for this is in the
	    <ulink url="&url_sox;">SoX</ulink>
	   package, they have also some nice documentation!
	</para>

	<para>
	    The plans for future include support for import and also export filters
	    for more formats and maybe some filter that uses a user-defineable script
	    with a call to an external filter, so that even formats not supported
	    by <literal>SoX</literal> (like MP3) can be read and/or written.
        </para>
    </sect2>

    <sect2 id="ascii_format"><title>Format of ASCII files</title>
	<para>
	    The ASCII format is quite useful for scientific and educational
	    purposes.
	    Due to it's simple format, you can either write simple
	    files on your own with a text editor or you can use the output
	    of some other application and convert it into ASCII. As the format is
	    <emphasis>really</emphasis> simple, you
	    should not have big problems in writing a converter and most scientific
	    applications use to have some kind of their own ASCII format for
	    export.
	</para>

        <para>
	    The format of an ASCII file is quite simple and has the following rules:
	    <orderedlist>
	    <listitem><para>
		At the start of the file comes a block of properties, with one
		property per line.
	    </para></listitem>
	    <listitem><para>
		Each property line starts with <literal>##</literal>.
	    </para></listitem>
	    <listitem><para>
		After the properties comes a list of samples, with one sample per line.
		When using multiple channels, the samples are separated by commas.
	    </para></listitem>
	    <listitem><para>
		Lines might end with a carriage return and/or a line feed
		character (so DOS files are supported too). But when saving,
		files will always be saved with line feed character as the
		end of the line.
	    </para></listitem>
	    <listitem><para>
		Empty lines and characters after a <literal>#</literal>
		are treated as comments and are ignored.
	    </para></listitem>
	    <listitem><para>
		Values have to be given in signed integer format with a
		24 bit range, which is the internal storage format of &kwave;.
	    </para></listitem>
	    <listitem><para>
		Everything after a <literal>#</literal> (except property lines,
		see above) will be treated as comment and will be ignored.
		Empty lines will also be ignored.
	    </para></listitem>
	    </orderedlist>
	</para>

	<para>
	    Here is an example of a simple ASCII file that represents a
	    sine wave with eleven samples:
	    <example>
		<title>content of an ASCII file with a single sine wave</title>
		<screen>
## 'rate'=44100
## 'tracks'=2
## 'bits'=16
## 'length'=11
## 'Date'='2013-11-09'
## 'Software'='Kwave-0.8.11 for KDE 4.11.3'
  5930496,   5930496 #            0
        0,   8388352 #            1
 -5930752,   5930496 #            2
 -8388608,         0 #            3
 -5930752,  -5930752 #            4
        0,  -8388608 #            5
  5930496,  -5930752 #            6
  8388352,         0 #            7
  5930496,   5930496 #            8
        0,   8388352 #            9
 -5930752,   5930496 #           10
# EOF
		</screen>
	    </example>
	</para>
    </sect2>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: New File                                              +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="newfile"><title>Creating a New File</title>

    <para>
       You can create a new and empty file menu under
       <menuchoice>
       <guimenu>File</guimenu><guimenuitem>New...</guimenuitem>
       </menuchoice>.
    </para>
    <para>
	<screenshot>
	    <screeninfo>
		Here's a screenshot of &kwave;'s new file dialog
	    </screeninfo>
	    <mediaobject>
		<imageobject>
	    	    <imagedata fileref="kwave-newfile.png" format="PNG"/>
		</imageobject>
		<textobject>
		    <phrase>Screenshot of the File New Dialog</phrase>
		</textobject>
	    </mediaobject>
	</screenshot>
    </para>
    <para>
	You can select the sample rate, resolution in bits per sample and
	the number of tracks. Per default the file format will be ".wav",
	but it can still be changed at the time when the file is saved.
    </para>
    <para>
	The length of the new signal can be set by time (hours, minutes,
	seconds) or by the number of samples. Additionally you can select
	it relative to the highest possible length, which is limited by
	the available memory and &kwave;'s internal limit (2 GB).
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Recording                                             +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="recording"><title>Recording</title>

    <para>
        &kwave; is able to record audio data from various sources, with all
	sample rates, sample formats and other modes that your sound
	hardware supports. Currently &kwave; records through the old OSS
	sound interface, and since v0.7.4 also the newer and more powerful
	ALSA interface that is the preferred choice for linux kernel 2.6.
    </para>
    <para>
       The recording can be reached from the menu under
       <menuchoice>
       <guimenu>File</guimenu><guimenuitem>Record</guimenuitem>
       </menuchoice>.
    </para>

    <para>
	Here is a screenshot of the &kwave; record dialog, showing the first
	page with the recording controls during a running recording session.
	Like in most dialogs of &kwave; you can get some help or see tooltips
	on the controls.
    </para>
    <para>
	<screenshot>
	    <screeninfo>
		Here's a screenshot of &kwave;'s record dialog
	    </screeninfo>
	    <mediaobject>
		<imageobject>
		    <imagedata fileref="kwave-record.png" format="PNG"/>
		</imageobject>
		<textobject>
		    <phrase>Screenshot of the Record Dialog</phrase>
		</textobject>
	    </mediaobject>
	</screenshot>
    </para>

    <para>
	Here you have the following controls:
	<itemizedlist>
	<listitem><para>
	    <guilabel>Pre-Record:</guilabel> If the pre-recording feature of
	    &kwave; is enabled and the recording is startet, &kwave; records
	    into an internal buffer which is some seconds long. If you
	    press the <guibutton>Record</guibutton> (
	    <inlinemediaobject>
	    <imageobject>
	    <imagedata fileref="krec_record.png" format="PNG"/>
	    </imageobject>
	    <textobject> <phrase>record button</phrase> </textobject>
            </inlinemediaobject>
	    ) button again, then the recording really starts, and also
	    keeps the already pre-recorded
	    data.
	    This is useful for example if you want to record your favorite
	    song from radio, but you recognize too late that the song has
	    started. In this case you can still press the record button and
	    get the start of the song from what &kwave; has already pre-recorded
	    before, so that you will no longer miss a start.
	</para></listitem>
	<listitem><para>
	    <guilabel>Record Time:</guilabel> If the length of the recording
	    should be limited to some time, you can activate this setting and
	    select a time in hours, minutes, seconds for your recording. If
	    this option is not enabled, the recording runns until you press
	    the <guibutton>Stop</guibutton> (<inlinemediaobject><imageobject>
	    <imagedata fileref="record_stop.png" format="PNG"/>
	    </imageobject><textobject><phrase>stop button</phrase></textobject>
            </inlinemediaobject>) button.
	</para></listitem>
	<listitem><para>
	    <guilabel>Start At:</guilabel> If this setting is activated, you
	    can set a date and time when the recording will be started. Please
	    keep in mind that if the configured time is in the past, the
	    recording will start immediately.
	</para></listitem>
	<listitem><para>
	    <guilabel>Record Trigger:</guilabel> If enabled, the recording
	    starts only if the volume of the input goes over a certain limit,
	    which can be defined from 0 to 100% of the highest possible
	    input volume. This is useful if you do not want to record
	    leading silence.
	    (Hint: combine this with the prerecording feature mentioned above
	    to catch also some seconds before reaching the trigger, so that
	    you don't miss any silent fade-ins.)
	</para></listitem>
	<listitem><para>
	    The <guibutton>New</guibutton> (<inlinemediaobject><imageobject>
	    <imagedata fileref="record_new.png" format="PNG"/>
	    </imageobject><textobject><phrase>new button</phrase></textobject>
            </inlinemediaobject>) button is active when the recording is not
	    running or is finished, to discard the current file content and
	    start again.
	</para></listitem>
	<listitem><para>
	    The <guibutton>Stop</guibutton> (<inlinemediaobject><imageobject>
	    <imagedata fileref="record_stop.png" format="PNG"/>
	    </imageobject><textobject><phrase>stop button</phrase></textobject>
            </inlinemediaobject>) button is active when the recording or pre-recording
	    is running or &kwave; is waiting for the trigger. If pressed, the
	    current progress will be stopped.
	</para></listitem>
	<listitem><para>
	    The <guibutton>Pause</guibutton> (<inlinemediaobject><imageobject>
	    <imagedata fileref="record_pause.png" format="PNG"/>
	    </imageobject><textobject><phrase>pause button</phrase></textobject>
            </inlinemediaobject>) button is active when the recording or pre-recording
	    is running. The first time you press it, the rcording will be halted and
	    the button starts blinking. When you press it again the button will
	    stop blinking and recording will continue immediately, without waiting
	    for a trigger.
	</para></listitem>
	<listitem><para>
	    The <guibutton>Record</guibutton> (<inlinemediaobject><imageobject>
	    <imagedata fileref="krec_record.png" format="PNG"/>
	    </imageobject><textobject><phrase>record button</phrase></textobject>
            </inlinemediaobject>) button starts the recording and/or prerecording,
	    depending on the features enabled above:
	    <orderedlist>
	    <listitem><para>
	        If neither prerecording nor trigger level are
	        used, the recording starts as soon as you press
		the record button.
	    </para></listitem>
	    <listitem><para>
		If prerecording is not used and a trigger level is set, the
		first press will let &kwave; wait for the trigger level to be
		reached. While waiting for a trigger, you can force the
		recording to start immediately by pressing the record button again,
		otherwise the recording will start automatically when the trigger
		level has been reached.
	    </para></listitem>
	    <listitem><para>
		If prerecording is enabled, the first press starts only the
		prerecording and the second press really starts the recording.
	    </para></listitem>
	    </orderedlist>
	</para></listitem>
	</itemizedlist>
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Playback                                              +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="playback"><title>Playback</title>

    <para>
        Depending on the compilation options &kwave; is able to play sounds
	trough one of the following playback methods:
    </para>
    <para><itemizedlist>
	<listitem><para>
	ALSA (Advanced Linux Sound Architecture):
	Supercedes OSS, supports more features and more hardware. Might
	collide with KDE or other applications like OSS does, but has a
	plugin called "dmix" as a way out. Newer versions of ALSA use a
	dmix like plugin per default, so this should the best choice
	for you!
	</para></listitem>
	<listitem><para>
	OSS (Open Sound System):
	The oldest linux implementation, capable of mono and stereo output.
	Deprecated since linux kernel 2.6, but still wide spread.
	Might collide with KDE or other sound applications, only
	one application at a time can use OSS playback !
	</para></listitem>
    </itemizedlist></para>

    <para>
        Before trying to play sounds, you should take a look on the
	playback configuration dialog:
    </para>
    <para>
	<screenshot>
	    <screeninfo>
		Here's a screenshot of &kwave;'s playback setup dialog
	    </screeninfo>
	    <mediaobject>
		<imageobject>
		    <imagedata fileref="kwave-playback-setup.png" format="PNG"/>
		</imageobject>
		<textobject>
		    <phrase>Screenshot of the Playback Setup Dialog</phrase>
		</textobject>
	    </mediaobject>
	</screenshot>
    </para>

    <para>
        Currently &kwave; supports only 8 and 16 bit playback, with mono or
	stereo output through the OSS interface, but many also
	all modes your sound hardware supports through the ALSA interface.
    </para>
    <para>
	If your sound file uses more or less channels than the
	playback allows, all channels will be mixed together during playback.
	For example if you have a file with three channels and you use
	stereo playback, the left channel will play channel 0 (upper)
	and half of channel 1 (middle), the right channel will play
	the half of channel 1 (middle) and channel 2 (lower).
    </para>
    <para>
        For getting a smooth playback without interruptions, you should also
	set the buffer size to an appropriate value. If you encounter
	problems with interrupted playback, you should increase the buffer
	size here. But the bigger you set the buffer, the bigger is the
	latency between the audible sound and the display of the playback
	position in the signal display.
    </para>
    <para>
	The playback settings dialog also provides a button for playing a
	simple test sound. You should hear a 440Hz tone that wanders over all
	speakers, from one to the next.
    </para>
    <para>
        Once you have configured playback, you can use the playback controls
        of the &kwave; main window or through the
        <menuchoice><guimenu>Play</guimenu></menuchoice> menu or with
        keyboard shortcuts:
        <itemizedlist>
        <listitem><para>
	    <menuchoice>
	    <shortcut><keycombo><keycap>P</keycap></keycombo></shortcut>
	    <guimenu>Play</guimenu><guimenuitem>Start</guimenuitem>
	    </menuchoice>: Start playback of the current selection from it's
	    beginning or the whole file from the current cursor position
	    if nothing was selected. Play only once.
        </para></listitem>
        <listitem><para>
	    <menuchoice>
	    <guimenu>Play</guimenu><guimenuitem>Loop</guimenuitem>
	    </menuchoice>: Like before, but repeat in a loop.
        </para></listitem>
        <listitem><para>
	    <menuchoice>
	    <shortcut><keycombo><keycap>Space</keycap></keycombo></shortcut>
	    <guimenu>Play</guimenu><guimenuitem>Pause</guimenuitem>
	    </menuchoice>: Pause the playback at the current position. Only
	    available when the playback is running.
        </para></listitem>
        <listitem><para>
	    <menuchoice>
	    <shortcut><keycombo><keycap>Space</keycap></keycombo></shortcut>
	    <guimenu>Play</guimenu><guimenuitem>Continue</guimenuitem>
	    </menuchoice>: Continue the playback from the position where it
	    has been paused. Only available if the playback is paused.
        </para></listitem>
        <listitem><para>
	    <menuchoice>
	    <shortcut><keycombo><keycap>Esc</keycap></keycombo></shortcut>
	    <guimenu>Play</guimenu><guimenuitem>Stop</guimenuitem>
	    </menuchoice>: Stop the playback, go back to the start of the
	                   selection.
        </para></listitem>
        </itemizedlist>
    </para>

    </sect1>
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: How to select                                         +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="fileinfo"><title>File Properties</title>

    <para>
	&kwave; is able to handle several meta information that is stored
	within an audio file. It tries to import and export as much of
	that information as possible. For example, if you import an
	MP3 file with ID3 tags, you can keep that information when
	exporting to a Wave file. If &kwave; would lose meta information
	when saving, it shows a warning.
    </para>
    <para>
        You can view and modify the meta information under
        <menuchoice>
        <guimenu>Edit</guimenu><guimenuitem>File Properties...</guimenuitem>
        </menuchoice>. There you can also change things like sample format,
        resolution and compression.
    </para>
    <para>
	<screenshot>
	    <screeninfo>
		Here's a screenshot of &kwave;'s file properties dialog
	    </screeninfo>
	    <mediaobject>
		<imageobject>
		    <imagedata fileref="kwave-fileinfo.png" format="PNG"/>
		</imageobject>
		<textobject>
		    <phrase>Screenshot of the File Properties Dialog</phrase>
		</textobject>
	    </mediaobject>
	</screenshot>
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: How to zoom and navigate                              +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="navigation"><title>Zooming and navigating</title>

    <para>
	&kwave; provides several ways to zoom and navigate, using keyboard
	shortcuts, menu commands, toolbar buttons and by using the mouse.
	The following sections should give an overview on how to use all
	of these functions.
    </para>

    <sect2 id="zooming"><title>Zooming in and out</title>
    <para>
        <itemizedlist>
	<!-- zoom to all -->
        <listitem><para>
	    <emphasis>zoom to whole signal:</emphasis>
	    selects a zoom factor that makes the whole signal visible in the
	    current window.
	    <itemizedlist>
	    <listitem><para>
		menu entry:
		<menuchoice>
		<guimenu>View</guimenu><guimenuitem>Zoom to whole signal</guimenuitem>
		</menuchoice>
	    </para></listitem>
	    <listitem><para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_viewmagfit.png" format="PNG"/>
		</imageobject><textobject><phrase>zoom all button</phrase></textobject>
		</inlinemediaobject>
	    </para></listitem>
	    </itemizedlist>
        </para></listitem>
	<!-- zoom to 100% -->
        <listitem><para>
	    <emphasis>zoom to 100%:</emphasis>
	    zooms in up to a scale where on sample is represented by on pixel
	    on the screen.
	    <itemizedlist>
	    <listitem><para>
		menu entry:
		<menuchoice>
		<guimenu>View</guimenu><guimenuitem>Zoom to 100%</guimenuitem>
		</menuchoice>
	    </para></listitem>
	    <listitem><para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_zoom_original.png" format="PNG"/>
		</imageobject><textobject><phrase>zoom to 100% button</phrase></textobject>
		</inlinemediaobject>
	    </para></listitem>
	    </itemizedlist>
        </para></listitem>
	<!-- zoom in -->
        <listitem><para>
	    <emphasis>zoom in:</emphasis>
	    zooms in to see more details, magnifies by factor 3.
	    <itemizedlist>
	    <listitem><para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>Ctrl</keycap><keycap>+</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Zoom In</guimenuitem>
		</menuchoice>
	    </para></listitem>
	    <listitem><para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_zoom_in.png" format="PNG"/>
		</imageobject><textobject><phrase>zoom in button</phrase></textobject>
		</inlinemediaobject>
	    </para></listitem>
	    </itemizedlist>
	</para></listitem>
	<!-- zoom out -->
        <listitem><para>
	    <emphasis>zoom out:</emphasis>
	    zooms in to see less details, shrinks by factor 3.
	    <itemizedlist>
	    <listitem><para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>Ctrl</keycap><keycap>-</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Zoom Out</guimenuitem>
		</menuchoice>
	    </para></listitem>
	    <listitem><para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_zoom_out.png" format="PNG"/>
		</imageobject><textobject><phrase>zoom out button</phrase></textobject>
		</inlinemediaobject>
	    </para></listitem>
	    </itemizedlist>
        </para></listitem>
	<!-- zoom selection -->
        <listitem><para>
	    <emphasis>zoom selection:</emphasis>
	    zooms to a factor where the current selection is completely
	    visible in the current view.
	    <itemizedlist>
	    <listitem><para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>Ctrl</keycap><keycap>Space</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Zoom to Selection</guimenuitem>
		</menuchoice>
	    </para></listitem>
	    <listitem><para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_viewmag.png" format="PNG"/>
		</imageobject><textobject><phrase>zoom to selection button</phrase></textobject>
		</inlinemediaobject>
	    </para></listitem>
	    </itemizedlist>
        </para></listitem>
	<!-- zoom predefined time range -->
        <listitem><para>
	    <emphasis>select predefined zoom:</emphasis>
	    select a  zoom factor from the zoom combo box
	    in the toolbar.
        </para></listitem>
	</itemizedlist>
    </para>
    </sect2>

    <sect2 id="scrolling"><title>Scrolling left and right</title>
    <para>
        <itemizedlist>
	<!-- scroll left -->
        <listitem><para>
	    <emphasis>scroll left:</emphasis>
	    scrolls to the start of the signal by 1/3 of the current view.
	    </para>
	    <para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>cursor Left</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Scroll left</guimenuitem>
		</menuchoice>
	    </para>
	    <para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_player_rew.png" format="PNG"/>
		</imageobject><textobject><phrase>scroll left button</phrase></textobject>
		</inlinemediaobject>
	    </para>
        </listitem>
	<!-- scroll right -->
        <listitem><para>
	    <emphasis>scroll right:</emphasis>
	    scrolls to the end of the signal by 1/3 of the current view.
	    </para>
	    <para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>cursor right</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Scroll right</guimenuitem>
		</menuchoice>
	    </para>
	    <para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_player_fwd.png" format="PNG"/>
		</imageobject><textobject><phrase>scroll right button</phrase></textobject>
		</inlinemediaobject>
	    </para>
        </listitem>
	<!-- previous page -->
        <listitem><para>
	    <emphasis>previous page:</emphasis>
	    scrolls to the position right before the current view (left).
	    </para>
	    <para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>Page up</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Previous Page</guimenuitem>
		</menuchoice>
	    </para>
	    <para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_player_start.png" format="PNG"/>
		</imageobject><textobject><phrase>previous page button</phrase></textobject>
		</inlinemediaobject>
	    </para>
        </listitem>
	<!-- next page -->
       <listitem><para>
	    <emphasis>next page:</emphasis>
	    scrolls to the position right after the current view (right).
	    </para>
	    <para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>Page down</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Next Page</guimenuitem>
		</menuchoice>
	    </para>
	    <para>
		toolbar button: <inlinemediaobject><imageobject>
		<imagedata fileref="toolbar_kwave_player_end.png" format="PNG"/>
		</imageobject><textobject><phrase>next page button</phrase></textobject>
		</inlinemediaobject>
	    </para>
        </listitem>
	<!-- to begin -->
       <listitem><para>
	    <emphasis>to begin:</emphasis>
	    scrolls the current view so that it starts
	    at the beginning of the signal.
	    </para>
	    <para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>Pos1</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>Begin</guimenuitem>
		</menuchoice>
	    </para>
        </listitem>
	<!-- to end -->
       <listitem><para>
	    <emphasis>to end:</emphasis>
	    scrolls the current view so that it ends at the end of the signal.
	    </para>
	    <para>
		menu entry / keyboard shortcut:
		<menuchoice>
		<shortcut><keycombo><keycap>End</keycap></keycombo></shortcut>
		<guimenu>View</guimenu><guimenuitem>End</guimenuitem>
		</menuchoice>
	    </para>
        </listitem>
	</itemizedlist>
    </para>
    </sect2>

    <sect2 id="navigation_overview"><title>Using the overview</title>

    <para>
	The main screen of &kwave; shows a small <emphasis>overview</emphasis>
	of the whole signal above the horizontal scroll bar of the main
	window. This overview also provides some functionality for navigating:
	<itemizedlist>
	<!-- <left click> on overview widget -->
	<listitem><para>
	    <emphasis>single click with left mouse button</emphasis>:
		directly move the current view to the clicked position.
	</para></listitem>
	<!-- <double click left> on overview widget -->
	<listitem><para>
	    <emphasis>double click with left mouse button</emphasis>:
		directly move the current view to the clicked position
		and additionally zoom in.
	</para></listitem>
	<!-- <shift> + <double click left> on overview widget -->
	<listitem><para>
	    <emphasis>double click with left mouse button, with
		<keycap>shift</keycap> pressed</emphasis>:
		directly move the current view to the clicked position
		and additionally zoom out.
	</para></listitem>
	</itemizedlist>
    </para>

    </sect2>

    <sect2 id="vertical_zoom"><title>Vertical zoom</title>
    <para>
	You can zoom the current view vertically by pressing the
	<keycap>Alt</keycap> key and scrolling with the mouse wheel.
    </para>
    </sect2>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: How to select                                         +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <sect1 id="selecting"><title>How to select</title>

    <para>
    &kwave; allows you to select a continuous range of samples as well as any
    combination of channels (if you edit a multi-channel file). By selecting
    a range of samples (time scope) all following commands will be limited to
    that range and by de-selecting a channel it's content will not be changed.
    </para>

    <sect2 id="selecting_channels"><title>Selecting channels</title>
    <para>
    Selecting or de-selecting a channel is quite simple. Just click on the
    lamp symbol on the left side of the signal to toggle it's state:
    </para>
    <para>
    <inlinemediaobject>
	<imageobject>
	<imagedata fileref="light_on.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>green lamp</phrase> </textobject>
    </inlinemediaobject>
    a green lamp means "enabled", whereas
    </para>
    <para>
    <inlinemediaobject>
	<imageobject>
	<imagedata fileref="light_off.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>red lamp</phrase> </textobject>
    </inlinemediaobject>
    a red lamp means "disabled".
    </para>

    <note><para>
    Note: If a channel is de-selected it will also not be audible for playback!
    </para></note>
    </sect2>

    <sect2 id="selecting_samples"><title>Selecting samples</title>

    <para>
    If you select a range of samples in &kwave;, that range will be
    <emphasis>inclusive</emphasis>. That means that the first and the last
    selected sample both belong to the selection and will be used for the
    following actions. So even if you not selected a <emphasis>range</emphasis>
    but only a single sample, the selection will never be really "empty". So for
    example if you see no selected range, the "delete" function applies to that
    single sample.
    </para>

    <para>
    The easiest way of selecting a range of samples is just to do that
    with mouse. It works like you are used from other applications: just press
    the left mouse button at the point you want to let the selection start
    and release the button where you want it to end.
    </para>
    <para>
    If you want to adjust or move the selection's start or end, you can move the
    mouse cursor near to the start or the end of the selection until it changes
    from the standard arrow cursor into the left-right arrow cursor and then
    press the left mouse button and adjust.
    </para>
    <para>
    You can also extend or shrink the selection to a specific point by holding
    down the shift button while klicking with the left mouse button. Depending
    on which border is nearer, the left or right border of the selection will
    be set to a new position.
    </para>
    <para>
    There are also some functions available via the menu and of course some
    keyboard shortcuts:
    <itemizedlist>
    <listitem><para>
	select the whole signal:
	<menuchoice>
	<shortcut><keycombo><keycap>Ctrl</keycap><keycap>A</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>All</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	remove any selection and select "nothing":
	<menuchoice>
	<shortcut><keycombo><keycap>N</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>Nothing</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	the currently visible area:
	<menuchoice>
	<shortcut><keycombo><keycap>V</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>Visible</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	the next block of samples, starting one sample after the end of the current
	selection and with the same length:
	<menuchoice>
	<shortcut><keycombo><keycap>Shift</keycap><keycap>+</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>Next</guimenuitem>
	</menuchoice>
    </para>
    <para>
	(Hint: use the "<keycap>+</keycap>" key from the numeric keypad!)
    </para></listitem>
    <listitem><para>
	the previous block of samples, ending one sample before the start of the current
	selection and with the same length:
	<menuchoice>
	<shortcut><keycombo><keycap>Shift</keycap><keycap>-</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>Previous</guimenuitem>
	</menuchoice>
    </para>
    <para>
	(Hint: use the "<keycap>-</keycap>" key from the numeric keypad!)
    </para></listitem>
    <listitem><para>
	expand the selection to the start of the signal (first sample):
	<menuchoice>
	<shortcut><keycombo><keycap>Shift</keycap><keycap>Home</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>to start</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	expand the selection to the end of the signal (last sample):
	<menuchoice>
	<shortcut><keycombo><keycap>Shift</keycap><keycap>End</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>to end</guimenuitem>
	</menuchoice>
    </para></listitem>
    <!-- expand to labels -->
    <listitem><para>
	expand the current selection left and right up to the next label
	(or start/end of the signal if there is none), starting at the
	current cursor position:
	<menuchoice>
	<shortcut><keycombo><keycap>E</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>Expand to labels</guimenuitem>
	</menuchoice>
    </para></listitem>
    <!-- no next/previous block -->
    <listitem><para>
	select the area between the next two labels that are right from the
	current selection or up to the end of the signal:
	<menuchoice>
	<shortcut><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>N</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>to next labels</guimenuitem>
	</menuchoice>
    </para></listitem>
    <listitem><para>
	select the area between the previous two labels that are left from the
	current selection or up to the start of the signal:
	<menuchoice>
	<shortcut><keycombo><keycap>Shift</keycap><keycap>Ctrl</keycap><keycap>P</keycap></keycombo></shortcut>
	<guimenu>Edit</guimenu><guimenuitem>Selection</guimenuitem><guimenuitem>to previous labels</guimenuitem>
	</menuchoice>
    </para></listitem>
    </itemizedlist>
    </para>

    </sect2>
    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Clipboard                                             +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="clipboard"><title>Clipboard</title>

    <para>
    &kwave; since v0.8.1 uses the clipboard of KDE. This way it
    is possible to exchange audio data between different &kwave; windows.
    It might be possible as well to exchange data between &kwave; and other
    audio applications, depending on their ability to use the KDE
    clipboard.
    </para>

    <para>
    When copying data to the clipboard through the <literal>copy</literal>
    function &kwave; uses the mime type
    <literal>audio/vnd.wave</literal> as data format, conforming to
    <ulink url="&url_rfc2361;">RFC 2361</ulink>
    which is the same as the well known <literal>wav</literal> format.
    When pasting from the clipboard into &kwave; all data formats that are
    available as file import formats are supported, like for example
    Ogg/Vorbis, FLAC and so on.
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Drag and Drop                                         +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="drag_and_drop"><title>Drag and Drop</title>

    <para>
    &kwave; supports the KDE Drag and Drop protocol. This enables you
    to open files just by picking them up in a <command>konqueror</command>
    window or the Desktop and let them drop into a window of &kwave;.
    </para>

    <para>
    Please note that if you drop a file into a &kwave; window that already
    contains an opened file, the currently opened file will be closed first
    and then the file you dropped will be opened in it. If you don't want that,
    you should open a new empty &kwave; window first.
    </para>

    <para>
    You can also select a range of samples and drag or drop them into
    a &kwave; window. Per default the drag operation is done in
    <emphasis>move</emphasis> mode where the selected range is deleted
    from the original place and inserted at the drop position.
    By pressing the <keycap moreinfo="none">Ctrl</keycap> key you can
    modify this and drag in <emphasis>copy</emphasis> mode instead.
    </para>

    </sect1>

</chapter>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: The main Kwave window                                 +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<!-- @@@ still to be done ... @@@
    <sect1 id="kwave-mainwindow"><title>The main &kwave; window</title>

        <para></para>
    	<sect2><title>The File Menu</title>
    	<para>
    	    <variablelist>
	    	<varlistentry>
		    <term>
		    	<menuchoice moreinfo="none">
			    <shortcut moreinfo="none">
			    	<keycombo moreinfo="none">
    			    	    <keycap moreinfo="none">Ctrl</keycap>
    	    	    	    	    <keycap moreinfo="none">n</keycap>
			    	</keycombo>
			    </shortcut>
    	    	    	    <guimenu moreinfo="none">File</guimenu>
    	    	    	    <guimenuitem moreinfo="none">New</guimenuitem>
			</menuchoice>
		    </term>
		    <listitem>
		    	<para>
			    <action moreinfo="none">Creates a new document</action>
			</para>
		    </listitem>
		</varlistentry>

    	    	<varlistentry>
		    <term>
		    	<menuchoice moreinfo="none">
			    <shortcut moreinfo="none">
			    	<keycombo moreinfo="none">
				    <keycap moreinfo="none">Ctrl</keycap>
    	    	    	    	    <keycap moreinfo="none">s</keycap>
				</keycombo>
			    </shortcut>
    	    	    	    <guimenu moreinfo="none">File</guimenu>
    	    	    	    <guimenuitem moreinfo="none">Save</guimenuitem>
			</menuchoice>
		    </term>

    	    	    <listitem>
		    	<para>
			    <action moreinfo="none">Saves the document</action>
			</para>
		    </listitem>
		</varlistentry>

    	    	<varlistentry>
		    <term>
		    	<menuchoice moreinfo="none">
			    <shortcut moreinfo="none">
			    	<keycombo moreinfo="none">
			    	    <keycap moreinfo="none">Ctrl</keycap>
    	    	    	    	    <keycap moreinfo="none">q</keycap>
			    	</keycombo>
			    </shortcut>
    	    	    	    <guimenu moreinfo="none">File</guimenu>
    	    	    	    <guimenuitem moreinfo="none">Quit</guimenuitem>
			</menuchoice>
		    </term>

		    <listitem>
		    	<para>
			    <action moreinfo="none">Quits</action> &kwave;
			</para>
		    </listitem>
		</varlistentry>
	    </variablelist>

    	</para>
	</sect2>
    </sect1>
</chapter>

-->
<!-- ###################################################################### -->
<!-- ### Chapter: Automization and scripting with Kwave                 ### -->
<!-- ###################################################################### -->

<chapter id="automization"><title>Automization and Scripting with &kwave;</title>
    <para>
	&kwave; since it's first version uses an internal text command language.
	This command language is used internally for menu handling, GUI control,
	builtin effects and plugin invocations. The commands will be described
	later in the section <link linkend="kwave_commands">Command Reference</link>.
    </para>

    <sect1><title>General Syntax</title>
    <para>
	<itemizedlist>
	    <listitem><para>
		All commands consist of a <emphasis>command name</emphasis> and
		an optional <emphasis>parameter list</emphasis> in round
		brackets, depending on the command.
	    </para></listitem>
	    <listitem><para>
		Allowed characters for command names are <emphasis>letters</emphasis>,
		<emphasis>digits</emphasis> and <emphasis>colon</emphasis>.
		Commands are case sensitive and are always in lower case.
	    </para></listitem>
	    <listitem><para>
		Parameters within a parameter list are separated by
		<emphasis>comma</emphasis>.
	    </para></listitem>
	    <listitem><para>
		Numerical parameters can be given as fixed point numbers or
		as floating point numbers, using a dot as decimal separator.
	    </para></listitem>
	    <listitem><para>
		String parameters are automatically trimmed (all whitespace
		at the start and at the end is removed). If that is not wanted,
		they can be surrounded by double quotes (<token>&quot;</token>).
		If a string parameter contains special characters (like
		<quote><token>,</token></quote>,
		<quote><token>;</token></quote>,
		<quote><token>#</token></quote> or a
		<quote><token>&bsol;</token></quote> itself), these special
		characters have to be escaped by preceding a
		<quote><token>&bsol;</token></quote>.
	    </para></listitem>
	    <listitem><para>
		Multiple commands can be concatenated to a <emphasis>command
		list</emphasis> by using a <quote>;</quote> as separator.
	    </para></listitem>
	</itemizedlist>
	Example:
	<screen><command>fileinfo(<parameter>Comments</parameter><token>,</token><parameter>"This is an \"example\" comment."</parameter>)</command></screen>
	This example consist of the command
	<quote><command>fileinfo</command></quote> and has two
	parameters: the keyword <parameter>Comments</parameter> and the text
	<quote><parameter>"This is an \"example\" comment."</parameter></quote>.
	(These parameters are explained in the corresponding section in the command reference).
    </para>
    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Using the Command Line                                +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="kwave_uri"><title>Using the Command Line</title>
    <para>
	In addition to the command line options listed in the section
	<link linkend="command_line">Command Line</link> which are used
	to start &kwave; in iconified mode or without splash screen,
	you can pass text commands on the command line, encoded in a
	special URI format:
    </para>
    <para>
	<literal>kwave:<replaceable>command</replaceable>[?<replaceable>parameter</replaceable>[,<replaceable>parameter</replaceable> ...] ]</literal>
    </para>

    <para>
	The rules for transforming a &kwave; text command into a valid URI
	are as follows:
	<itemizedlist>
	    <listitem><para>
		The URI starts with the word <literal>kwave</literal>, followed
		by a <quote><token>:</token></quote> and the command name.
	    </para></listitem>
	    <listitem><para>
		If the command has parameters, they have to be appended after
		the command name, using a <quote><token>?</token></quote> as separator.
	    </para></listitem>
	    <listitem><para>
		Multiple parameters can be appended by using a <quote><token>,</token></quote>
		as separator.
	    </para></listitem>
	    <listitem><para>
		All special characters in command name and parameters have to
		be URL encoded. Here a list of the translations:
		<table frame='all'><title>URL Encoding Translation Table</title>
		<tgroup cols='11' align='center' colsep='1' rowsep='1'>
		<colspec colname='c1'/>
		<colspec/>
		<colspec colname='c2' colnum='4'/>
		<colspec/>
		<colspec colname='c3' colnum='7'/>
		<colspec/>
		<colspec colname='c4' colnum='10'/>
		<colspec/>
		<thead>
		    <row>
			<entry colname='c1'>original</entry><entry>encoded</entry><entry>&#x0020;</entry>
			<entry colname='c2'>original</entry><entry>encoded</entry><entry>&#x0020;</entry>
			<entry colname='c3'>original</entry><entry>encoded</entry><entry>&#x0020;</entry>
			<entry colname='c4'>original</entry><entry>encoded</entry>
		    </row>
		</thead>
		<tbody>
		    <row>
			<entry colname='c1'>(space)</entry><entry><literal>%20</literal></entry>
			<entry colname='c2'>&#x0028;</entry><entry><literal>%28</literal></entry>
			<entry colname='c3'>&#x003A;</entry><entry><literal>%3A</literal></entry>
			<entry colname='c4'>&#x005C;</entry><entry><literal>%5C</literal></entry>
		    </row>
		    <row>
			<entry colname='c1'>&#x0021;</entry><entry><literal>%21</literal></entry>
			<entry colname='c2'>&#x0029;</entry><entry><literal>%29</literal></entry>
			<entry colname='c3'>&#x003B;</entry><entry><literal>%3B</literal></entry>
			<entry colname='c4'>&#x005D;</entry><entry><literal>%5D</literal></entry>
		    </row>
		    <row>
			<entry colname='c1'>&#x0022;</entry><entry><literal>%22</literal></entry>
			<entry colname='c2'>&#x002A;</entry><entry><literal>%2A</literal></entry>
			<entry colname='c3'>&#x003C;</entry><entry><literal>%3C</literal></entry>
			<entry colname='c4'>&#x005E;</entry><entry><literal>%5E</literal></entry>
		    </row>
		    <row>
			<entry colname='c1'>&#x0023;</entry><entry><literal>%23</literal></entry>
			<entry colname='c2'>&#x002B;</entry><entry><literal>%2B</literal></entry>
			<entry colname='c3'>&#x003D;</entry><entry><literal>%3D</literal></entry>
			<entry colname='c4'>&#x005F;</entry><entry><literal>%5F</literal></entry>
		    </row>
		    <row>
			<entry colname='c1'>&#x0024;</entry><entry><literal>%24</literal></entry>
			<entry colname='c2'>&#x002C;</entry><entry><literal>%2C</literal></entry>
			<entry colname='c3'>&#x003E;</entry><entry><literal>%3E</literal></entry>
			<entry colname='c4'>&#x0060;</entry><entry><literal>%60</literal></entry>
		    </row>
		    <row>
			<entry colname='c1'>&#x0025;</entry><entry><literal>%25</literal></entry>
			<entry colname='c2'>&#x002D;</entry><entry><literal>%2D</literal></entry>
			<entry colname='c3'>&#x003F;</entry><entry><literal>%3F</literal></entry>
			<entry colname='c4'>&#x007B;</entry><entry><literal>%7B</literal></entry>
		    </row>
		    <row>
			<entry colname='c1'>&#x0026;</entry><entry><literal>%26</literal></entry>
			<entry colname='c2'>&#x002E;</entry><entry><literal>%3E</literal></entry>
			<entry colname='c3'>&#x0040;</entry><entry><literal>%40</literal></entry>
			<entry colname='c4'>&#x007C;</entry><entry><literal>%7C</literal></entry>
		    </row>
		    <row>
			<entry colname='c1'>&#x0027;</entry><entry><literal>%27</literal></entry>
			<entry colname='c2'>&#x002F;</entry><entry><literal>%2F</literal></entry>
			<entry colname='c3'>&#x005B;</entry><entry><literal>%5B</literal></entry>
			<entry colname='c4'>&#x007D;</entry><entry><literal>%7D</literal></entry>
		    </row>
		    <row>
			<entry colname='c4'>&#x007E;</entry><entry><literal>%7E</literal></entry>
		    </row>
		</tbody>
		</tgroup>
		</table>
	    </para></listitem>
	</itemizedlist>
    </para>
    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Kwave Script Files                                    +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="kwave_scripts"><title>&kwave; Script Files</title>
    <sect2><title>General Structure</title>
	<para>
	    A &kwave; <emphasis>script</emphasis> consists of a list of
	    lines, where each line can be:
	    <itemizedlist>
		<listitem>
		    <para>a single <emphasis>command</emphasis>,</para>
		</listitem>
		<listitem>
		    <para>a <emphasis>command list</emphasis>, with two
			or more commands concatenated by
			a <quote><token>;</token></quote>.
		    </para>
		</listitem>
		<listitem>
		    <para>a <emphasis>comment</emphasis>,</para>
		</listitem>
		<listitem>
		    <para>a <emphasis>label</emphasis></para>
		</listitem>
		<listitem>
		    <para>or an <emphasis>empty line</emphasis>,
		    that contains whitespace only</para>
		</listitem>
	    </itemizedlist>
	</para>
    </sect2>
    <sect2><title>Comments and Empty Lines</title>
	<para>
	    All characters that follow a <quote><token>#</token></quote>
	    (except when used in quotes or when escaped) are treated as
	    comments, they will be silently ignored.
	</para>
	<para>
	    Lines that contain only whitespace or comments are ignored as
	    well.
	</para>
    </sect2>
    <sect2><title>Termination</title>
    <para>
	A &kwave; script terminates either when all commands have been
	executed successfully without an error or when a command has returned
	an error code. There is no special command for aborting the execution
	of a script. If you want to implement a possibility for the user to
	end a script, you can use the
	command <quote><link linkend="cmd_sect_msgbox"><command>msgbox</command></link>(<parameter><replaceable>text</replaceable></parameter>)</quote>.
	This shows a message box with the two
	buttons <quote><guibutton>OK</guibutton></quote> (which lets the script
	continue) and <quote><guibutton>Cancel</guibutton></quote> (which
	returns an error code and stops the script).
    </para>
    </sect2>
    <sect2><title>Labels</title>
    <para>
	Lines that consist only of an identifier, followed by a <quote><token>:</token></quote>
	are treated <emphasis>labels</emphasis>. They can be referenced
	later in the script by the special keyword <quote><command>GOTO</command></quote>
	<footnote><para>Note:
	    Please don't mix up the keyword <quote><command>GOTO</command></quote>
	    with the text command
	    <quote><link linkend="cmd_sect_goto"><command>goto</command></link>
		    (<parameter><replaceable>position</replaceable></parameter>)</quote> !
	</para></footnote>
	,which makes the execution of the script continue at the location of
	that label (see example below).
    </para>
    <para>
	A line that contains a label must not contain any other content
	(except comments or whitespace) after the <quote><token>:</token></quote>.
    </para>
    <para>
	Example:
	<screen>
	    <replaceable>start:</replaceable><literal>  # &lt;= this is a label</literal>
	    <literal>        # do something...</literal>
	    <literal>        </literal><command>msgbox</command>(<parameter>once again?</parameter>)
	    <literal>        </literal><command>GOTO <parameter>start</parameter></command>
	</screen>
    </para>
    </sect2>
    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Command Reference                                     +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="kwave_commands"><title>Command Reference</title>
	<index><title>Index</title>
	    &no-i18n-tag;
	    <!-- @COMMAND_INDEX_START@ -->
	    <indexdiv><title>a</title>
		<indexentry><primaryie><link linkend="cmd_sect_about_kde" endterm="cmd_title_about_kde"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_add_label" endterm="cmd_title_add_label"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_add_track" endterm="cmd_title_add_track"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>c</title>
		<indexentry><primaryie><link linkend="cmd_sect_clipboard_flush" endterm="cmd_title_clipboard_flush"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_close" endterm="cmd_title_close"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_continue" endterm="cmd_title_continue"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_copy" endterm="cmd_title_copy"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_crop" endterm="cmd_title_crop"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_cut" endterm="cmd_title_cut"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>d</title>
		<indexentry><primaryie><link linkend="cmd_sect_delete" endterm="cmd_title_delete"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_delete_label" endterm="cmd_title_delete_label"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_delete_track" endterm="cmd_title_delete_track"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_dump_metadata" endterm="cmd_title_dump_metadata"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>e</title>
		<indexentry><primaryie><link linkend="cmd_sect_edit_label" endterm="cmd_title_edit_label"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_expandtolabel" endterm="cmd_title_expandtolabel"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>f</title>
		<indexentry><primaryie><link linkend="cmd_sect_fileinfo" endterm="cmd_title_fileinfo"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_forward" endterm="cmd_title_forward"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>g</title>
		<indexentry><primaryie><link linkend="cmd_sect_goto" endterm="cmd_title_goto"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>i</title>
		<indexentry><primaryie><link linkend="cmd_sect_insert_at" endterm="cmd_title_insert_at"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_insert_track" endterm="cmd_title_insert_track"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>l</title>
		<indexentry><primaryie><link linkend="cmd_sect_loadbatch" endterm="cmd_title_loadbatch"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_loop" endterm="cmd_title_loop"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>m</title>
		<indexentry><primaryie><link linkend="cmd_sect_menu" endterm="cmd_title_menu"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_msgbox" endterm="cmd_title_msgbox"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>n</title>
		<indexentry><primaryie><link linkend="cmd_sect_newsignal" endterm="cmd_title_newsignal"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_next" endterm="cmd_title_next"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>o</title>
		<indexentry><primaryie><link linkend="cmd_sect_open" endterm="cmd_title_open"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_openrecent" endterm="cmd_title_openrecent"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>p</title>
		<indexentry><primaryie><link linkend="cmd_sect_paste" endterm="cmd_title_paste"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_pause" endterm="cmd_title_pause"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_playback_start" endterm="cmd_title_playback_start"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_plugin" endterm="cmd_title_plugin"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_plugin_execute" endterm="cmd_title_plugin_execute"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_plugin_setup" endterm="cmd_title_plugin_setup"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_prev" endterm="cmd_title_prev"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>q</title>
		<indexentry><primaryie><link linkend="cmd_sect_quit" endterm="cmd_title_quit"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>r</title>
		<indexentry><primaryie><link linkend="cmd_sect_redo" endterm="cmd_title_redo"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_redo_all" endterm="cmd_title_redo_all"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_reenable_dna" endterm="cmd_title_reenable_dna"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_reset_toolbars" endterm="cmd_title_reset_toolbars"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_revert" endterm="cmd_title_revert"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_rewind" endterm="cmd_title_rewind"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>s</title>
		<indexentry><primaryie><link linkend="cmd_sect_save" endterm="cmd_title_save"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_saveas" endterm="cmd_title_saveas"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_saveselect" endterm="cmd_title_saveselect"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_select_gui_type" endterm="cmd_title_select_gui_type"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_select_track_all" endterm="cmd_title_select_track_all"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_select_track_invert" endterm="cmd_title_select_track_invert"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_select_track_none" endterm="cmd_title_select_track_none"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_select_track_off" endterm="cmd_title_select_track_off"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_select_track_on" endterm="cmd_title_select_track_on"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_select_track_toggle" endterm="cmd_title_select_track_toggle"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selectall" endterm="cmd_title_selectall"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selectnext" endterm="cmd_title_selectnext"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selectnextlabels" endterm="cmd_title_selectnextlabels"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selectnone" endterm="cmd_title_selectnone"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selectprev" endterm="cmd_title_selectprev"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selectprevlabels" endterm="cmd_title_selectprevlabels"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selecttoleft" endterm="cmd_title_selecttoleft"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selecttoright" endterm="cmd_title_selecttoright"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_selectvisible" endterm="cmd_title_selectvisible"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_start" endterm="cmd_title_start"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_stop" endterm="cmd_title_stop"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>u</title>
		<indexentry><primaryie><link linkend="cmd_sect_undo" endterm="cmd_title_undo"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_undo_all" endterm="cmd_title_undo_all"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>v</title>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_end" endterm="cmd_title_view_scroll_end"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_left" endterm="cmd_title_view_scroll_left"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_next" endterm="cmd_title_view_scroll_next"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_next_label" endterm="cmd_title_view_scroll_next_label"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_prev" endterm="cmd_title_view_scroll_prev"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_prev_label" endterm="cmd_title_view_scroll_prev_label"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_right" endterm="cmd_title_view_scroll_right"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_scroll_start" endterm="cmd_title_view_scroll_start"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_zoom_all" endterm="cmd_title_view_zoom_all"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_zoom_in" endterm="cmd_title_view_zoom_in"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_zoom_normal" endterm="cmd_title_view_zoom_normal"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_zoom_out" endterm="cmd_title_view_zoom_out"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_view_zoom_selection" endterm="cmd_title_view_zoom_selection"/></primaryie></indexentry>
	    </indexdiv>
	    <indexdiv><title>w</title>
		<indexentry><primaryie><link linkend="cmd_sect_window_activate" endterm="cmd_title_window_activate"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_window_cascade" endterm="cmd_title_window_cascade"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_window_next_sub" endterm="cmd_title_window_next_sub"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_window_prev_sub" endterm="cmd_title_window_prev_sub"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_window_tile" endterm="cmd_title_window_tile"/></primaryie></indexentry>
		<indexentry><primaryie><link linkend="cmd_sect_window_tile_vertical" endterm="cmd_title_window_tile_vertical"/></primaryie></indexentry>
	    </indexdiv>
	    <!-- @COMMAND_INDEX_END@ -->
	</index>

	<para><literal> </literal></para>
    </sect1>

    <sect1 id="commands_a"><title>&no-i18n-tag;a</title>

	<!-- @COMMAND@ about_kde() -->
	<sect2 id="cmd_sect_about_kde"><title id="cmd_title_about_kde">&no-i18n-cmd_about_kde;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_about_kde;</command>()</title>
	    <para>
		Shows a dialog window with information about the KDE
		version used by the computer &kwave; is running at.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ add_label(pos,[text]) -->
	<sect2 id="cmd_sect_add_label"><title id="cmd_title_add_label">&no-i18n-cmd_add_label;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_add_label;</command>(<replaceable>pos</replaceable>[,<replaceable>text</replaceable>])</title>
	    <para>
		Add a new label at a given position. If the given position already
		contains a label, then this command does nothing. The label can
		be given an optional description.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>pos</parameter>:</entry><entry>position in samples where to insert the label</entry></row>
	    <row><entry><parameter>text</parameter>:</entry><entry>some descriptive text (optional)</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ add_track() -->
	<sect2 id="cmd_sect_add_track"><title id="cmd_title_add_track">&no-i18n-cmd_add_track;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_add_track;</command>()</title>
	    <para>
		Adds a new track after all existing tracks.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_insert_track"><command>&no-i18n-tag;&no-i18n-cmd_insert_track;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_c"><title>&no-i18n-tag;c</title>

	<!-- @COMMAND@ clipboard_flush() -->
	<sect2 id="cmd_sect_clipboard_flush"><title id="cmd_title_clipboard_flush">&no-i18n-cmd_clipboard_flush;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_clipboard_flush;</command>()</title>
	    <para>
		Discards the current content of the clipboard
		(might free some memory).
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ close() -->
	<sect2 id="cmd_sect_close"><title id="cmd_title_close">&no-i18n-cmd_close;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_close;</command>()</title>
	    <para>
		Closes the current file. If the GUI is configured to MDI or Tab mode,
		this also closes the corresponding sub window.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_open"><command>&no-i18n-tag;&no-i18n-cmd_open;</command>(<replaceable>filename</replaceable>)</link>,
		<link linkend="cmd_sect_quit"><command>&no-i18n-tag;&no-i18n-cmd_quit;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ continue() -->
	<sect2 id="cmd_sect_continue"><title id="cmd_title_continue">&no-i18n-cmd_continue;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_continue;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Continue</guibutton> toolbar
		button and lets the playback continue if it is paused.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_pause"><command>&no-i18n-tag;&no-i18n-cmd_pause;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ copy() -->
	<sect2 id="cmd_sect_copy"><title id="cmd_title_copy">&no-i18n-cmd_copy;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_copy;</command>()</title>
	    <para>
		Copies the content of the current selection to the clipboard. If the
		selection is empty, this command does nothing and the content
		of the clipboard remains unchanged.
		Only the content of the currently selected tracks is copied
		to the clipboard!
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_paste"><command>&no-i18n-tag;&no-i18n-cmd_paste;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ crop() -->
	<sect2 id="cmd_sect_crop"><title id="cmd_title_crop">&no-i18n-cmd_crop;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_crop;</command>()</title>
	    <para>
		Crops the signal to the current selection by deleting everything
		that is after and before the current selection. Affects all tracks.
		If nothing is selected this command does nothing.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ cut() -->
	<sect2 id="cmd_sect_cut"><title id="cmd_title_cut">&no-i18n-cmd_cut;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_cut;</command>()</title>
	    <para>
		Copies the content of the current selection to the clipboard and
		removes it from the signal. If the selection is empty, this
		command does nothing and the content of the clipboard remains unchanged.
		Only the content of the currently selected tracks is copied to
		the clipboard, but the selected range is deleted from all tracks.
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_d"><title>&no-i18n-tag;d</title>

	<!-- @COMMAND@ delete() -->
	<sect2 id="cmd_sect_delete"><title id="cmd_title_delete">&no-i18n-cmd_delete;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_delete;</command>()</title>
	    <para>
		Deletes the currently selected range of samples.
		If the selection is empty, this command does nothing.
		Affects all tracks.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ delete_label(index) -->
	<sect2 id="cmd_sect_delete_label"><title id="cmd_title_delete_label">&no-i18n-cmd_delete_label;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_delete_label;</command>(<replaceable>index</replaceable>)</title>
	    <para>
		Deletes a label, identified by it's index (starting from zero).
		If no label with the given index exists, this command does nothing.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>index</parameter>:</entry><entry>index of the label to delete, starting with 0</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ delete_track(index) -->
	<sect2 id="cmd_sect_delete_track"><title id="cmd_title_delete_track">&no-i18n-cmd_delete_track;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_delete_label;</command>(<replaceable>index</replaceable>)</title>
	    <para>
		Deletes a track, identified by it's index (starting from zero).
		If no track with the given index exists, this command exits with an error.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>index</parameter>:</entry><entry>index of the track to delete, starting with 0</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ dump_metadata() -->
	<sect2 id="cmd_sect_dump_metadata"><title id="cmd_title_dump_metadata">&no-i18n-cmd_dump_metadata;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_dump_metadata;</command>()</title>
	    <para>
		Prints a list of all meta data entries to the console, for diagnostic purposes.
		(Only available when &kwave; has been compiled with the option
		<literal>WITH_DEBUG</literal> switched on).
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_e"><title>&no-i18n-tag;e</title>

	<!-- @COMMAND@ edit_label(index) -->
	<sect2 id="cmd_sect_edit_label"><title id="cmd_title_edit_label">&no-i18n-cmd_edit_label;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_edit_label;</command>(<replaceable>index</replaceable>)</title>
	    <para>
		Opens a window in which the user can edit the position and the
		description of a label, which is identified by it's index
		(starting from zero). If no label with the given index exists,
		this command does nothing.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>index</parameter>:</entry><entry>index of the label to edit, starting with 0</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ expandtolabel() -->
	<sect2 id="cmd_sect_expandtolabel"><title id="cmd_title_expandtolabel">&no-i18n-cmd_expandtolabel;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_expandtolabel;</command>()</title>
	    <para>
		Expands the current selection to the labels left and right from
		the current selection borders. If the border of selection already
		is on a label, it stays unchanged. If there is no label left
		or right of the current selection, it will be expanded to the
		start or end of the file.
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_f"><title>&no-i18n-tag;f</title>

	<!-- @COMMAND@ fileinfo(keyword,value) -->
	<sect2 id="cmd_sect_fileinfo"><title id="cmd_title_fileinfo">&no-i18n-cmd_fileinfo;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_fileinfo;</command>(<replaceable>index</replaceable>)</title>
	    <para>
		Set a file info entry to a new value.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>keyword</parameter>:</entry><entry>keyword of the entry</entry></row>
	    <row><entry><parameter>value</parameter>:</entry><entry>value of the entry</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ forward() -->
	<sect2 id="cmd_sect_forward"><title id="cmd_title_forward">&no-i18n-cmd_forward;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_forward;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Forward</guibutton> toolbar
		button. If the playback is currently running, it skips forward
		by 1/10 of the visible range. If the playback is not running,
		this does the same as the command
		<command>&no-i18n-cmd_view_scroll_right;</command>.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_right"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_right;</command>()</link>,
		<link linkend="cmd_sect_rewind"><command>&no-i18n-tag;&no-i18n-cmd_rewind;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_g"><title>&no-i18n-tag;g</title>

	<!-- @COMMAND@ goto() -->
	<sect2 id="cmd_sect_goto"><title id="cmd_title_goto">&no-i18n-cmd_goto;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_goto;</command>(<replaceable>pos</replaceable>)</title>
	    <para>
		Sets the cursor to the given position and makes it visible in
		current view. After this the selection has zero length.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>pos</parameter>:</entry><entry>position in samples where to go to</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_i"><title>&no-i18n-tag;i</title>

	<!-- @COMMAND@ insert_at(pos) -->
	<sect2 id="cmd_sect_insert_at"><title id="cmd_title_insert_at">&no-i18n-cmd_insert_at;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_insert_at;</command>(<replaceable>pos</replaceable>)</title>
	    <para>
		Inserts the content of the clipboard at the given position,
		like the command <command>&no-i18n-cmd_paste;()</command>().
		If the clipboard is currently empty, this function does nothing.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>pos</parameter>:</entry><entry>position in samples where to insert</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title>See also</title>
	    <para><link linkend="cmd_sect_paste"><command>&no-i18n-tag;&no-i18n-cmd_paste;</command>()</link></para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ insert_track(index) -->
	<sect2 id="cmd_sect_insert_track"><title id="cmd_title_insert_track">&no-i18n-cmd_insert_track;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_insert_track;</command>(<replaceable>index</replaceable>)</title>
	    <para>
		Inserts a new track at the given index, using the current length
		and sample rate settings of the signal. If the index is
		higher than or equal to the current number of tracks, it will
		be appended as the last track, same as by the command
		<command>&no-i18n-cmd_add_track;()</command>.
		The index of all existing tracks at and after the given
		index will be incremented by one.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>index</parameter>:</entry><entry>index of the track to insert, starting with 0</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_add_track"><command>&no-i18n-tag;&no-i18n-cmd_add_track;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_l"><title>&no-i18n-tag;l</title>

	<!-- @COMMAND@ loadbatch(filename) -->
	<sect2 id="cmd_sect_loadbatch"><title id="cmd_title_loadbatch">&no-i18n-cmd_loadbatch;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_loadbatch;</command>(<replaceable>filename</replaceable>)</title>
	    <para>
		Opens a &kwave; script file and processes the commands in it.
		Uses the context of the currently opened file or the current
		main window if no file is loaded.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>filename</parameter>:</entry>
		<entry>name of the kwave script file including path and extension</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ loop() -->
	<sect2 id="cmd_sect_loop"><title id="cmd_title_loop">&no-i18n-cmd_loop;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_loop;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Loop</guibutton> toolbar
		button. Starts the playback (if it is not already running) and
		lets it play in a loop.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_playback_start"><command>&no-i18n-tag;&no-i18n-cmd_playback_start;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_m"><title>&no-i18n-tag;m</title>

	<!-- @COMMAND@ menu(command,path,hotkey,id) -->
	<sect2 id="cmd_sect_menu"><title id="cmd_title_menu">&no-i18n-cmd_menu;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_menu;</command>
		(<replaceable>command</replaceable>,
		 <replaceable>path</replaceable>,
		 [<replaceable>hotkey</replaceable>],
		 [<replaceable>id</replaceable>])
	    </title>
	    <para>
		This is a very powerful command, which is used to add a new
		entry to the menu or to modify an existing entry. It determines
		which <emphasis>command</emphasis> is executed when the menu
		entry is activated, which <emphasis>icon</emphasis> is shown
		in the menu and which <emphasis>hotkey</emphasis> is used.
		Each menu entry can be <emphasis>disabled</emphasis> or
		<emphasis>hidden</emphasis>, can be assigned
		a unique <emphasis>id</emphasis> and can also join
		a <emphasis>menu group</emphasis>.
	    </para>
	    <para>
		You normally do not need this command within a &kwave; script!
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row valign="top">
		<entry><parameter>command</parameter>:</entry>
		<entry>
		    A text command (including parameters) or a command list
		    that will be executed when the menu entry gets activated.
		    If a menu entry does not have a corresponding command
		    (for example if it is a sub menu and not menu entry),
		    you should use the special
		    command <command>ignore()</command>.
		</entry>
	    </row>
	    <row valign="top">
		<entry><parameter>path</parameter>:</entry>
		<entry>
		    The path within the menu, using a <quote><token>/</token></quote>
		    as separator. The last part of the path can be a <emphasis>sub
		    command</emphasis> which modifies some property of the menu
		    entry (see <link linkend="menu_sub_commands">below</link>).
		    The last portion of the path (that is not a sub
		    command) produces a menu entry, the parts before produce
		    the main menu entry or sub menus that lead to it.
		    Main menu entries or sub menus are automatically created
		    when a menu entry is created, you do not need them manually.
		</entry>
	    </row>
	    <row valign="top">
		<entry><parameter>hotkey</parameter>:</entry>
		<entry>
		    A bitmask that consists of a combination of predefined
		    <emphasis>keys</emphasis> and <emphasis>modifiers</emphasis>,
		    concatenated with a <quote><token>+</token></quote>.
		    The <emphasis>key</emphasis> can be either a digit, an
		    upper case letter, a function
		    key (<quote>F1</quote> ... <quote>F12</quote>) or any other
		    key name understood by the Qt class
		    <quote><literal>QKeySequence</literal></quote>,including
		    key names for predefined actions (like for example
		    <quote><literal>::Copy</literal></quote>).
		    Typical <emphasis>modifiers</emphasis> are
		    <quote><literal>SHIFT</literal></quote>,
		    <quote><literal>ALT</literal></quote> and
		    <quote><literal>CTRL</literal></quote>.
		</entry>
	    </row>
	    <row valign="top">
		<entry><parameter>id</parameter>:</entry>
		<entry>
		    A unique id that can be internally used to identify this
		    menu entry or menu / sub menu. Only uppercase letters, digits
		    and <quote><literal>_</literal></quote> should be used and
		    it should start with <quote><literal>ID_</literal></quote>.
		    It is in your own responsibility to make sure that the same
		    id is not used twice.
		</entry>
	    </row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title id="menu_sub_commands">Sub Commands</title>
	    <informaltable frame='none'><tgroup cols='2'><tbody>
	    <row valign="top"><entry><command>&no-i18n-tag;#checkable</command>:</entry>
		<entry>
		    Makes a menu entry <emphasis>checkable</emphasis>, so that
		    it can be switched on or off.
		</entry>
	    </row>
	    <row valign="top"><entry><command>&no-i18n-tag;#disabled</command>:</entry>
		<entry>
		    Lets the menu entry or menu/sub menu be
		    <emphasis>disabled</emphasis>.
		</entry>
	    </row>
	    <row valign="top"><entry><command>&no-i18n-tag;#enabled</command>:</entry>
		<entry>
		    Makes a menu entry or menu/sub menu that has been previously
		    disabled <emphasis>enabled</emphasis> again.
		</entry>
	    </row>
	    <row valign="top"><entry><command>#exclusive</command>(<replaceable>group</replaceable>):</entry>
		<entry>
		    Makes a menu entry be part of an <emphasis>exclusive</emphasis>
		    <emphasis><replaceable>group</replaceable></emphasis> (one
		    of many selection). The group that is given as parameter
		    should not be used for any other purpose. Only one entry
		    within that group can be selected at a time.
		</entry>
	    </row>
	    <row valign="top"><entry><command>#group</command>(<replaceable>list</replaceable>):</entry>
		<entry><para>
		    Adds the menu entry or menu/sub menu to one or more
		    a <emphasis>groups</emphasis>, so that the application can
		    enable/disable a bunch of menu entries without need to know
		    all their unique ids. Multiple groups can be passed as a
		    list with a <quote><literal>,</literal></quote> as
		    separator. Group names have to start
		    with a <quote><literal>@</literal></quote>.
		    The following groups predefined:
		    <informaltable frame='none'><tgroup cols='2'><tbody>
		    <row valign="top">
			<entry><command>&no-i18n-tag;@CLIPBOARD</command>:</entry>
			<entry>
			    Only enabled when the clipboard is not empty.
			</entry>
		    </row>
		    <row valign="top">
			<entry><command>&no-i18n-tag;@LABELS</command>:</entry>
			<entry>Only enabled when the current signal contains
			    at least one label.
			</entry>
		    </row>
		    <row valign="top">
			<entry><command>&no-i18n-tag;@NOT_CLOSED</command>:</entry>
			<entry>
			    Enabled when the current signal is not closed
			    (the signal might be empty or zero length).
			</entry>
		    </row>
		    <row valign="top">
			<entry><command>&no-i18n-tag;@SELECTION</command>:</entry>
			<entry>
			    Enabled when the selection is not empty (more than
			    one sample is selected).
			</entry>
		    </row>
		    <row valign="top">
			<entry><command>&no-i18n-tag;@SIGNAL</command>:</entry>
			<entry>
			    Enabled when there is some signal loaded and it
			    is not empty or zero length.
			</entry>
		    </row>
		    </tbody></tgroup></informaltable>
		</para></entry>
	    </row>
	    <row valign="top"><entry><command>&no-i18n-tag;#hidden</command>:</entry>
		<entry>
		    <emphasis>Hides</emphasis> the menu entry or menu/sub menu.
		</entry></row>
	    <row valign="top"><entry><command>#icon</command>(<replaceable>name</replaceable>):</entry>
		<entry>
		    Assigns an <emphasis>icon</emphasis> to a menu entry. The
		    icon <emphasis><replaceable>name</replaceable></emphasis>
		    should correspond to an icon file (without
		    path and file extension) that is installed with KDE or
		    with &kwave;.
		</entry>
	    </row>
	    <row valign="top"><entry><command>#listmenu</command>(<replaceable>id</replaceable>,<replaceable>command</replaceable>):</entry>
		<entry>
		    Inserts a placeholder for a list of menu entries into a
		    sub menu.
		    The unique <emphasis><replaceable>id</replaceable></emphasis>
		    specified in this sub command is used
		    to add/remove or clear the list of menu entries.
		    The <emphasis><replaceable>command</replaceable></emphasis>
		    parameter has to contain <quote><literal>%1</literal></quote>
		    as parameter, which will be replaced with the text of the
		    menu entry when it is activated.
		    (This sub command is internally used for the list of
		    recent files, list of tracks and window list).
		</entry>
	    </row>
	    <row valign="top"><entry><command>&no-i18n-tag;#separator</command>:</entry>
		<entry>
		    Inserts a separator into a sub menu.
		</entry>
	    </row>
	</tbody></tgroup></informaltable>
	</simplesect>

	</sect2>

	<!-- @COMMAND@ msgbox(text) -->
	<sect2 id="cmd_sect_msgbox"><title id="cmd_title_msgbox">&no-i18n-cmd_msgbox;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_msgbox;</command>(<replaceable>text</replaceable>)</title>
	    <para>
		Shows a message box with some <emphasis><replaceable>text</replaceable></emphasis>
		and the two buttons <quote><guibutton>OK</guibutton></quote>
		(returns without error code) and
		<quote><guibutton>Cancel</guibutton></quote> (returns and error
		code). You can use this command to give the user a possibility
		to abort a running script.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>text</parameter>:</entry>
		<entry>A message that will be shown in the message box, should
		    contain a question that can be answered with <quote>OK</quote>
		    or <quote>Cancel</quote>
		</entry>
	    </row>
	</tbody></tgroup></informaltable></simplesect>

	</sect2>
    </sect1>

    <sect1 id="commands_n"><title>&no-i18n-tag;n</title>

	<!-- @COMMAND@ newsignal(samples,rate,bits,tracks) -->
	<sect2 id="cmd_sect_newsignal"><title id="cmd_title_newsignal">&no-i18n-cmd_newsignal;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_newsignal;</command>(
		<replaceable>samples</replaceable>,
		<replaceable>rate</replaceable>,
		<replaceable>bits</replaceable>,
		<replaceable>tracks</replaceable>)
	    </title>
	    <para>
		Creates a new signal, with a given length in
		<emphasis><replaceable>samples</replaceable></emphasis>, a
		<emphasis><replaceable>rate</replaceable></emphasis> in samples
		per second (floating point number), a number of
		<emphasis><replaceable>bits</replaceable></emphasis> per sample
		and number of <emphasis><replaceable>tracks</replaceable></emphasis>.
		You can calculate the length in samples by multiplying the desired
		length in seconds with the sample rate.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>samples</parameter>:</entry>
		<entry>Length of the signal in samples.</entry></row>
	    <row><entry><parameter>rate</parameter>:</entry>
		<entry>Sample rate in samples per second.</entry></row>
	    <row><entry><parameter>bits</parameter>:</entry>
		<entry>Number of bits per sample, must not be zero, should be
		    a number from 8...32.</entry></row>
	    <row><entry><parameter>tracks</parameter>:</entry>
		<entry>Number of tracks.</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ next() -->
	<sect2 id="cmd_sect_next"><title id="cmd_title_next">&no-i18n-cmd_next;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_next;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Next</guibutton> toolbar
		button. If the playback is currently running, it skips forward
		to the next label. If the playback is not running,
		this does the same as the command
		<command>&no-i18n-cmd_view_scroll_next_label;</command>.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_next_label"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_next_label;</command>()</link>,
		<link linkend="cmd_sect_prev"><command>&no-i18n-tag;&no-i18n-cmd_prev;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_o"><title>&no-i18n-tag;o</title>

	<!-- @COMMAND@ open(filename) -->
	<sect2 id="cmd_sect_open"><title id="cmd_title_open">&no-i18n-cmd_open;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_open;</command>([<replaceable>filename</replaceable>])</title>
	    <para>
		Opens a file, which can be either a sound file or a &kwave; script.
		If no file name is passed, then a dialog window will be opened that
		allows to select an existing file. Depending on the GUI mode the
		file will be opened in the context of a new sub window (MDI and
		tab) or in a new main window (SDI, if there was already something
		loaded).
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>filename</parameter>:</entry>
		<entry>name of a file including path and extension</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_close"><command>&no-i18n-tag;&no-i18n-cmd_close;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ openrecent(filename) -->
	<sect2 id="cmd_sect_openrecent"><title id="cmd_title_openrecent">&no-i18n-cmd_openrecent;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_openrecent;</command>(<replaceable>filename</replaceable>)</title>
	    <para>
		Practically the same as the command
		<command>&no-i18n-cmd_open;</command>, but intended to be used
		internally for the list of recently opened files in the menu
		<menuchoice>
		    <guimenu>File</guimenu><guimenu>Open Recent</guimenu>
		</menuchoice>.
		In this command the parameter <replaceable>filename</replaceable> is
		not optional.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>filename</parameter>:</entry>
		<entry>entry of the list of recently opened files</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_open"><command>&no-i18n-tag;&no-i18n-cmd_open;</command></link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_p"><title>&no-i18n-tag;p</title>

	<!-- @COMMAND@ paste() -->
	<sect2 id="cmd_sect_paste"><title id="cmd_title_paste">&no-i18n-cmd_paste;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_paste;</command>()</title>
	    <para>
		Replaces the current selection with the content of the clipboard.
		If the clipboard is empty, this command does nothing.
		The sample rate of the inserted data is adjusted to match the
		sample rate of the current signal if necessary.
		Only enabled tracks are affected, disabled tracks remain
		unchanged. Please be aware that this might produce a time shift
		between enabled and disabled tracks!
		If the number of tracks of the clipboard data differs
		from the number of enabled tracks, then the data is mixed to
		be spread equally over all selected tracks.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_copy"><command>&no-i18n-tag;&no-i18n-cmd_copy;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ pause() -->
	<sect2 id="cmd_sect_pause"><title id="cmd_title_pause">&no-i18n-cmd_pause;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_continue;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Pause</guibutton> toolbar
		button and lets the playback pause if it is currently running,
		or continue if it is currently paused.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_continue"><command>&no-i18n-tag;&no-i18n-cmd_continue;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ playback_start() -->
	<sect2 id="cmd_sect_playback_start"><title id="cmd_title_playback_start">&no-i18n-cmd_playback_start;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_playback_start;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Start</guibutton> toolbar
		button and lets the playback start if it is currently paused.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ plugin(name,[parameter,...]) -->
	<sect2 id="cmd_sect_plugin"><title id="cmd_title_plugin">&no-i18n-cmd_plugin;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_plugin;</command>(<replaceable>name</replaceable>, [<replaceable>parameter</replaceable> ...])</title>
	    <para>
		Executes a plugin, with an optional list of parameters. If no
		parameter list is given, then the setup function of the plugin
		will be called, using the parameters of the previous
		invocation or default parameters as input (normally shows a
		setup dialog, depending on the plugin).
		Please refer to the chapter about <link linkend="plugins">plugins</link>
		for a description of the various plugins.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>name</parameter>:</entry>
		<entry>the (internal) name of a &kwave; plugin</entry></row>
	    <row><entry><parameter>parameter</parameter>:</entry>
		<entry>a list of parameters understood by the plugin (optional)</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_plugin_execute"><command>&no-i18n-tag;&no-i18n-cmd_plugin_execute;</command>()</link>,
		<link linkend="cmd_sect_plugin_setup"><command>&no-i18n-tag;&no-i18n-cmd_plugin_setup;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ plugin:execute(name,[parameter,...]) -->
	<sect2 id="cmd_sect_plugin_execute"><title id="cmd_title_plugin_execute">&no-i18n-cmd_plugin_execute;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_plugin_execute;</command>(<replaceable>name</replaceable>, [<replaceable>parameter</replaceable> ...])</title>
	    <para>
		Similar to the command <quote><command>&no-i18n-cmd_plugin;</command>()</quote>,
		but without calling the setup function of the plugin if no parameters
		were passed.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>name</parameter>:</entry>
		<entry>the (internal) name of a &kwave; plugin</entry></row>
	    <row><entry><parameter>parameter</parameter>:</entry>
		<entry>a list of parameters understood by the plugin</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ plugin:setup(name,[parameter,...]) -->
	<sect2 id="cmd_sect_plugin_setup"><title id="cmd_title_plugin_setup">&no-i18n-cmd_plugin_setup;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_plugin_setup;</command>(<replaceable>name</replaceable>, [<replaceable>parameter</replaceable> ...])</title>
	    <para>
		Calls the <emphasis>setup</emphasis> function of a plugin, with
		an optional list of parameters. If no parameter list is given,
		the parameters of the previous invocation or default parameters
		will be used as input. This normally shows a setup dialog,
		depending on the plugin.
		Please refer to the chapter about <link linkend="plugins">plugins</link>
		for a description of the various plugins.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>name</parameter>:</entry>
		<entry>the (internal) name of a &kwave; plugin</entry></row>
	    <row><entry><parameter>parameter</parameter>:</entry>
		<entry>a list of parameters understood by the plugin (optional)</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ prev() -->
	<sect2 id="cmd_sect_prev"><title id="cmd_title_prev">&no-i18n-cmd_prev;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_prev;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Previous</guibutton> toolbar
		button. If the playback is currently running, it skips back
		to the previous label or start of the selection. If the playback
		is not running, this does the same as the command
		<command>&no-i18n-cmd_view_scroll_prev_label;</command>.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_next_label"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_prev_label;</command>()</link>,
		<link linkend="cmd_sect_next"><command>&no-i18n-tag;&no-i18n-cmd_next;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_q"><title>&no-i18n-tag;q</title>

	<!-- @COMMAND@ quit() -->
	<sect2 id="cmd_sect_quit"><title id="cmd_title_quit">&no-i18n-cmd_quit;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_quit;</command>()</title>
	    <para>
		Closes the current main window, including all sub windows.
		In SDI mode this is the same as the command
		<quote><command>&no-i18n-cmd_close;</command>()</quote>.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_close"><command>&no-i18n-tag;&no-i18n-cmd_close;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_r"><title>&no-i18n-tag;r</title>

	<!-- @COMMAND@ redo() -->
	<sect2 id="cmd_sect_redo"><title id="cmd_title_redo">&no-i18n-cmd_redo;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_redo;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Redo</guibutton> toolbar
		button and repeats one operation that has been reverted with
		<command>&no-i18n-cmd_undo;</command>.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_undo"><command>&no-i18n-tag;&no-i18n-cmd_undo;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ redo_all() -->
	<sect2 id="cmd_sect_redo_all"><title id="cmd_title_redo_all">&no-i18n-cmd_redo_all;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_redo_all;</command>()</title>
	    <para>
		Similar to <command>&no-i18n-cmd_redo;</command>, but re-does
		as many operations as possible.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_undo"><command>&no-i18n-tag;&no-i18n-cmd_undo;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ reenable_dna() -->
	<sect2 id="cmd_sect_reenable_dna"><title id="cmd_title_reenable_dna">&no-i18n-cmd_reenable_dna;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_reenable_dna;</command>()</title>
	    <para>
		Some message boxes offer the possibility to prevent them from
		appearing again (<quote>do not ask again</quote>). This command
		makes all of them appear again.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ reset_toolbars() -->
	<sect2 id="cmd_sect_reset_toolbars"><title id="cmd_title_reset_toolbars">&no-i18n-cmd_reset_toolbars;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_reset_toolbars;</command>()</title>
	    <para>
		Resets all toolbar settings, like location, icon size and text
		location back to defaults.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ revert() -->
	<sect2 id="cmd_sect_revert"><title id="cmd_title_revert">&no-i18n-cmd_revert;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_revert;</command>()</title>
	    <para>
		Reverts the currently loaded file back to the last saved state,
		discarding all changes that are not saved.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ rewind() -->
	<sect2 id="cmd_sect_rewind"><title id="cmd_title_rewind">&no-i18n-cmd_rewind;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_rewind;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Rewind</guibutton> toolbar
		button. If the playback is currently running, it skips backward
		by 1/10 of the visible range. If the playback is not running,
		this does the same as the command
		<command>&no-i18n-cmd_view_scroll_left;</command>.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_left"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_left;</command>()</link>,
		<link linkend="cmd_sect_forward"><command>&no-i18n-tag;&no-i18n-cmd_forward;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_s"><title>&no-i18n-tag;s</title>

	<!-- @COMMAND@ save() -->
	<sect2 id="cmd_sect_save"><title id="cmd_title_save">&no-i18n-cmd_save;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_save;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Save</guibutton> toolbar
		button. Saves the current file if it has modifications.
		If the file does not already have a name (e.g. a file that has
		just been created and does not yet have a file name), this
		command does the same as <command>&no-i18n-cmd_saveas;</command>.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_saveas"><command>&no-i18n-tag;&no-i18n-cmd_saveas;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ saveas(filename) -->
	<sect2 id="cmd_sect_saveas"><title id="cmd_title_saveas">&no-i18n-cmd_saveas;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_saveas;</command>([<replaceable>filename</replaceable>])</title>
	    <para>
		Saves the currently opened file under a given file name. If no
		file name is given as parameter, a dialog will be shown to
		select the directory and to enter a file name.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>filename</parameter>:</entry>
		<entry>file name for saving (optional)</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ saveselect() -->
	<sect2 id="cmd_sect_saveselect"><title id="cmd_title_saveselect">&no-i18n-cmd_saveselect;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_saveselect;</command>()</title>
	    <para>
		This command does the same as <command>&no-i18n-cmd_save;</command>,
		but saves only the currently selected range and the activated
		tracks instead of the whole file.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_save"><command>&no-i18n-tag;&no-i18n-cmd_save;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ select_gui_type(mode) -->
	<sect2 id="cmd_sect_select_gui_type"><title id="cmd_title_select_gui_type">&no-i18n-cmd_select_gui_type;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_select_gui_type;</command>(mode)</title>
	    <para>
		Select a GUI mode, which can be either SDI, MDI or Tab mode.
		Please be aware that this changes will immediately take
		effect!
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>filename</parameter>:</entry>
		<entry>
		    name of the mode, must be either <quote>SDI</quote>,
		    <quote>MDI</quote> or <quote>TAB</quote>.
		</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ select_track:all() -->
	<sect2 id="cmd_sect_select_track_all"><title id="cmd_title_select_track_all">&no-i18n-cmd_select_track_all;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_select_track_all;</command>()</title>
	    <para>
		Mark all tracks <quote>enabled</quote>. This is the same as
		calling the command <quote><command>&no-i18n-tag;&no-i18n-cmd_select_track_on;</command>()</quote>
		for all existing tracks.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_select_track_on"><command>&no-i18n-tag;&no-i18n-cmd_select_track_on;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ select_track:invert() -->
	<sect2 id="cmd_sect_select_track_invert"><title id="cmd_title_select_track_invert">&no-i18n-cmd_select_track_invert;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_select_track_all;</command>()</title>
	    <para>
		Invert the <quote>enabled</quote> state of all tracks.
		This is the same as calling the command
		<quote><command>&no-i18n-cmd_select_track_toggle;</command>()</quote>
		for all existing tracks.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_select_track_toggle"><command>&no-i18n-tag;&no-i18n-cmd_select_track_toggle;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ select_track:none() -->
	<sect2 id="cmd_sect_select_track_none"><title id="cmd_title_select_track_none">&no-i18n-cmd_select_track_none;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_select_track_none;</command>()</title>
	    <para>
		Mark all tracks <quote>disabled</quote>. This is the same as
		calling the command <quote><command>&no-i18n-cmd_select_track_off;</command>()</quote>
		for all existing tracks.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_select_track_off"><command>&no-i18n-tag;&no-i18n-cmd_select_track_off;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ select_track:off(index) -->
	<sect2 id="cmd_sect_select_track_off"><title id="cmd_title_select_track_off">&no-i18n-cmd_select_track_off;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_select_track_off;</command>(index)</title>
	    <para>
		Disables a single track, so that it does not get affected by
		most operations.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>index</parameter>:</entry>
		<entry>index of the track, starting with zero</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ select_track:on(index) -->
	<sect2 id="cmd_sect_select_track_on"><title id="cmd_title_select_track_on">&no-i18n-cmd_select_track_on;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_select_track_on;</command>(index)</title>
	    <para>
		Enables a single track, so that it gets affected by all operations.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>index</parameter>:</entry>
		<entry>index of the track, starting with zero</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ select_track:toggle(index) -->
	<sect2 id="cmd_sect_select_track_toggle"><title id="cmd_title_select_track_toggle">&no-i18n-cmd_select_track_toggle;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_select_track_toggle;</command>(index)</title>
	    <para>
		Enables a track if it is currently disabled, or disables it if
		it is currently enabled.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>index</parameter>:</entry>
		<entry>index of the track, starting with zero</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ selectall() -->
	<sect2 id="cmd_sect_selectall"><title id="cmd_title_selectall">&no-i18n-cmd_selectall;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selectall;</command>()</title>
	    <para>
		Selects the range of the whole signal, from the first to the
		last sample.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selectnext() -->
	<sect2 id="cmd_sect_selectnext"><title id="cmd_title_selectnext">&no-i18n-cmd_selectnext;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selectnext;</command>()</title>
	    <para>
		Selects a range of samples that starts right after the current
		selection, using the same length as the current selection.
		The selection is automatically clipped to the end of the signal.
		For example: if you have selected samples 1000 ... 1019, then
		the result will be a selection from sample 1020 ... 1039.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_selectprev"><command>&no-i18n-tag;&no-i18n-cmd_selectprev;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selectnextlabels() -->
	<sect2 id="cmd_sect_selectnextlabels"><title id="cmd_title_selectnextlabels">&no-i18n-cmd_selectnextlabels;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selectnextlabels;</command>()</title>
	    <para>
		Selects a range of samples between the next two labels after the
		current selection. If nothing is selected, it selects from the
		start of the signal up to the first label. Otherwise the left
		border of the new selection will be the position of first label
		after the selection (or the last label if there are no more
		labels right from the selection), and the right border of the
		new selection will be the first label after the left border of
		the new selection (or the end of the signal if there is none).
		This command returns an error when there are no labels at all.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_selectprevlabels"><command>&no-i18n-tag;&no-i18n-cmd_selectprevlabels;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selectnone() -->
	<sect2 id="cmd_sect_selectnone"><title id="cmd_title_selectnone">&no-i18n-cmd_selectnone;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selectnone;</command>()</title>
	    <para>
		Resets the selection to zero length.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selectprev() -->
	<sect2 id="cmd_sect_selectprev"><title id="cmd_title_selectprev">&no-i18n-cmd_selectprev;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selectprev;</command>()</title>
	    <para>
		Selects a range of samples that starts left from the current
		selection, using the same length as the current selection.
		The selection is automatically clipped to the start of the signal.
		For example: if you have selected samples 1000 ... 1019, then
		the result will be a selection from sample 980 ... 999.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_selectprev"><command>&no-i18n-tag;&no-i18n-cmd_selectnext;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selectprevlabels() -->
	<sect2 id="cmd_sect_selectprevlabels"><title id="cmd_title_selectprevlabels">&no-i18n-cmd_selectprevlabels;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selectprevlabels;</command>()</title>
	    <para>
		Selects a range of samples between the previous two labels before the
		current selection. If nothing is selected, it selects from the
		start of the signal up to the first label. Otherwise the right
		border of the new selection will be the position of first label
		before the selection (or the first label if there are no more
		labels left from the selection), and the left border of the
		new selection will be the first label before the right border of
		the new selection (or the start of the signal if there is none).
		This command returns an error when there are no labels at all.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_selectnextlabels"><command>&no-i18n-tag;&no-i18n-cmd_selectnextlabels;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selecttoleft() -->
	<sect2 id="cmd_sect_selecttoleft"><title id="cmd_title_selecttoleft">&no-i18n-cmd_selecttoleft;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selecttoleft;</command>()</title>
	    <para>
		Sets the start of the selection to the start of the signal, the
		end of the current selection stays unchanged.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_selecttoright"><command>&no-i18n-tag;&no-i18n-cmd_selecttoright;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selecttoright() -->
	<sect2 id="cmd_sect_selecttoright"><title id="cmd_title_selecttoright">&no-i18n-cmd_selecttoright;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selecttoright;</command>()</title>
	    <para>
		Sets the end of the selection to the end of the signal, the
		start of the current selection stays unchanged.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_selecttoleft"><command>&no-i18n-tag;&no-i18n-cmd_selecttoleft;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ selectvisible() -->
	<sect2 id="cmd_sect_selectvisible"><title id="cmd_title_selectvisible">&no-i18n-cmd_selectvisible;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_selectvisible;</command>()</title>
	    <para>
		Selects the range of samples that is visible in the current
		window.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ start() -->
	<sect2 id="cmd_sect_start"><title id="cmd_title_start">&no-i18n-cmd_start;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_start;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Start</guibutton> toolbar
		button and lets the playback start from the beginning of the
		selection or continue if it is currently paused.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_stop"><command>&no-i18n-tag;&no-i18n-cmd_stop;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ stop() -->
	<sect2 id="cmd_sect_stop"><title id="cmd_title_stop">&no-i18n-cmd_stop;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_stop;</command>()</title>
	    <para>
		Corresponds to to the <guibutton>Stop</guibutton> toolbar
		button and lets the playback stop if it is currently running.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_start"><command>&no-i18n-tag;&no-i18n-cmd_start;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_u"><title>&no-i18n-tag;u</title>

	<!-- @COMMAND@ undo() -->
	<sect2 id="cmd_sect_undo"><title id="cmd_title_undo">&no-i18n-cmd_undo;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_undo;</command>()</title>
	    <para>
		Corresponds to the <guibutton>Undo</guibutton> toolbar
		button and reverts the last operation.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_redo"><command>&no-i18n-tag;&no-i18n-cmd_redo;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ undo_all() -->
	<sect2 id="cmd_sect_undo_all"><title id="cmd_title_undo_all">&no-i18n-cmd_undo_all;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_undo_all;</command>()</title>
	    <para>
		Similar to <command>&no-i18n-tag;&no-i18n-cmd_undo;</command>, but reverts
		as many operations as possible.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_undo"><command>&no-i18n-tag;&no-i18n-cmd_undo;</command>()</link>
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_v"><title>&no-i18n-tag;v</title>

	<!-- @COMMAND@ view:scroll_end() -->
	<sect2 id="cmd_sect_view_scroll_end"><title id="cmd_title_view_scroll_end">&no-i18n-cmd_view_scroll_end;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_end;</command>()</title>
	    <para>Scrolls the current view to the <emphasis>end</emphasis> of the signal.</para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_start"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_start;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:scroll_left() -->
	<sect2 id="cmd_sect_view_scroll_left"><title id="cmd_title_view_scroll_left">&no-i18n-cmd_view_scroll_left;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_left;</command>()</title>
	    <para>
		Scrolls the current view by 1/10 of the currently visible range towards
		the start of the signal. If the start of the signal is reached the visible
		area starts at offset zero.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_right"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_right;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:scroll_next() -->
	<sect2 id="cmd_sect_view_scroll_next"><title id="cmd_title_view_scroll_next">&no-i18n-cmd_view_scroll_next;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_next;</command>()</title>
	    <para>
		Scrolls the current view towards the end of the signal by
		the currently visible range.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_prev"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_prev;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:scroll_next_label() -->
	<sect2 id="cmd_sect_view_scroll_next_label"><title id="cmd_title_view_scroll_next_label">&no-i18n-cmd_view_scroll_next_label;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_next_label;</command>()</title>
	    <para>
		Scrolls right and tries to show the next label centered in the
		view. If there was no label right from the current position,
		it will scroll to the end of the signal.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_prev_label"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_prev_label;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:scroll_prev() -->
	<sect2 id="cmd_sect_view_scroll_prev"><title id="cmd_title_view_scroll_prev">&no-i18n-cmd_view_scroll_prev;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_prev;</command>()</title>
	    <para>
		Scrolls the current view towards the start of the signal by
		the currently visible range.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_next"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_next;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:scroll_prev_label() -->
	<sect2 id="cmd_sect_view_scroll_prev_label"><title id="cmd_title_view_scroll_prev_label">&no-i18n-cmd_view_scroll_prev_label;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_prev_label;</command>()</title>
	    <para>
		Scrolls left and tries to show the previous label centered in the
		view. If there was no label left from the current position,
		it will scroll to the start of the signal.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_next_label"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_next_label;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:scroll_right() -->
	<sect2 id="cmd_sect_view_scroll_right"><title id="cmd_title_view_scroll_right">&no-i18n-cmd_view_scroll_right;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_right;</command>()</title>
	    <para>
		Scrolls the current view by 1/10 of the currently visible range towards
		the end of the signal. If the end of the signal is reached the visible
		area ends at the end of the signal.
	    </para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_left"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_left;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:scroll_start() -->
	<sect2 id="cmd_sect_view_scroll_start"><title id="cmd_title_view_scroll_start">&no-i18n-cmd_view_scroll_start;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_scroll_start;</command>()</title>
	    <para>Scrolls the current view to the start of the signal.</para>
	</simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_scroll_end"><command>&no-i18n-tag;&no-i18n-cmd_view_scroll_end;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:zoom_all() -->
	<sect2 id="cmd_sect_view_zoom_all"><title id="cmd_title_view_zoom_all">&no-i18n-cmd_view_zoom_all;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_zoom_all;</command>()</title>
	    <para>
		Adjusts the zoom factor so that the complete signal is visible
		in the current view.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:zoom_in([position]) -->
	<sect2 id="cmd_sect_view_zoom_in"><title id="cmd_title_view_zoom_in">&no-i18n-cmd_view_zoom_in;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_view_zoom_in;</command>([<replaceable>position</replaceable>])</title>
	    <para>
		Reduces the zoom factor (in samples per pixel) by 30%, so that
		more details get visible.
		If a <replaceable>position</replaceable> is
		given, it tries to show that position centered in the current
		view, otherwise the center of the view before the zoom change
		is used for centering.
		The minimum zoom factor is limited to a minimum of five samples
		per width of the view.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>position</parameter>:</entry>
		<entry>a zero based position is samples to center the view (optional)</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_zoom_out"><command>&no-i18n-tag;&no-i18n-cmd_view_zoom_out;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:zoom_normal() -->
	<sect2 id="cmd_sect_view_zoom_normal"><title id="cmd_title_view_zoom_normal">&no-i18n-cmd_view_zoom_normal;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_zoom_normal;</command>()</title>
	    <para>
		Sets the zoom factor to one pixel per sample (factor 1.0) and
		tries to keep the previous center of the view.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:zoom_out([position]) -->
	<sect2 id="cmd_sect_view_zoom_out"><title id="cmd_title_view_zoom_out">&no-i18n-cmd_view_zoom_out;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_view_zoom_out;([<replaceable>position</replaceable>])</command></title>
	    <para>
		Increases the zoom factor (in samples per pixel) by 30%, so that
		less details get visible.
		If a <replaceable>position</replaceable> is
		given, it tries to show that position centered in the current
		view, otherwise the center of the view before the zoom change
		is used for centering.
		The maximum zoom factor is limited to the number of samples of
		the complete signal and the width of the view.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>position</parameter>:</entry>
		<entry>a zero based position is samples to center the view (optional)</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	<simplesect><title>See also</title>
	    <para>
		<link linkend="cmd_sect_view_zoom_in"><command>&no-i18n-tag;&no-i18n-cmd_view_zoom_in;</command>()</link>
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ view:zoom_selection() -->
	<sect2 id="cmd_sect_view_zoom_selection"><title id="cmd_title_view_zoom_selection">&no-i18n-cmd_view_zoom_selection;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_view_zoom_selection;</command>()</title>
	    <para>
		Adjusts the view (zoom factor and start of visible area) so
		that it matches the current selection. This command does
		nothing if the selection is empty.
	    </para>
	</simplesect>
	</sect2>
    </sect1>

    <sect1 id="commands_w"><title>&no-i18n-tag;w</title>

	<!-- @COMMAND@ window:activate(title) -->
	<sect2 id="cmd_sect_window_activate"><title id="cmd_title_window_activate">&no-i18n-cmd_window_activate;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-cmd_window_activate;</command>(<replaceable>title</replaceable>])</title>
	    <para>
		Activates a sub window, identified by it's window <replaceable>title</replaceable>.
		If the sub window is minimized it will be restored.
		Only available if in MDI and tab mode.
		This command is internally used by the <quote><guisubmenu>Window</guisubmenu></quote> menu.
	    </para>
	</simplesect>
	<simplesect><title>Parameters</title><informaltable frame='none'><tgroup cols='2'><tbody>
	    <row><entry><parameter>title</parameter>:</entry>
		<entry>the title of the sub window that should be activated</entry></row>
	</tbody></tgroup></informaltable></simplesect>
	</sect2>

	<!-- @COMMAND@ window:cascade() -->
	<sect2 id="cmd_sect_window_cascade"><title id="cmd_title_window_cascade">&no-i18n-cmd_window_cascade;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_window_cascade;</command>()</title>
	    <para>
		Cascades all sub windows when in MDI mode. All sub windows that are currently
		minimized stay minimized, they will not be restored.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ window:next_sub() -->
	<sect2 id="cmd_sect_window_next_sub"><title id="cmd_title_window_next_sub">&no-i18n-cmd_window_next_sub;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_window_next_sub;</command>()</title>
	    <para>
		Activates the <emphasis>next</emphasis> sub window when in MDI or tab mode. If the next
		sub window is minimized it will be restored.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ window:prev_sub() -->
	<sect2 id="cmd_sect_window_prev_sub"><title id="cmd_title_window_prev_sub">&no-i18n-cmd_window_prev_sub;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_window_prev_sub;</command>()</title>
	    <para>
		Activates the <emphasis>previous</emphasis> sub window when in MDI or tab mode. If the previous
		sub window is minimized it will be restored.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ window:tile() -->
	<sect2 id="cmd_sect_window_tile"><title id="cmd_title_window_tile">&no-i18n-cmd_window_tile;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_window_tile;</command>()</title>
	    <para>
		Tiles all sub windows when in MDI mode, using some scheme of
		KDE. All sub windows that are currently minimized stay minimized,
		they will not be restored.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND@ window:tile_vertical() -->
	<sect2 id="cmd_sect_window_tile_vertical"><title id="cmd_title_window_tile_vertical">&no-i18n-cmd_window_tile_vertical;</title>
	<simplesect>
	    <title>&i18n-cmd_syntax;<command>&no-i18n-tag;&no-i18n-cmd_window_tile_vertical;</command>()</title>
	    <para>
		Tiles all sub windows vertically when in MDI mode. All windows
		that are currently minimized stay minimized, they will not be
		restored.
	    </para>
	</simplesect>
	</sect2>

	<!-- @COMMAND_END_OF_LIST@ -->
    </sect1>

</chapter>

<!-- ###################################################################### -->
<!-- ### Chapter: Developer's Guide to Kwave                            ### -->
<!-- ###################################################################### -->

<chapter id="plugins"><title>Plugins</title>
    <para>
	TODO: description of all plugins ...
	<!--
	about
	amplifyfree
	band_pass
	codec_ascii
	codec_audiofile
	codec_flac
	codec_mp3
	codec_ogg
	codec_wav
	debug
	fileinfo
	goto
	lowpass
	memory
	newsignal
	noise
	normalize
	notch_filter
	pitch_shift
	playback
	record
	reverse
	samplerate
	saveblocks
	selectrange
	sonagram
	volume
	zero
	-->
    </para>
</chapter>

<!-- ###################################################################### -->
<!-- ### Chapter: Developer's Guide to Kwave                            ### -->
<!-- ###################################################################### -->

<chapter id="developers"><title>Developer's Guide to &kwave;</title>

    <para>
	<inlinemediaobject>
	<imageobject>
	    <imagedata fileref="under-construction.png" format="PNG"/>
	</imageobject>
	<textobject> <phrase>under construction</phrase> </textobject>
	</inlinemediaobject>
     </para>
    <para>
	Sorry, this chapter is still to be written... At the moment the
	source code is nearly completely documented with tags suitable with
	the KDE documentation tools. We currently prefer using
	<ulink url="&url_doxygen;">doxygen</ulink>. Maybe some day we will spend some time for
	writing a tool that converts the doxygen output into something
	we can include into the docbook source (the source this page has
	been built of).
    </para>
    <para>
        If you want to write a plugin, contribute something to this
        project (or maybe write the converter mentioned above), please
	feel free to contact one of the authors directly
	and / or subscribe to
	the &kwave; <link linkend="mailing-list">mailing list</link>.
	Help is always welcome!
    </para>

    <!-- @@@ most of this has still to be done ... @@@ -->

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Creating API documentation                            +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="make_apidoc"><title>Creating API documentation</title>

    <para>
	If you are interested in the internal of &kwave; and you have
	<ulink url="&url_doxygen;">doxygen</ulink> installed, then you
	can type:
<screen width="50" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>make apidoc</command>
</screen>
    </para>
    <para>
	to get a directory
	<filename><replaceable>apicod/html</replaceable></filename>,
	with documentation of the source and the internal API in your
	current build directory.
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Starting in a test environment                        +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="create_wrapper"><title>Starting in a test environment</title>

    <para>
	If you are developing or testing  &kwave;, then you do not necessarily
	need to uninstall/install &kwave; after every build. Instead you can
	use the application from where it is built by using a wrapper script.
	This wrapper script can be built with the follwing command:
<screen width="50" format="linespecific">
&no-i18n-tag;<prompt>% </prompt><command>make wrapper</command>
</screen>
    </para>
    <para>
	The script will be named <filename><replaceable>kw</replaceable></filename>,
	feel free to modify it to match your system if needed.
    </para>
    <warning><para>
	For this to work, you must <emphasis>not</emphasis> have &kwave;
	installed on your system. If so, please uninstall the package
	before!
    </para></warning>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Adding a new language                                 +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <sect1 id="add_new_language"><title>Adding support for a new Language</title>

    <para>
	<orderedlist>
	    <listitem><para>
		<emphasis>make system:</emphasis>
		</para><para>
		Edit the toplevel <filename>CMakeLists.txt</filename> and add
		a new entry to the list of languages. Look for the variable
		<literal><symbol>KWAVE_LINGUAS</symbol></literal> and add
		a line for the new language. Each entry consists of a pair with
		a language <emphasis>code</emphasis> and language
		<emphasis>name</emphasis>, like this:
<command><replaceable>&lt;code&gt;</replaceable><literal>:</literal><replaceable>&lt;name&gt;</replaceable></command>.
		Example:
<screen>
	<parameter>fr</parameter><literal>:</literal><parameter>Francais</parameter>
</screen>

	    </para><para>
		The language code is a 2-letter code which is used for
		directories and filenames, as it is also used in KDE.
		The language name is used internally for the
		docbook online documentation and the online help only.
		For a list of available language codes and names, please
		refer to the documentation of the international standard
		<ulink url="&url_iso639;">ISO 639.2</ulink>.
	    </para></listitem>

	    <listitem><para>
		<emphasis>user interface:</emphasis>
		</para><para>
		Go to the source directory of &kwave; (not the build directory),
		change into the subdirectory <filename>po</filename> and copy the
		file <filename>kwave.pot</filename> to the corresponding <filename>.po</filename> file of
		the language you want to add: <filename>"<replaceable>&lt;code&gt;</replaceable>.po"</filename>.
		After that you can translate the file using your favorite tool, like
		<filename>Lokalize</filename>.
		Example:
<screen>
&no-i18n-tag;<prompt>% </prompt><command>cd <parameter><replaceable>$HOME/src/kwave</replaceable></parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>cd <parameter>po</parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>cp <parameter>kwave.pot</parameter> <parameter><replaceable>fr.po</replaceable></parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>lokalize <parameter>fr.po</parameter></command>
</screen>
	    </para></listitem>

	    <listitem><para>
		<emphasis>online help:</emphasis>
		</para><para>
		This is similar to the procedure for the user interface, but requires
		some extra steps because the master file is in <literal>docbook</literal>
		format and the <filename>.pot</filename> template is a generated
		file.
		Go to the source directory of &kwave; (not the build directory),
		change into the subdirectory <filename>doc</filename> and create
		an empty <filename>.po</filename> file:
<screen>
&no-i18n-tag;<prompt>% </prompt><command>cd <parameter><replaceable>$HOME/src/kwave</replaceable></parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>cd <parameter>doc</parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>touch <parameter><replaceable>help_fr.po</replaceable></parameter></command>
</screen>
		Then change to your build directory (e.g. somewhere in <filename>/tmp</filename>),
		prepare for building and then generate the <filename>.pot</filename> template (you
		can safely ignore the error messages that come out at this stage).
		This template has to be copied to the <filename>.po</filename> file in the source
		directory of the online help.
		Example:
<screen>
&no-i18n-tag;<prompt>% </prompt><command>mkdir <parameter>/tmp/kwave-build</parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>cd <parameter>/tmp/kwave-build</parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>cmake <parameter><replaceable>$HOME/src/kwave</replaceable></parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>make doc</command>
&no-i18n-tag;<prompt>% </prompt><command>cp <parameter>doc/help_en.pot</parameter> <parameter><replaceable>$HOME/src/kwave/doc/help_fr.po</replaceable></parameter></command>
</screen>
	    Now you can translate the <filename>.po</filename> file, like above:
<screen>
&no-i18n-tag;<prompt>% </prompt><command>cd <parameter><replaceable>$HOME/src/kwave</replaceable></parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>cd <parameter>doc</parameter></command>
&no-i18n-tag;<prompt>% </prompt><command>lokalize <parameter><replaceable>help_fr.po</replaceable></parameter></command>
</screen>
	    </para></listitem>

	    <listitem><para>
		<emphasis>screenshots:</emphasis>
		</para><para>
		For the online documentation you also need screenshots that use the
		translated messages. This requires a built and installed &kwave; package,
		so you should follow the steps mentioned in the section about
		<link linkend="manual_compilation">Manual Compilation and installation</link>.
		Of course you <emphasis>must not</emphasis> pass the build
		option <literal>WITH_DOC=no</literal> or any other build option that
		removes functionality, otherwise you would not be able to get
		screenshots of components that you have disabled.
		</para><para>
		For a list of screenshots you can look into one of the existing directories
		in the source tree, for example in <filename>$HOME/doc/de</filename>.
		All screenshots are in <emphasis><filename>.png</filename></emphasis> and
		should follow the
		<ulink url="&url_kde_screenshots;">KDE
		Documentation Screenshots Requirements</ulink>.
		Here in short:
		<itemizedlist>
		    <listitem><para>
			Window decoration: Oxygen
		    </para></listitem>
		    <listitem><para>
			Widget style: Oxygen
		    </para></listitem>
		    <listitem><para>
			Colors: Oxygen
		    </para></listitem>
		    <listitem><para>
			Background: Flat color - Color must be white
		    </para></listitem>
		    <listitem><para>
			Run X11 in 72dpi mode
		    </para></listitem>
		    <listitem><para>
			Save the files in 8bpp
		    </para></listitem>
		    <listitem><para>
			Try to keep the size of each file below 20kB
		    </para></listitem>
		</itemizedlist>
	    </para></listitem>
	    <listitem><para>
		<emphasis>desktop file:</emphasis>
		</para><para>
		Add a <emphasis>Comment</emphasis> line for the new language
		to the file <filename>kwave/kwave.desktop.in</filename>.
		Please note that this file is UTF-8 encoded!
		Example:
<screen>
	<literal>Comment[</literal><replaceable>fr</replaceable><literal>]=</literal><replaceable>Un éditeur de sons pour KDE</replaceable>
</screen>
	    </para></listitem>
	</orderedlist>
    </para>

    <para>
	Useful links:
	<itemizedlist>
	    <listitem><para>
		<ulink url="&url_rfc3066;">RFC 3066</ulink>
		Tags for the Identification of Languages
	    </para></listitem>
	    <listitem><para>
		<ulink url="&url_kde_l10n;">KDE Localization</ulink> contains
		a lot of useful links for KDE translators.
	    </para></listitem>
	    <listitem><para>
		<ulink url="&url_kde_localize;">Lokalize</ulink> is
		<emphasis>the</emphasis> standard tool that helps you
		translating <filename>.po</filename> files.
	    </para></listitem>
	    <listitem><para>
		<ulink url="&url_kde_screenshots;">KDE
		Documentation Screenshots Requirements</ulink>.
	    </para></listitem>
	</itemizedlist>
    </para>

    </sect1>

<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
<!-- +++ Section: Adding a new plugin                                   +++ -->
<!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

<!--
    <sect1 id="add_new_plugin"><title>Adding a new Plugin</title>

    <para>
	to be written...
    </para>

    </sect1>
-->

</chapter>

<!-- ###################################################################### -->
<!-- ### Chapter: Questions and Answers                                 ### -->
<!-- ###################################################################### -->

<chapter id="faq"><title>Questions and Answers</title>

    <para></para>

    <qandaset>

    	<qandaentry>
	    <question>
	    	<para>
		    What do I need to compile &kwave;?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    Read in the
		    <link linkend="requirements">chapter</link>
		    mentioned before.
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    Which sound cards does &kwave; support?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    &kwave; does not need support for any special sound card.
		    The sound card only has to be supported by your
		    operating system and &kwave; uses it's interface to the
		    operating system's sound driver through a OSS or ALSA
		    interface. So &kwave; can play on any sound card that
		    KDE is able to play on.
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    Why does &kwave; consume more memory than it can be
		    expected from the size of the opened file?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    The reason for this is that &kwave; internally stores
		    all samples in 32-bit integers. This was easy to program,
		    made the application faster and a bit more reliable.
		    So if you load an 8-bit file with about one megabyte
		    it will consume about four megabytes.
		    Maybe we will change this somewhere in the future...
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    Which sound formats does &kwave; support?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    &kwave; currently supports .wav files with 8, 16 and
		    24 bits per sample, with any number of channels
		    (of course including mono and stereo). Additionally it
		    can import all file types that libaudiofile supports
		    and some other formats like Ogg/Vorbis and MP3.
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    What if I have files with a format not
		    supported by &kwave;?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    If you have to work on a different format, you can convert
		    it into .wav format. A good set of tools for this is
		    in the
	            <ulink url="&url_sox;">SoX</ulink> package, they have also some nice
		    documentation!
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    I get errors when I want to do playback?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    Maybe you have chosen a combination of playback
		    rate and sample size that is not supported by your
		    sound driver and / or sound hardware. Try playback with
		    8 bits per sample and mono first, this should always
		    work. Then try to increase the bits per sample and
		    stereo playback step by step. Note that some playback
		    rates are not at all supported by some sound hardware.
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    The playback seems to do something but I hear nothing?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    Maybe you have forgotten to increase the volume of
		    the playback channel. &kwave; is not responsible for
		    changing the playback volume.
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    Some files are played with half-speed?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    Try choosing a different sound playback device.
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    The playback sometimes is disturbed and interrupted?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    You should increase the size of the playback buffer
		    to get a "smoother" playback (this also makes the
		    playback control reacting a bit slower).
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    The playback does not stop if I immediately
		    press the stop button?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    The reason for this is that the sound driver already
		    has received some playback data from &kwave; at the
		    moment when you press the stop button. Decrease the
		    size of the playback buffer and it should react faster
		    (but makes interruptions more probable).
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    Is ALSA supported?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    Yes, since v0.7.4 for playback and recording
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    What about playback with 18, 20, 24 or 32 bits per sample
		    or more than two channels?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    This is possible through the ALSA interface,
		    since v0.7.4.
		</para>
	    </answer>
	</qandaentry>

    	<qandaentry>
	    <question>
	    	<para>
		    What about MP3 support?
		</para>
	    </question>
    	    <answer>
	    	<para>
		    Well, as long as there are patent issues, we support only MP3
		    import through the mad library and export via the external
		    program <ulink url="&url_lame;">lame</ulink>.
		    Additionally you need to have the permission to use code
		    covered by the MP3 patents when generating a Kwave package
		    for distributing!
		</para>
	    </answer>
	</qandaentry>

<!--
    	<qandaentry>
	    <question>
	    	<para>
		    ...
		</para>
	    </question>
    	    <answer>
	    	<para>
		    ...
		</para>
	    </answer>
	</qandaentry>
-->


    </qandaset>
</chapter>

<!-- ###################################################################### -->
<!-- ### Chapter: Credits                                               ### -->
<!-- ###################################################################### -->

<chapter id="credits"><title>Credits and License</title>

    <para>&kwave;</para>

    <para>
    	Program copyright from 1998-2000 Martin Wilz
	<email>martin@wilz.de</email>
    </para>
    <para>
    	Program copyright since 2000 Thomas Eschenbacher
	<email>thomas.eschenbacher@gmx.de</email>
    </para>
    <para>
	For a complete list of authors and licenses of all files, please
	refer to the <ulink url="&url_licenses;"><filename>LICENSES</filename></ulink>
	file, which is included in the sources. There also is a file with the
	name <ulink url="&url_authors;"><filename>AUTHORS</filename></ulink>
	that lists all authors and contributors of &kwave;.
    </para>

    <para>
	Documentation copyright (C) &version_year; Thomas Eschenbacher
	<email>thomas.eschenbacher@gmx.de</email>
    </para>

&underFDL;
&underGPL;

    <sect1 id="main_authors"><title>Main Authors</title>
    <para>
    	<itemizedlist>
	    <listitem>
	    	<para><emphasis role="bold">
		    Martin Wilz
		    <email>martin@wilz.de</email>
		</emphasis></para><para>
		    creator of the project, active development 1998-2000
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Thomas Eschenbacher
		    <email>thomas.eschenbacher@gmx.de</email>
		</emphasis></para><para>
		    maintainer since 2000, core development
		</para>
	    </listitem>
	</itemizedlist>
    </para>
    </sect1>

    <sect1 id="major_contributors"><title>Major Contributors</title>
    <para>
	<itemizedlist>
	    <listitem>
	    	<para><emphasis role="bold">
		    Aurelien Jarno
		    <email>aurel32@debian.org</email>
		</emphasis></para><para>
		    <ulink url="&url_debian;">debian</ulink> packager,
		    patches
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Carlos R
		    <email>pureacetone@gmail.com</email>
		</emphasis></para><para>
		    spanish translation
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    David Flogeras
		    <email>dflogera@nbnet.nb.ca</email>
		</emphasis></para><para>
		    Notch Filter plugin
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Gilles Caulier
		    <email>caulier.gilles@free.fr</email>
		</emphasis></para><para>
		    i18n, french translations, splashscreen, beta tester
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Pavel Fric
		    <email>pavelfric@seznam.cz</email>
		</emphasis></para><para>
		    Czech translation
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Ralf Waspe
		    <email>rwaspe@web.de</email>
		</emphasis></para><para>
		    Help/About plugin
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Sven-Steffen Arndt
		    <email>ssa29@gmx.de</email>
		</emphasis></para><para>
		    homepage, german translation
		</para>
	    </listitem>
	</itemizedlist>
    </para>
    </sect1>

    <sect1 id="minor_contributors"><title>Minor contributors, copyright holders and others</title>
    <para>
    	<itemizedlist>
	    <listitem>
	    	<para><emphasis role="bold">
		    Aaron Holtzman <email>aholtzma@ess.engr.uvic.ca</email>
		</emphasis></para><para>
		    libkwave/cpu_accel.cpp
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Bertrand Songis <email>bsongis@gmail.com</email>
		</emphasis><emphasis>[historic]</emphasis></para><para>
		    french translation fixes,
		    substitutes for patented libaudiofile code,
		    debian bug 419124
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Carsten Lohrke <email>carlo@gentoo.org</email>
		</emphasis></para><para>
		    svn r2163, patch for libaudiofile detection
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Chris Vaill <email>chrisvaill@gmail</email>
		</emphasis></para><para>
		    code base for the normalize plugin
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    David Faure <email>faure@kde.org</email>
		</emphasis></para><para>
		    cmake/FindAlsa.cmake
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Diederick de Vries
		    <email>diederick76@gmail.com</email>
		</emphasis></para><para>
		    packaging for Crux Linux
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Espen Sand <email>espen@kde.org</email> +
		    Mirko Boehm <email>mirko@kde.org</email>
		</emphasis></para><para>
		    K3AboutContainer, base of KwaveAboutContainer
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Everaldo Coelho <email>contact@everaldo.com</email>
		</emphasis></para><para>
		    the crystal icon theme http://www.everaldo.com/crystal/
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Jaroslav Kysela
		</emphasis></para><para>
		    parts of plugins/playback/PlayBack-ALSA.cpp
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Jeff Tranter
		</emphasis></para><para>
		    parts of plugins/pitch_shift/PitchShiftFilter.{h,cpp}
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Juhana Sadeharju <email>kouhia@nic.funet.fi</email>
		</emphasis></para><para>
		    plugins/band_pass/BandPass.{h,cpp},
		    plugins/lowpass/LowPassFilter.cpp,
		    plugins/notch_filter/NotchFilter.{h,cpp}
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Kurt Roeck <email>Q@ping.be</email>
		</emphasis></para><para>
		    svn r1370, fix for debian bug#288781, compilation for amd64
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Mark Donohoe (KDE) <email>donohoe@kde.org</email>
		</emphasis></para><para>
		    some icons and bitmaps for toolbar and GUI
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Martin Hinsch <email>vidas@sourceforge.net</email>
		</emphasis></para><para>
		    Matrix class
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Matthias Kretz <email>kretz@kde.org</email>
		</emphasis></para><para>
		    cmake/FindAlsa.cmake
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Miguel Freitas
		</emphasis></para><para>
		    parts of libkwave/memcpy.c
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Paul Mackerras <email>paulus@samba.org</email>
		</emphasis></para><para>
		    libkwave/ppcasm_string.h,
		    libkwave/ppcasm_string.S,
		    libkwave/ppc_asm.tmpl
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Richard Laerkaeng, <email>richard@goteborg.utfors.se</email>
		</emphasis></para><para>
		    cmake/FindOggVorbis.cmake
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Rik Hemsley
		    <email>rik@kde.org</email>
		</emphasis></para><para>
		    <ulink url="&url_levelmeter;">level meter</ulink>
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Stefan Westerfeld <email>stefan@space.twc.de</email>
		</emphasis></para><para>
		    parts of plugins/pitch_shift/PitchShiftFilter.{h,cpp}
		</para>
	    </listitem>
	    <listitem>
		<para><emphasis role="bold">
			Joerg-Christian Boehme <email>joerg@chaosdorf.de</email>
		</emphasis></para><para>
			plugins/record/Record-PulseAudio.cpp
			plugins/record/Record-PulseAudio.h
		</para>
	    </listitem>
	</itemizedlist>
    </para>
    </sect1>

    <sect1 id="thanks_to"><title>Thanks To</title>
    <para>
    	<itemizedlist>
	    <listitem>
	    	<para><emphasis role="bold">
		    Martin Kuball
		    <email>makube@user.sourceforge.net</email>
		</emphasis></para><para>
		    beta tester
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Jorge Luis Arzola
		    <email>arzolacub@gmx.de</email>
		</emphasis></para><para>
		    packaging for SuSE Linux
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Michael Favreau
		    <email>michel.favreau@free.fr</email>
		</emphasis></para><para>
		    packaging for Arch Linux
		</para>
	    </listitem>

	    <listitem>
	    	<para><emphasis role="bold">
		    Matthias Düsterhöft
		    <email>duesti@gmx.de</email>
		</emphasis></para><para>
		    for information about RPM optimization
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    T.H.F. Klok and Cedric Tefft
		</emphasis></para><para>
		    maintainers of the <ulink url="&url_id3lib;">
		    id3lib</ulink> library
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Robert Leslie
		    <email>rob@mars.org</email>
		</emphasis></para><para>
		    author of the
		     <ulink url="&url_libmad;">mad</ulink>
		     mp3 decoder library
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Robert M. Stockmann
		    <email>stock@stokkie.net</email>
		</emphasis></para><para>
		    packaging for Mandrake / X86_64
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Erik de Castro Lopo
		    <email>erikd@zip.com.au</email>
		</emphasis></para><para>
		    author of the
		    <ulink url="&url_libsndfile;">sndfile</ulink>
		    library
		</para>
	    </listitem>
	    <listitem>
	    	<para><emphasis role="bold">
		    Michael Pruett
		    <email>mpruett@sgi.com</email>
		</emphasis></para><para>
		    author of the
		    <ulink url="&url_libaudiofile;">audiofile</ulink>
		    library
		</para>
	    </listitem>
	</itemizedlist>
    </para>
    </sect1>

<!--
    historical entries:
    <listitem><para>Juhana Kouhia</para></listitem>
    <listitem><para>Gerhard Zintel</para></listitem>
    <listitem><para>Gael Duval</para></listitem>
    <listitem><para>Aaron Johnson</para></listitem>
    <listitem><para>Uwe Steinmann</para></listitem>
    <listitem><para>Juhana Kouhia</para></listitem>
    <listitem><para>Dave Phillips</para></listitem>
    <listitem><para>Martin Petriska</para></listitem>
    <listitem><para>Winfried Truemper</para></listitem>
    <listitem><para>Bruce Garlock</para></listitem>
    <listitem><para>Christoph Raab</para></listitem>
    <listitem><para>tOpHEr lAfaTA</para></listitem>
    <listitem><para>Nemosoft</para></listitem>
    <listitem><para>Guido</para></listitem>
    <listitem><para>Eero</para></listitem>
    <listitem><para>Carsten Jacobi</para></listitem>
    <listitem><para>Frank Christian Stoffel</para></listitem>
    <listitem><para>Achim Dahlhaus</para></listitem>
    <listitem><para>Klaus Hendrik Lorenz</para></listitem>
-->

</chapter>

<appendix><title>File Info</title>
    <table frame='all'><title>List of File Info Identifiers</title>
    <tgroup cols='3' align='center' colsep='1' rowsep='1'>
    <colspec colname='c1'/>           <colspec/>
    <colspec colname='c2' colnum='3'/><colspec/>
    <thead>
	<row><entry>Keyword</entry><entry>&#x0020;</entry><entry>Description</entry></row>
    </thead>
    <tbody>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Album</entry>
	    <entry colname='c2'>
		Name of the album if the source is an album
		that consist of more medias.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Annotation</entry>
	    <entry colname='c2'>
		Provides general comments about the file or the subject of
		the file. If the comment is several sentences long, end
		each sentence with a period. Do not include newline
		characters!
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Archival location</entry>
	    <entry colname='c2'>
		Indicates where the subject of the file is archived.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Author</entry>
	    <entry colname='c2'>
		Identifies the name of the author of the original
		subject of the file.
		Example: 'van Beethoven, Ludwig'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Lower Bitrate</entry>
	    <entry colname='c2'>
		Specifies the lower limit in a VBR bitstream.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Bitrate Mode</entry>
	    <entry colname='c2'>
		Bitrate Mode (ABR, VBR, CBR, etc...)
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Bitrate</entry>
	    <entry colname='c2'>
		Nominal bitrate of the audio stream in bits per second
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Upper Bitrate</entry>
	    <entry colname='c2'>
		Specifies the upper limit in a VBR bitstream.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Bits per Sample</entry>
	    <entry colname='c2'>
		Specifies the number of bits per sample.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;CD</entry>
	    <entry colname='c2'>
		Number of the CD, if the source is an album of more CDROMs
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;CDS</entry>
	    <entry colname='c2'>
		Number of CDs, if the source is an album of more CDROMs
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Channels</entry>
	    <entry colname='c2'>
		Specifies the number of channels of the signal.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Commisioned</entry>
	    <entry colname='c2'>
		Lists the name of the person or organization
		that commissioned the subject of the file.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Comments</entry>
	    <entry colname='c2'>
		Provides general comments about the file or the subject of
		the file. If the comment is several sentences long, end
		each sentence with a period. Do not include newline
		characters!
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Compression</entry>
	    <entry colname='c2'>
		Sets a mode for compressing the audio
		data to reduce disk space.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Contact</entry>
	    <entry colname='c2'>
		Contact information for the creators or distributors of
		the track. This could be a URL, an email address, the
		physical address of the producing label.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Copyright</entry>
	    <entry colname='c2'>
		Records the copyright information for the file. If there are
		multiple copyrights, separate them by a semicolon followed
		by a space.
		Example: 'Copyright Linux community 2002'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Copyrighted</entry>
	    <entry colname='c2'>
		Indicates whether the file is protected by copyright or not.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Date</entry>
	    <entry colname='c2'>
		Specifies the date the subject of the file was created.
		Example: '2001-12-24'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Engineer</entry>
	    <entry colname='c2'>
		Shows the name of the engineer who worked on the file.
		If there are multiple engineers, separate the names by
		a semicolon and a blank.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Estimated Length</entry>
	    <entry colname='c2'>
		Estimated length of the file in samples
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Filename</entry>
	    <entry colname='c2'>
		Name of the opened file
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;File Size</entry>
	    <entry colname='c2'>
		Size of the file in bytes
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Genre</entry>
	    <entry colname='c2'>
		Describes the genre or style of the original work.
		Examples: 'classic', 'pop'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;ISRC</entry>
	    <entry colname='c2'>
		ISRC number for the track; see the ISRC intro page
		for more information on ISRC numbers.
		http://www.ifpi.org/site-content/online/isrc_intro.html
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Keywords</entry>
	    <entry colname='c2'>
		Provides a list of keywords that refer to the
		file or subject of the file.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Labels</entry>
	    <entry colname='c2'>
		The list of labels.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Length</entry>
	    <entry colname='c2'>
		Length of the file in samples.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;License</entry>
	    <entry colname='c2'>
		License information, e.g., 'All Rights Reserved',
		'Any Use Permitted', an URL to a license or the
		EFF Open Audio License ('distributed under the
		terms of the Open Audio License.
		See http://www.eff.org/IP/Open_licenses/eff_oal.html
		for details')), etc.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Medium</entry>
	    <entry colname='c2'>
		Describes the original subject of the file,
		where it was first recorded.
		Example: 'orchester'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Mime Type</entry>
	    <entry colname='c2'>
		Mime type of the file format
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Emphasis</entry>
	    <entry colname='c2'>
		Audio emphasis mode
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Layer</entry>
	    <entry colname='c2'>
		MPEG Layer, I, II or III
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Mode Extension</entry>
	    <entry colname='c2'>
		MPEG Mode Extension (only if Joint Stereo)
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Version</entry>
	    <entry colname='c2'>
		MPEG Version, 1, 2 or 2.5
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Name</entry>
	    <entry colname='c2'>
		Stores the title of the subject of the file.
		Example: "Symphony No.6, Op.68 'Pastoral'"
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Opus Frame Length</entry>
	    <entry colname='c2'>
		Opus Frame Length in ms (supported values are 2.5, 5, 10, 20, 40, or 60 ms)
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Organization</entry>
	    <entry colname='c2'>
		Name of the organization producing the track
		(i.e. the 'record label')
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Original</entry>
	    <entry colname='c2'>
		Indicates whether the file is an original or a copy
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Performer</entry>
	    <entry colname='c2'>
		The artist(s) who performed the work. In classical
		music this would be the conductor, orchestra, soloists.
		In an audio book it would be the actor who did the reading.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Private</entry>
	    <entry colname='c2'>
		Indicates whether the subject is private
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Product</entry>
	    <entry colname='c2'>
		Specifies the name or the title the
		file was originally intended for.
		Example: 'Linux audio collection'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Sample Format</entry>
	    <entry colname='c2'>
		Format used for storing the digitized audio samples.
		Example: '32-bit IEEE floating-point'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Sample Rate</entry>
	    <entry colname='c2'>
		Number of samples per second

	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Software</entry>
	    <entry colname='c2'>
		Identifies the name of the software package
		used to create the file.
		Example: 'Kwave v0.6.4-1'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Source</entry>
	    <entry colname='c2'>
		Identifies the name of the person or organization
		who supplied the original subject of the file.
		Example: 'Chaotic Sound Research'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Source form</entry>
	    <entry colname='c2'>
		Identifies the original form of
		the material that was digitized.
		Examples: 'Record/Vinyl/90RPM', 'Audio DAT', 'tape/CrO2/60min'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Subject</entry>
	    <entry colname='c2'>
		Describes the subject of the file.
		Example: 'Bird voices at early morning'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Technican</entry>
	    <entry colname='c2'>
		Identifies the technican who digitized the subject file.
		Example: 'Torvalds, Linus'
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Track</entry>
	    <entry colname='c2'>
		Track of the CD if the source was a CDROM.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Tracks</entry>
	    <entry colname='c2'>
		Number of tracks of the CD if the source was a CDROM.
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Base Quality</entry>
	    <entry colname='c2'>
		Base quality of the compression in VBR mode
	    </entry>
	</row>
	<row>
	    <entry colname='c1'>&no-i18n-tag;Version</entry>
	    <entry colname='c2'>
		May be used to differentiate multiple versions
		of the same track title in a single collection.
		(e.g. remix info)
	    </entry>
	</row>

    </tbody>
    </tgroup>
    </table>
</appendix>

</book>
